
sahn025_FinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c6  00800100  00001e26  00001eba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e26  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008001c6  008001c6  00001f80  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001f80  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001fb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bcf  00000000  00000000  000020e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000094a  00000000  00000000  00003caf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002102  00000000  00000000  000045f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  000066fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b1a  00000000  00000000  0000692c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000687  00000000  00000000  00007446  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00007acd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	04 c1       	rjmp	.+520    	; 0x20a <__ctors_end>
       2:	00 00       	nop
       4:	21 c1       	rjmp	.+578    	; 0x248 <__bad_interrupt>
       6:	00 00       	nop
       8:	1f c1       	rjmp	.+574    	; 0x248 <__bad_interrupt>
       a:	00 00       	nop
       c:	1d c1       	rjmp	.+570    	; 0x248 <__bad_interrupt>
       e:	00 00       	nop
      10:	1b c1       	rjmp	.+566    	; 0x248 <__bad_interrupt>
      12:	00 00       	nop
      14:	19 c1       	rjmp	.+562    	; 0x248 <__bad_interrupt>
      16:	00 00       	nop
      18:	17 c1       	rjmp	.+558    	; 0x248 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	15 c1       	rjmp	.+554    	; 0x248 <__bad_interrupt>
      1e:	00 00       	nop
      20:	13 c1       	rjmp	.+550    	; 0x248 <__bad_interrupt>
      22:	00 00       	nop
      24:	11 c1       	rjmp	.+546    	; 0x248 <__bad_interrupt>
      26:	00 00       	nop
      28:	0f c1       	rjmp	.+542    	; 0x248 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0d c1       	rjmp	.+538    	; 0x248 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0b c1       	rjmp	.+534    	; 0x248 <__bad_interrupt>
      32:	00 00       	nop
      34:	86 c1       	rjmp	.+780    	; 0x342 <__vector_13>
      36:	00 00       	nop
      38:	07 c1       	rjmp	.+526    	; 0x248 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	05 c1       	rjmp	.+522    	; 0x248 <__bad_interrupt>
      3e:	00 00       	nop
      40:	03 c1       	rjmp	.+518    	; 0x248 <__bad_interrupt>
      42:	00 00       	nop
      44:	01 c1       	rjmp	.+514    	; 0x248 <__bad_interrupt>
      46:	00 00       	nop
      48:	ff c0       	rjmp	.+510    	; 0x248 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fd c0       	rjmp	.+506    	; 0x248 <__bad_interrupt>
      4e:	00 00       	nop
      50:	fb c0       	rjmp	.+502    	; 0x248 <__bad_interrupt>
      52:	00 00       	nop
      54:	f9 c0       	rjmp	.+498    	; 0x248 <__bad_interrupt>
      56:	00 00       	nop
      58:	f7 c0       	rjmp	.+494    	; 0x248 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f5 c0       	rjmp	.+490    	; 0x248 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f3 c0       	rjmp	.+486    	; 0x248 <__bad_interrupt>
      62:	00 00       	nop
      64:	f1 c0       	rjmp	.+482    	; 0x248 <__bad_interrupt>
      66:	00 00       	nop
      68:	ef c0       	rjmp	.+478    	; 0x248 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ed c0       	rjmp	.+474    	; 0x248 <__bad_interrupt>
      6e:	00 00       	nop
      70:	eb c0       	rjmp	.+470    	; 0x248 <__bad_interrupt>
      72:	00 00       	nop
      74:	e9 c0       	rjmp	.+466    	; 0x248 <__bad_interrupt>
      76:	00 00       	nop
      78:	e7 c0       	rjmp	.+462    	; 0x248 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e5 c0       	rjmp	.+458    	; 0x248 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e3 c0       	rjmp	.+454    	; 0x248 <__bad_interrupt>
      82:	00 00       	nop
      84:	e1 c0       	rjmp	.+450    	; 0x248 <__bad_interrupt>
      86:	00 00       	nop
      88:	df c0       	rjmp	.+446    	; 0x248 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	47 04       	cpc	r4, r7
      8e:	5f 04       	cpc	r5, r15
      90:	63 04       	cpc	r6, r3
      92:	67 04       	cpc	r6, r7
      94:	6b 04       	cpc	r6, r11
      96:	6f 04       	cpc	r6, r15
      98:	73 04       	cpc	r7, r3
      9a:	89 04       	cpc	r8, r9
      9c:	8b 04       	cpc	r8, r11
      9e:	8e 04       	cpc	r8, r14
      a0:	91 04       	cpc	r9, r1
      a2:	94 04       	cpc	r9, r4
      a4:	97 04       	cpc	r9, r7
      a6:	9a 04       	cpc	r9, r10
      a8:	aa 04       	cpc	r10, r10
      aa:	cc 04       	cpc	r12, r12
      ac:	ee 04       	cpc	r14, r14
      ae:	10 05       	cpc	r17, r0
      b0:	32 05       	cpc	r19, r2
      b2:	54 05       	cpc	r21, r4
      b4:	76 05       	cpc	r23, r6
      b6:	94 05       	cpc	r25, r4
      b8:	9b 05       	cpc	r25, r11
      ba:	a2 05       	cpc	r26, r2
      bc:	a9 05       	cpc	r26, r9
      be:	b0 05       	cpc	r27, r0
      c0:	b7 05       	cpc	r27, r7
      c2:	8d 05       	cpc	r24, r13
      c4:	c1 05       	cpc	r28, r1
      c6:	d6 05       	cpc	r29, r6
      c8:	e9 05       	cpc	r30, r9
      ca:	ed 05       	cpc	r30, r13
      cc:	f1 05       	cpc	r31, r1
      ce:	f5 05       	cpc	r31, r5
      d0:	f9 05       	cpc	r31, r9
      d2:	fd 05       	cpc	r31, r13
      d4:	01 06       	cpc	r0, r17
      d6:	05 06       	cpc	r0, r21
      d8:	09 06       	cpc	r0, r25
      da:	18 06       	cpc	r1, r24
      dc:	1a 06       	cpc	r1, r26
      de:	1d 06       	cpc	r1, r29
      e0:	20 06       	cpc	r2, r16
      e2:	23 06       	cpc	r2, r19
      e4:	26 06       	cpc	r2, r22
      e6:	29 06       	cpc	r2, r25
      e8:	2c 06       	cpc	r2, r28
      ea:	2f 06       	cpc	r2, r31
      ec:	32 06       	cpc	r3, r18
      ee:	49 06       	cpc	r4, r25
      f0:	79 06       	cpc	r7, r25
      f2:	9b 06       	cpc	r9, r27
      f4:	bd 06       	cpc	r11, r29
      f6:	df 06       	cpc	r13, r31
      f8:	01 07       	cpc	r16, r17
      fa:	23 07       	cpc	r18, r19
      fc:	45 07       	cpc	r20, r21
      fe:	67 07       	cpc	r22, r23
     100:	89 07       	cpc	r24, r25
     102:	71 06       	cpc	r7, r17
     104:	a3 07       	cpc	r26, r19
     106:	aa 07       	cpc	r26, r26
     108:	b1 07       	cpc	r27, r17
     10a:	b8 07       	cpc	r27, r24
     10c:	bf 07       	cpc	r27, r31
     10e:	c6 07       	cpc	r28, r22
     110:	cd 07       	cpc	r28, r29
     112:	d4 07       	cpc	r29, r20
     114:	db 07       	cpc	r29, r27
     116:	9c 07       	cpc	r25, r28
     118:	e6 07       	cpc	r30, r22
     11a:	fb 07       	cpc	r31, r27
     11c:	0e 08       	sbc	r0, r14
     11e:	12 08       	sbc	r1, r2
     120:	16 08       	sbc	r1, r6
     122:	1a 08       	sbc	r1, r10
     124:	1e 08       	sbc	r1, r14
     126:	22 08       	sbc	r2, r2
     128:	26 08       	sbc	r2, r6
     12a:	2a 08       	sbc	r2, r10
     12c:	2e 08       	sbc	r2, r14
     12e:	32 08       	sbc	r3, r2
     130:	36 08       	sbc	r3, r6
     132:	3a 08       	sbc	r3, r10
     134:	48 08       	sbc	r4, r8
     136:	4a 08       	sbc	r4, r10
     138:	4d 08       	sbc	r4, r13
     13a:	50 08       	sbc	r5, r0
     13c:	53 08       	sbc	r5, r3
     13e:	56 08       	sbc	r5, r6
     140:	59 08       	sbc	r5, r9
     142:	5c 08       	sbc	r5, r12
     144:	5f 08       	sbc	r5, r15
     146:	62 08       	sbc	r6, r2
     148:	65 08       	sbc	r6, r5
     14a:	68 08       	sbc	r6, r8
     14c:	6b 08       	sbc	r6, r11
     14e:	81 08       	sbc	r8, r1
     150:	a9 08       	sbc	r10, r9
     152:	cb 08       	sbc	r12, r11
     154:	ed 08       	sbc	r14, r13
     156:	0f 09       	sbc	r16, r15
     158:	31 09       	sbc	r19, r1
     15a:	53 09       	sbc	r21, r3
     15c:	75 09       	sbc	r23, r5
     15e:	97 09       	sbc	r25, r7
     160:	b9 09       	sbc	r27, r9
     162:	db 09       	sbc	r29, r11
     164:	fd 09       	sbc	r31, r13
     166:	1f 0a       	sbc	r1, r31
     168:	25 0a       	sbc	r2, r21
     16a:	41 0a       	sbc	r4, r17
     16c:	48 0a       	sbc	r4, r24
     16e:	4f 0a       	sbc	r4, r31
     170:	56 0a       	sbc	r5, r22
     172:	5d 0a       	sbc	r5, r29
     174:	64 0a       	sbc	r6, r20
     176:	6b 0a       	sbc	r6, r27
     178:	72 0a       	sbc	r7, r18
     17a:	79 0a       	sbc	r7, r25
     17c:	80 0a       	sbc	r8, r16
     17e:	87 0a       	sbc	r8, r23
     180:	8e 0a       	sbc	r8, r30
     182:	3a 0a       	sbc	r3, r26
     184:	9b 0a       	sbc	r9, r27
     186:	b1 0a       	sbc	r11, r17
     188:	c6 0a       	sbc	r12, r22
     18a:	ca 0a       	sbc	r12, r26
     18c:	ce 0a       	sbc	r12, r30
     18e:	d2 0a       	sbc	r13, r18
     190:	d6 0a       	sbc	r13, r22
     192:	da 0a       	sbc	r13, r26
     194:	de 0a       	sbc	r13, r30
     196:	e2 0a       	sbc	r14, r18
     198:	e6 0a       	sbc	r14, r22
     19a:	ea 0a       	sbc	r14, r26
     19c:	ee 0a       	sbc	r14, r30
     19e:	f2 0a       	sbc	r15, r18
     1a0:	f6 0a       	sbc	r15, r22
     1a2:	fa 0a       	sbc	r15, r26
     1a4:	fe 0a       	sbc	r15, r30
     1a6:	0c 0b       	sbc	r16, r28
     1a8:	0e 0b       	sbc	r16, r30
     1aa:	11 0b       	sbc	r17, r17
     1ac:	14 0b       	sbc	r17, r20
     1ae:	17 0b       	sbc	r17, r23
     1b0:	1a 0b       	sbc	r17, r26
     1b2:	1d 0b       	sbc	r17, r29
     1b4:	20 0b       	sbc	r18, r16
     1b6:	23 0b       	sbc	r18, r19
     1b8:	26 0b       	sbc	r18, r22
     1ba:	29 0b       	sbc	r18, r25
     1bc:	2c 0b       	sbc	r18, r28
     1be:	2f 0b       	sbc	r18, r31
     1c0:	32 0b       	sbc	r19, r18
     1c2:	35 0b       	sbc	r19, r21
     1c4:	38 0b       	sbc	r19, r24
     1c6:	4f 0b       	sbc	r20, r31
     1c8:	77 0b       	sbc	r23, r23
     1ca:	99 0b       	sbc	r25, r25
     1cc:	bb 0b       	sbc	r27, r27
     1ce:	dd 0b       	sbc	r29, r29
     1d0:	ff 0b       	sbc	r31, r31
     1d2:	21 0c       	add	r2, r1
     1d4:	43 0c       	add	r4, r3
     1d6:	65 0c       	add	r6, r5
     1d8:	87 0c       	add	r8, r7
     1da:	a9 0c       	add	r10, r9
     1dc:	cb 0c       	add	r12, r11
     1de:	ed 0c       	add	r14, r13
     1e0:	0f 0d       	add	r16, r15
     1e2:	31 0d       	add	r19, r1
     1e4:	53 0d       	add	r21, r3
     1e6:	59 0d       	add	r21, r9
     1e8:	77 0d       	add	r23, r7
     1ea:	80 0d       	add	r24, r0
     1ec:	89 0d       	add	r24, r9
     1ee:	92 0d       	add	r25, r2
     1f0:	9b 0d       	add	r25, r11
     1f2:	a4 0d       	add	r26, r4
     1f4:	ad 0d       	add	r26, r13
     1f6:	b6 0d       	add	r27, r6
     1f8:	bf 0d       	add	r27, r15
     1fa:	c8 0d       	add	r28, r8
     1fc:	d1 0d       	add	r29, r1
     1fe:	da 0d       	add	r29, r10
     200:	e3 0d       	add	r30, r3
     202:	ec 0d       	add	r30, r12
     204:	f5 0d       	add	r31, r5
     206:	6e 0d       	add	r22, r14
     208:	03 0e       	add	r0, r19

0000020a <__ctors_end>:
     20a:	11 24       	eor	r1, r1
     20c:	1f be       	out	0x3f, r1	; 63
     20e:	cf ef       	ldi	r28, 0xFF	; 255
     210:	d0 e4       	ldi	r29, 0x40	; 64
     212:	de bf       	out	0x3e, r29	; 62
     214:	cd bf       	out	0x3d, r28	; 61

00000216 <__do_copy_data>:
     216:	11 e0       	ldi	r17, 0x01	; 1
     218:	a0 e0       	ldi	r26, 0x00	; 0
     21a:	b1 e0       	ldi	r27, 0x01	; 1
     21c:	e6 e2       	ldi	r30, 0x26	; 38
     21e:	fe e1       	ldi	r31, 0x1E	; 30
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0b bf       	out	0x3b, r16	; 59
     224:	02 c0       	rjmp	.+4      	; 0x22a <__do_copy_data+0x14>
     226:	07 90       	elpm	r0, Z+
     228:	0d 92       	st	X+, r0
     22a:	a6 3c       	cpi	r26, 0xC6	; 198
     22c:	b1 07       	cpc	r27, r17
     22e:	d9 f7       	brne	.-10     	; 0x226 <__do_copy_data+0x10>

00000230 <__do_clear_bss>:
     230:	21 e0       	ldi	r18, 0x01	; 1
     232:	a6 ec       	ldi	r26, 0xC6	; 198
     234:	b1 e0       	ldi	r27, 0x01	; 1
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	a8 3d       	cpi	r26, 0xD8	; 216
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <main>
     244:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <_exit>

00000248 <__bad_interrupt>:
     248:	db ce       	rjmp	.-586    	; 0x0 <__vectors>

0000024a <delay_ms>:
	else {
		data = simon_SevenSeg(0);
	}
	transmit_data(data);
	PORTD = (PORTD & 0xF8) | 0x01;
}
     24a:	18 16       	cp	r1, r24
     24c:	19 06       	cpc	r1, r25
     24e:	5c f0       	brlt	.+22     	; 0x266 <delay_ms+0x1c>
     250:	08 95       	ret
     252:	00 00       	nop
     254:	21 50       	subi	r18, 0x01	; 1
     256:	31 09       	sbc	r19, r1
     258:	e1 f7       	brne	.-8      	; 0x252 <delay_ms+0x8>
     25a:	4f 5f       	subi	r20, 0xFF	; 255
     25c:	5f 4f       	sbci	r21, 0xFF	; 255
     25e:	84 17       	cp	r24, r20
     260:	95 07       	cpc	r25, r21
     262:	19 f4       	brne	.+6      	; 0x26a <delay_ms+0x20>
     264:	08 95       	ret
     266:	40 e0       	ldi	r20, 0x00	; 0
     268:	50 e0       	ldi	r21, 0x00	; 0
     26a:	27 e0       	ldi	r18, 0x07	; 7
     26c:	33 e0       	ldi	r19, 0x03	; 3
     26e:	f1 cf       	rjmp	.-30     	; 0x252 <delay_ms+0x8>

00000270 <LCD_WriteCommand>:
     270:	5e 98       	cbi	0x0b, 6	; 11
     272:	88 b9       	out	0x08, r24	; 8
     274:	5f 9a       	sbi	0x0b, 7	; 11
     276:	00 00       	nop
     278:	5f 98       	cbi	0x0b, 7	; 11
     27a:	82 e0       	ldi	r24, 0x02	; 2
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	e5 cf       	rjmp	.-54     	; 0x24a <delay_ms>
     280:	08 95       	ret

00000282 <LCD_ClearScreen>:
     282:	81 e0       	ldi	r24, 0x01	; 1
     284:	f5 cf       	rjmp	.-22     	; 0x270 <LCD_WriteCommand>
     286:	08 95       	ret

00000288 <LCD_Cursor>:
     288:	81 31       	cpi	r24, 0x11	; 17
     28a:	18 f4       	brcc	.+6      	; 0x292 <LCD_Cursor+0xa>
     28c:	81 58       	subi	r24, 0x81	; 129
     28e:	f0 cf       	rjmp	.-32     	; 0x270 <LCD_WriteCommand>
     290:	08 95       	ret
     292:	81 55       	subi	r24, 0x51	; 81
     294:	ed cf       	rjmp	.-38     	; 0x270 <LCD_WriteCommand>
     296:	08 95       	ret

00000298 <LCD_init>:
     298:	84 e6       	ldi	r24, 0x64	; 100
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	d6 df       	rcall	.-84     	; 0x24a <delay_ms>
     29e:	88 e3       	ldi	r24, 0x38	; 56
     2a0:	e7 df       	rcall	.-50     	; 0x270 <LCD_WriteCommand>
     2a2:	86 e0       	ldi	r24, 0x06	; 6
     2a4:	e5 df       	rcall	.-54     	; 0x270 <LCD_WriteCommand>
     2a6:	8f e0       	ldi	r24, 0x0F	; 15
     2a8:	e3 df       	rcall	.-58     	; 0x270 <LCD_WriteCommand>
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	e1 df       	rcall	.-62     	; 0x270 <LCD_WriteCommand>
     2ae:	8a e0       	ldi	r24, 0x0A	; 10
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	cb cf       	rjmp	.-106    	; 0x24a <delay_ms>
     2b4:	08 95       	ret

000002b6 <LCD_WriteData>:
     2b6:	5e 9a       	sbi	0x0b, 6	; 11
     2b8:	88 b9       	out	0x08, r24	; 8
     2ba:	5f 9a       	sbi	0x0b, 7	; 11
     2bc:	00 00       	nop
     2be:	5f 98       	cbi	0x0b, 7	; 11
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	c2 cf       	rjmp	.-124    	; 0x24a <delay_ms>
     2c6:	08 95       	ret

000002c8 <LCD_DisplayString>:
     2c8:	0f 93       	push	r16
     2ca:	1f 93       	push	r17
     2cc:	cf 93       	push	r28
     2ce:	df 93       	push	r29
     2d0:	18 2f       	mov	r17, r24
     2d2:	eb 01       	movw	r28, r22
     2d4:	d6 df       	rcall	.-84     	; 0x282 <LCD_ClearScreen>
     2d6:	88 81       	ld	r24, Y
     2d8:	88 23       	and	r24, r24
     2da:	51 f0       	breq	.+20     	; 0x2f0 <LCD_DisplayString+0x28>
     2dc:	01 e0       	ldi	r16, 0x01	; 1
     2de:	01 0f       	add	r16, r17
     2e0:	81 2f       	mov	r24, r17
     2e2:	d2 df       	rcall	.-92     	; 0x288 <LCD_Cursor>
     2e4:	89 91       	ld	r24, Y+
     2e6:	e7 df       	rcall	.-50     	; 0x2b6 <LCD_WriteData>
     2e8:	10 2f       	mov	r17, r16
     2ea:	88 81       	ld	r24, Y
     2ec:	81 11       	cpse	r24, r1
     2ee:	f6 cf       	rjmp	.-20     	; 0x2dc <LCD_DisplayString+0x14>
     2f0:	df 91       	pop	r29
     2f2:	cf 91       	pop	r28
     2f4:	1f 91       	pop	r17
     2f6:	0f 91       	pop	r16
     2f8:	08 95       	ret

000002fa <TimerOn>:
     2fa:	8b e0       	ldi	r24, 0x0B	; 11
     2fc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     300:	8d e7       	ldi	r24, 0x7D	; 125
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     308:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     30c:	82 e0       	ldi	r24, 0x02	; 2
     30e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     312:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     316:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     31a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_avr_timer_M>
     31e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_avr_timer_M+0x1>
     322:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <_avr_timer_M+0x2>
     326:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <_avr_timer_M+0x3>
     32a:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <_avr_timer_cntcurr>
     32e:	90 93 c8 01 	sts	0x01C8, r25	; 0x8001c8 <_avr_timer_cntcurr+0x1>
     332:	a0 93 c9 01 	sts	0x01C9, r26	; 0x8001c9 <_avr_timer_cntcurr+0x2>
     336:	b0 93 ca 01 	sts	0x01CA, r27	; 0x8001ca <_avr_timer_cntcurr+0x3>
     33a:	8f b7       	in	r24, 0x3f	; 63
     33c:	80 68       	ori	r24, 0x80	; 128
     33e:	8f bf       	out	0x3f, r24	; 63
     340:	08 95       	ret

00000342 <__vector_13>:
     342:	1f 92       	push	r1
     344:	0f 92       	push	r0
     346:	0f b6       	in	r0, 0x3f	; 63
     348:	0f 92       	push	r0
     34a:	11 24       	eor	r1, r1
     34c:	8f 93       	push	r24
     34e:	9f 93       	push	r25
     350:	af 93       	push	r26
     352:	bf 93       	push	r27
     354:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <_avr_timer_cntcurr>
     358:	90 91 c8 01 	lds	r25, 0x01C8	; 0x8001c8 <_avr_timer_cntcurr+0x1>
     35c:	a0 91 c9 01 	lds	r26, 0x01C9	; 0x8001c9 <_avr_timer_cntcurr+0x2>
     360:	b0 91 ca 01 	lds	r27, 0x01CA	; 0x8001ca <_avr_timer_cntcurr+0x3>
     364:	01 97       	sbiw	r24, 0x01	; 1
     366:	a1 09       	sbc	r26, r1
     368:	b1 09       	sbc	r27, r1
     36a:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <_avr_timer_cntcurr>
     36e:	90 93 c8 01 	sts	0x01C8, r25	; 0x8001c8 <_avr_timer_cntcurr+0x1>
     372:	a0 93 c9 01 	sts	0x01C9, r26	; 0x8001c9 <_avr_timer_cntcurr+0x2>
     376:	b0 93 ca 01 	sts	0x01CA, r27	; 0x8001ca <_avr_timer_cntcurr+0x3>
     37a:	89 2b       	or	r24, r25
     37c:	8a 2b       	or	r24, r26
     37e:	8b 2b       	or	r24, r27
     380:	99 f4       	brne	.+38     	; 0x3a8 <__vector_13+0x66>
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <TimerFlag>
     388:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_avr_timer_M>
     38c:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_avr_timer_M+0x1>
     390:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <_avr_timer_M+0x2>
     394:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <_avr_timer_M+0x3>
     398:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <_avr_timer_cntcurr>
     39c:	90 93 c8 01 	sts	0x01C8, r25	; 0x8001c8 <_avr_timer_cntcurr+0x1>
     3a0:	a0 93 c9 01 	sts	0x01C9, r26	; 0x8001c9 <_avr_timer_cntcurr+0x2>
     3a4:	b0 93 ca 01 	sts	0x01CA, r27	; 0x8001ca <_avr_timer_cntcurr+0x3>
     3a8:	bf 91       	pop	r27
     3aa:	af 91       	pop	r26
     3ac:	9f 91       	pop	r25
     3ae:	8f 91       	pop	r24
     3b0:	0f 90       	pop	r0
     3b2:	0f be       	out	0x3f, r0	; 63
     3b4:	0f 90       	pop	r0
     3b6:	1f 90       	pop	r1
     3b8:	18 95       	reti

000003ba <TimerSet>:
     3ba:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <_avr_timer_M>
     3be:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <_avr_timer_M+0x1>
     3c2:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <_avr_timer_M+0x2>
     3c6:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <_avr_timer_M+0x3>
     3ca:	60 93 c7 01 	sts	0x01C7, r22	; 0x8001c7 <_avr_timer_cntcurr>
     3ce:	70 93 c8 01 	sts	0x01C8, r23	; 0x8001c8 <_avr_timer_cntcurr+0x1>
     3d2:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <_avr_timer_cntcurr+0x2>
     3d6:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <_avr_timer_cntcurr+0x3>
     3da:	08 95       	ret

000003dc <Custom_Char>:
     3dc:	ef 92       	push	r14
     3de:	ff 92       	push	r15
     3e0:	0f 93       	push	r16
     3e2:	1f 93       	push	r17
     3e4:	cf 93       	push	r28
     3e6:	df 93       	push	r29
     3e8:	cd b7       	in	r28, 0x3d	; 61
     3ea:	de b7       	in	r29, 0x3e	; 62
     3ec:	a8 97       	sbiw	r28, 0x28	; 40
     3ee:	0f b6       	in	r0, 0x3f	; 63
     3f0:	f8 94       	cli
     3f2:	de bf       	out	0x3e, r29	; 62
     3f4:	0f be       	out	0x3f, r0	; 63
     3f6:	cd bf       	out	0x3d, r28	; 61
     3f8:	98 e0       	ldi	r25, 0x08	; 8
     3fa:	8e 01       	movw	r16, r28
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
     400:	d8 01       	movw	r26, r16
     402:	e9 2f       	mov	r30, r25
     404:	1d 92       	st	X+, r1
     406:	ea 95       	dec	r30
     408:	e9 f7       	brne	.-6      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     40a:	3e e0       	ldi	r19, 0x0E	; 14
     40c:	39 83       	std	Y+1, r19	; 0x01
     40e:	8b e1       	ldi	r24, 0x1B	; 27
     410:	8a 83       	std	Y+2, r24	; 0x02
     412:	8e e1       	ldi	r24, 0x1E	; 30
     414:	8b 83       	std	Y+3, r24	; 0x03
     416:	2c e1       	ldi	r18, 0x1C	; 28
     418:	2c 83       	std	Y+4, r18	; 0x04
     41a:	8d 83       	std	Y+5, r24	; 0x05
     41c:	2f e1       	ldi	r18, 0x1F	; 31
     41e:	2e 83       	std	Y+6, r18	; 0x06
     420:	3f 83       	std	Y+7, r19	; 0x07
     422:	7e 01       	movw	r14, r28
     424:	f9 e0       	ldi	r31, 0x09	; 9
     426:	ef 0e       	add	r14, r31
     428:	f1 1c       	adc	r15, r1
     42a:	d7 01       	movw	r26, r14
     42c:	e9 2f       	mov	r30, r25
     42e:	1d 92       	st	X+, r1
     430:	ea 95       	dec	r30
     432:	e9 f7       	brne	.-6      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     434:	8c e0       	ldi	r24, 0x0C	; 12
     436:	8d 87       	std	Y+13, r24	; 0x0d
     438:	8e 87       	std	Y+14, r24	; 0x0e
     43a:	fe 01       	movw	r30, r28
     43c:	71 96       	adiw	r30, 0x11	; 17
     43e:	df 01       	movw	r26, r30
     440:	49 2f       	mov	r20, r25
     442:	1d 92       	st	X+, r1
     444:	4a 95       	dec	r20
     446:	e9 f7       	brne	.-6      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     448:	8d 8b       	std	Y+21, r24	; 0x15
     44a:	8e 8b       	std	Y+22, r24	; 0x16
     44c:	38 96       	adiw	r30, 0x08	; 8
     44e:	df 01       	movw	r26, r30
     450:	49 2f       	mov	r20, r25
     452:	1d 92       	st	X+, r1
     454:	4a 95       	dec	r20
     456:	e9 f7       	brne	.-6      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     458:	8d 8f       	std	Y+29, r24	; 0x1d
     45a:	8e 8f       	std	Y+30, r24	; 0x1e
     45c:	38 96       	adiw	r30, 0x08	; 8
     45e:	df 01       	movw	r26, r30
     460:	1d 92       	st	X+, r1
     462:	9a 95       	dec	r25
     464:	e9 f7       	brne	.-6      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     466:	39 a3       	std	Y+33, r19	; 0x21
     468:	3a a3       	std	Y+34, r19	; 0x22
     46a:	2b a3       	std	Y+35, r18	; 0x23
     46c:	85 e1       	ldi	r24, 0x15	; 21
     46e:	8c a3       	std	Y+36, r24	; 0x24
     470:	2d a3       	std	Y+37, r18	; 0x25
     472:	2e a3       	std	Y+38, r18	; 0x26
     474:	8f a3       	std	Y+39, r24	; 0x27
     476:	80 e4       	ldi	r24, 0x40	; 64
     478:	fb de       	rcall	.-522    	; 0x270 <LCD_WriteCommand>
     47a:	f8 01       	movw	r30, r16
     47c:	81 91       	ld	r24, Z+
     47e:	8f 01       	movw	r16, r30
     480:	1a df       	rcall	.-460    	; 0x2b6 <LCD_WriteData>
     482:	e0 16       	cp	r14, r16
     484:	f1 06       	cpc	r15, r17
     486:	c9 f7       	brne	.-14     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     488:	8e 01       	movw	r16, r28
     48a:	07 5f       	subi	r16, 0xF7	; 247
     48c:	1f 4f       	sbci	r17, 0xFF	; 255
     48e:	7e 01       	movw	r14, r28
     490:	f1 e1       	ldi	r31, 0x11	; 17
     492:	ef 0e       	add	r14, r31
     494:	f1 1c       	adc	r15, r1
     496:	d8 01       	movw	r26, r16
     498:	8d 91       	ld	r24, X+
     49a:	8d 01       	movw	r16, r26
     49c:	0c df       	rcall	.-488    	; 0x2b6 <LCD_WriteData>
     49e:	e0 16       	cp	r14, r16
     4a0:	f1 06       	cpc	r15, r17
     4a2:	c9 f7       	brne	.-14     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     4a4:	8e 01       	movw	r16, r28
     4a6:	0f 5e       	subi	r16, 0xEF	; 239
     4a8:	1f 4f       	sbci	r17, 0xFF	; 255
     4aa:	7e 01       	movw	r14, r28
     4ac:	b9 e1       	ldi	r27, 0x19	; 25
     4ae:	eb 0e       	add	r14, r27
     4b0:	f1 1c       	adc	r15, r1
     4b2:	f8 01       	movw	r30, r16
     4b4:	81 91       	ld	r24, Z+
     4b6:	8f 01       	movw	r16, r30
     4b8:	fe de       	rcall	.-516    	; 0x2b6 <LCD_WriteData>
     4ba:	e0 16       	cp	r14, r16
     4bc:	f1 06       	cpc	r15, r17
     4be:	c9 f7       	brne	.-14     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
     4c0:	8e 01       	movw	r16, r28
     4c2:	07 5e       	subi	r16, 0xE7	; 231
     4c4:	1f 4f       	sbci	r17, 0xFF	; 255
     4c6:	7e 01       	movw	r14, r28
     4c8:	f1 e2       	ldi	r31, 0x21	; 33
     4ca:	ef 0e       	add	r14, r31
     4cc:	f1 1c       	adc	r15, r1
     4ce:	d8 01       	movw	r26, r16
     4d0:	8d 91       	ld	r24, X+
     4d2:	8d 01       	movw	r16, r26
     4d4:	f0 de       	rcall	.-544    	; 0x2b6 <LCD_WriteData>
     4d6:	e0 16       	cp	r14, r16
     4d8:	f1 06       	cpc	r15, r17
     4da:	c9 f7       	brne	.-14     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4dc:	8e 01       	movw	r16, r28
     4de:	0f 5d       	subi	r16, 0xDF	; 223
     4e0:	1f 4f       	sbci	r17, 0xFF	; 255
     4e2:	7e 01       	movw	r14, r28
     4e4:	b9 e2       	ldi	r27, 0x29	; 41
     4e6:	eb 0e       	add	r14, r27
     4e8:	f1 1c       	adc	r15, r1
     4ea:	f8 01       	movw	r30, r16
     4ec:	81 91       	ld	r24, Z+
     4ee:	8f 01       	movw	r16, r30
     4f0:	e2 de       	rcall	.-572    	; 0x2b6 <LCD_WriteData>
     4f2:	0e 15       	cp	r16, r14
     4f4:	1f 05       	cpc	r17, r15
     4f6:	c9 f7       	brne	.-14     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
     4f8:	80 e8       	ldi	r24, 0x80	; 128
     4fa:	ba de       	rcall	.-652    	; 0x270 <LCD_WriteCommand>
     4fc:	a8 96       	adiw	r28, 0x28	; 40
     4fe:	0f b6       	in	r0, 0x3f	; 63
     500:	f8 94       	cli
     502:	de bf       	out	0x3e, r29	; 62
     504:	0f be       	out	0x3f, r0	; 63
     506:	cd bf       	out	0x3d, r28	; 61
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	1f 91       	pop	r17
     50e:	0f 91       	pop	r16
     510:	ff 90       	pop	r15
     512:	ef 90       	pop	r14
     514:	08 95       	ret

00000516 <transmit_data>:
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	e8 2f       	mov	r30, r24
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	9b b1       	in	r25, 0x0b	; 11
     520:	90 7f       	andi	r25, 0xF0	; 240
     522:	98 60       	ori	r25, 0x08	; 8
     524:	9b b9       	out	0x0b, r25	; 11
     526:	4b b1       	in	r20, 0x0b	; 11
     528:	bf 01       	movw	r22, r30
     52a:	02 2e       	mov	r0, r18
     52c:	02 c0       	rjmp	.+4      	; 0x532 <transmit_data+0x1c>
     52e:	75 95       	asr	r23
     530:	67 95       	ror	r22
     532:	0a 94       	dec	r0
     534:	e2 f7       	brpl	.-8      	; 0x52e <transmit_data+0x18>
     536:	96 2f       	mov	r25, r22
     538:	91 70       	andi	r25, 0x01	; 1
     53a:	94 2b       	or	r25, r20
     53c:	9b b9       	out	0x0b, r25	; 11
     53e:	59 9a       	sbi	0x0b, 1	; 11
     540:	2f 5f       	subi	r18, 0xFF	; 255
     542:	3f 4f       	sbci	r19, 0xFF	; 255
     544:	28 30       	cpi	r18, 0x08	; 8
     546:	31 05       	cpc	r19, r1
     548:	51 f7       	brne	.-44     	; 0x51e <transmit_data+0x8>
     54a:	5a 9a       	sbi	0x0b, 2	; 11
     54c:	8b b1       	in	r24, 0x0b	; 11
     54e:	80 7f       	andi	r24, 0xF0	; 240
     550:	8b b9       	out	0x0b, r24	; 11
     552:	08 95       	ret

00000554 <simon_SevenSeg>:
     554:	89 30       	cpi	r24, 0x09	; 9
     556:	a1 f0       	breq	.+40     	; 0x580 <simon_SevenSeg+0x2c>
     558:	88 30       	cpi	r24, 0x08	; 8
     55a:	a1 f0       	breq	.+40     	; 0x584 <simon_SevenSeg+0x30>
     55c:	87 30       	cpi	r24, 0x07	; 7
     55e:	a1 f0       	breq	.+40     	; 0x588 <simon_SevenSeg+0x34>
     560:	86 30       	cpi	r24, 0x06	; 6
     562:	a1 f0       	breq	.+40     	; 0x58c <simon_SevenSeg+0x38>
     564:	85 30       	cpi	r24, 0x05	; 5
     566:	a1 f0       	breq	.+40     	; 0x590 <simon_SevenSeg+0x3c>
     568:	84 30       	cpi	r24, 0x04	; 4
     56a:	a1 f0       	breq	.+40     	; 0x594 <simon_SevenSeg+0x40>
     56c:	83 30       	cpi	r24, 0x03	; 3
     56e:	a1 f0       	breq	.+40     	; 0x598 <simon_SevenSeg+0x44>
     570:	82 30       	cpi	r24, 0x02	; 2
     572:	a1 f0       	breq	.+40     	; 0x59c <simon_SevenSeg+0x48>
     574:	81 30       	cpi	r24, 0x01	; 1
     576:	a1 f0       	breq	.+40     	; 0x5a0 <simon_SevenSeg+0x4c>
     578:	81 11       	cpse	r24, r1
     57a:	14 c0       	rjmp	.+40     	; 0x5a4 <simon_SevenSeg+0x50>
     57c:	80 e4       	ldi	r24, 0x40	; 64
     57e:	08 95       	ret
     580:	88 e1       	ldi	r24, 0x18	; 24
     582:	08 95       	ret
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	08 95       	ret
     588:	89 e5       	ldi	r24, 0x59	; 89
     58a:	08 95       	ret
     58c:	84 e0       	ldi	r24, 0x04	; 4
     58e:	08 95       	ret
     590:	8c e0       	ldi	r24, 0x0C	; 12
     592:	08 95       	ret
     594:	8a e1       	ldi	r24, 0x1A	; 26
     596:	08 95       	ret
     598:	89 e0       	ldi	r24, 0x09	; 9
     59a:	08 95       	ret
     59c:	81 e2       	ldi	r24, 0x21	; 33
     59e:	08 95       	ret
     5a0:	8b e5       	ldi	r24, 0x5B	; 91
     5a2:	08 95       	ret
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	08 95       	ret

000005a8 <TickFct_State_machine_1>:

//-------------------------------------------------------------------------
enum SM1_States { init10, SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;
void TickFct_State_machine_1()
{
	switch(SM1_State)
     5a8:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SM1_State>
     5ac:	82 30       	cpi	r24, 0x02	; 2
     5ae:	09 f4       	brne	.+2      	; 0x5b2 <TickFct_State_machine_1+0xa>
     5b0:	3e c0       	rjmp	.+124    	; 0x62e <TickFct_State_machine_1+0x86>
     5b2:	28 f4       	brcc	.+10     	; 0x5be <TickFct_State_machine_1+0x16>
     5b4:	88 23       	and	r24, r24
     5b6:	61 f0       	breq	.+24     	; 0x5d0 <TickFct_State_machine_1+0x28>
     5b8:	81 30       	cpi	r24, 0x01	; 1
     5ba:	79 f1       	breq	.+94     	; 0x61a <TickFct_State_machine_1+0x72>
     5bc:	4a c0       	rjmp	.+148    	; 0x652 <TickFct_State_machine_1+0xaa>
     5be:	84 30       	cpi	r24, 0x04	; 4
     5c0:	09 f4       	brne	.+2      	; 0x5c4 <TickFct_State_machine_1+0x1c>
     5c2:	3d c0       	rjmp	.+122    	; 0x63e <TickFct_State_machine_1+0x96>
     5c4:	08 f4       	brcc	.+2      	; 0x5c8 <TickFct_State_machine_1+0x20>
     5c6:	37 c0       	rjmp	.+110    	; 0x636 <TickFct_State_machine_1+0x8e>
     5c8:	85 30       	cpi	r24, 0x05	; 5
     5ca:	09 f4       	brne	.+2      	; 0x5ce <TickFct_State_machine_1+0x26>
     5cc:	3c c0       	rjmp	.+120    	; 0x646 <TickFct_State_machine_1+0x9e>
     5ce:	41 c0       	rjmp	.+130    	; 0x652 <TickFct_State_machine_1+0xaa>
	{
		case init10:
		if(global_g == 0)
     5d0:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
     5d4:	81 11       	cpse	r24, r1
     5d6:	21 c0       	rjmp	.+66     	; 0x61a <TickFct_State_machine_1+0x72>
		{
			LCD_ClearScreen();
     5d8:	54 de       	rcall	.-856    	; 0x282 <LCD_ClearScreen>
			LCD_DisplayString(1,"Simon Says");
     5da:	65 e0       	ldi	r22, 0x05	; 5
     5dc:	71 e0       	ldi	r23, 0x01	; 1
     5de:	81 e0       	ldi	r24, 0x01	; 1
			Custom_Char();
     5e0:	73 de       	rcall	.-794    	; 0x2c8 <LCD_DisplayString>
			LCD_Cursor(17);
     5e2:	fc de       	rcall	.-520    	; 0x3dc <Custom_Char>
     5e4:	81 e1       	ldi	r24, 0x11	; 17
			LCD_WriteData(0);
     5e6:	50 de       	rcall	.-864    	; 0x288 <LCD_Cursor>
     5e8:	80 e0       	ldi	r24, 0x00	; 0
			LCD_Cursor(19);
     5ea:	65 de       	rcall	.-822    	; 0x2b6 <LCD_WriteData>
     5ec:	83 e1       	ldi	r24, 0x13	; 19
			LCD_WriteData(1);
     5ee:	4c de       	rcall	.-872    	; 0x288 <LCD_Cursor>
     5f0:	81 e0       	ldi	r24, 0x01	; 1
			LCD_Cursor(21);
     5f2:	61 de       	rcall	.-830    	; 0x2b6 <LCD_WriteData>
     5f4:	85 e1       	ldi	r24, 0x15	; 21
			LCD_WriteData(2);
     5f6:	48 de       	rcall	.-880    	; 0x288 <LCD_Cursor>
     5f8:	82 e0       	ldi	r24, 0x02	; 2
			LCD_Cursor(23);
     5fa:	5d de       	rcall	.-838    	; 0x2b6 <LCD_WriteData>
     5fc:	87 e1       	ldi	r24, 0x17	; 23
			LCD_WriteData(3);
     5fe:	44 de       	rcall	.-888    	; 0x288 <LCD_Cursor>
     600:	83 e0       	ldi	r24, 0x03	; 3
     602:	59 de       	rcall	.-846    	; 0x2b6 <LCD_WriteData>
			LCD_Cursor(25);
     604:	89 e1       	ldi	r24, 0x19	; 25
     606:	40 de       	rcall	.-896    	; 0x288 <LCD_Cursor>
     608:	84 e0       	ldi	r24, 0x04	; 4
			LCD_WriteData(4);
     60a:	55 de       	rcall	.-854    	; 0x2b6 <LCD_WriteData>
     60c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
			transmit_data(simon_SevenSeg(lives));
     610:	a1 df       	rcall	.-190    	; 0x554 <simon_SevenSeg>
     612:	81 df       	rcall	.-254    	; 0x516 <transmit_data>
     614:	81 e0       	ldi	r24, 0x01	; 1
     616:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SM1_State>
     61a:	1c 99       	sbic	0x03, 4	; 3
			SM1_State = SM1_off;
     61c:	04 c0       	rjmp	.+8      	; 0x626 <TickFct_State_machine_1+0x7e>
     61e:	82 e0       	ldi	r24, 0x02	; 2
     620:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SM1_State>
		}
		case SM1_off:
		if(~PINB & 0x10)
     624:	25 c0       	rjmp	.+74     	; 0x670 <TickFct_State_machine_1+0xc8>
		{
			SM1_State = SM1_on1;
     626:	81 e0       	ldi	r24, 0x01	; 1
     628:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SM1_State>
     62c:	1f c0       	rjmp	.+62     	; 0x66c <TickFct_State_machine_1+0xc4>
		}
		else
		{
			SM1_State = SM1_off;
     62e:	83 e0       	ldi	r24, 0x03	; 3
     630:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SM1_State>
     634:	25 c0       	rjmp	.+74     	; 0x680 <TickFct_State_machine_1+0xd8>
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
     636:	84 e0       	ldi	r24, 0x04	; 4
     638:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SM1_State>
     63c:	24 c0       	rjmp	.+72     	; 0x686 <TickFct_State_machine_1+0xde>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
     63e:	85 e0       	ldi	r24, 0x05	; 5
     640:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SM1_State>
     644:	23 c0       	rjmp	.+70     	; 0x68c <TickFct_State_machine_1+0xe4>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SM1_State>
     64c:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
     650:	0d c0       	rjmp	.+26     	; 0x66c <TickFct_State_machine_1+0xc4>
     652:	83 30       	cpi	r24, 0x03	; 3
		global_g = 1;
     654:	a9 f0       	breq	.+42     	; 0x680 <TickFct_State_machine_1+0xd8>
     656:	28 f4       	brcc	.+10     	; 0x662 <TickFct_State_machine_1+0xba>
     658:	81 30       	cpi	r24, 0x01	; 1
	}
	switch(SM1_State)
     65a:	41 f0       	breq	.+16     	; 0x66c <TickFct_State_machine_1+0xc4>
     65c:	82 30       	cpi	r24, 0x02	; 2
     65e:	c1 f4       	brne	.+48     	; 0x690 <TickFct_State_machine_1+0xe8>
     660:	07 c0       	rjmp	.+14     	; 0x670 <TickFct_State_machine_1+0xc8>
     662:	84 30       	cpi	r24, 0x04	; 4
     664:	81 f0       	breq	.+32     	; 0x686 <TickFct_State_machine_1+0xde>
     666:	85 30       	cpi	r24, 0x05	; 5
     668:	99 f4       	brne	.+38     	; 0x690 <TickFct_State_machine_1+0xe8>
     66a:	10 c0       	rjmp	.+32     	; 0x68c <TickFct_State_machine_1+0xe4>
     66c:	12 b8       	out	0x02, r1	; 2
     66e:	08 95       	ret
	{
		case SM1_off:
		PORTA = 0X00;
     670:	08 de       	rcall	.-1008   	; 0x282 <LCD_ClearScreen>
		break;
     672:	60 e1       	ldi	r22, 0x10	; 16
		case SM1_on1:
		LCD_ClearScreen();
     674:	71 e0       	ldi	r23, 0x01	; 1
     676:	81 e0       	ldi	r24, 0x01	; 1
		LCD_DisplayString(1, "Level 1");
     678:	27 de       	rcall	.-946    	; 0x2c8 <LCD_DisplayString>
     67a:	81 e0       	ldi	r24, 0x01	; 1
     67c:	82 b9       	out	0x02, r24	; 2
     67e:	08 95       	ret
     680:	82 e0       	ldi	r24, 0x02	; 2
		PORTA = 0x01;
     682:	82 b9       	out	0x02, r24	; 2
     684:	08 95       	ret
		break;
     686:	84 e0       	ldi	r24, 0x04	; 4
		case SM1_on2:
		PORTA = 0x02;
     688:	82 b9       	out	0x02, r24	; 2
     68a:	08 95       	ret
		break;
     68c:	88 e0       	ldi	r24, 0x08	; 8
		case SM1_on3:
		PORTA = 0x04;
     68e:	82 b9       	out	0x02, r24	; 2
     690:	08 95       	ret

00000692 <ButtonPress>:
		break;
     692:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <Press_States>
		case SM1_on4:
		PORTA = 0x08;
     696:	82 30       	cpi	r24, 0x02	; 2
     698:	09 f4       	brne	.+2      	; 0x69c <ButtonPress+0xa>
	}
}
enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
     69a:	5b c0       	rjmp	.+182    	; 0x752 <ButtonPress+0xc0>
     69c:	28 f4       	brcc	.+10     	; 0x6a8 <ButtonPress+0x16>
     69e:	88 23       	and	r24, r24
     6a0:	61 f0       	breq	.+24     	; 0x6ba <ButtonPress+0x28>
     6a2:	81 30       	cpi	r24, 0x01	; 1
     6a4:	a1 f1       	breq	.+104    	; 0x70e <ButtonPress+0x7c>
     6a6:	a7 c0       	rjmp	.+334    	; 0x7f6 <ButtonPress+0x164>
     6a8:	84 30       	cpi	r24, 0x04	; 4
     6aa:	09 f4       	brne	.+2      	; 0x6ae <ButtonPress+0x1c>
     6ac:	96 c0       	rjmp	.+300    	; 0x7da <ButtonPress+0x148>
     6ae:	08 f4       	brcc	.+2      	; 0x6b2 <ButtonPress+0x20>
     6b0:	72 c0       	rjmp	.+228    	; 0x796 <ButtonPress+0x104>
     6b2:	85 30       	cpi	r24, 0x05	; 5
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <ButtonPress+0x26>
     6b6:	97 c0       	rjmp	.+302    	; 0x7e6 <ButtonPress+0x154>
     6b8:	9e c0       	rjmp	.+316    	; 0x7f6 <ButtonPress+0x164>
	{
		case Init:
		if(global_g == 1)
     6ba:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
     6be:	81 30       	cpi	r24, 0x01	; 1
     6c0:	09 f0       	breq	.+2      	; 0x6c4 <ButtonPress+0x32>
     6c2:	d8 c0       	rjmp	.+432    	; 0x874 <ButtonPress+0x1e2>
		{
			LCD_DisplayString(1, "Begin Pressing  Now");
     6c4:	68 e1       	ldi	r22, 0x18	; 24
     6c6:	71 e0       	ldi	r23, 0x01	; 1
     6c8:	ff dd       	rcall	.-1026   	; 0x2c8 <LCD_DisplayString>
			if(~PINB & 0x01)
     6ca:	18 99       	sbic	0x03, 0	; 3
     6cc:	05 c0       	rjmp	.+10     	; 0x6d8 <ButtonPress+0x46>
			{
				while(~PINB & 0x01){}
     6ce:	18 9b       	sbis	0x03, 0	; 3
     6d0:	fe cf       	rjmp	.-4      	; 0x6ce <ButtonPress+0x3c>
				Press_States = Press1;
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     6d8:	19 9b       	sbis	0x03, 1	; 3
     6da:	04 c0       	rjmp	.+8      	; 0x6e4 <ButtonPress+0x52>
     6dc:	1a 9b       	sbis	0x03, 2	; 3
     6de:	02 c0       	rjmp	.+4      	; 0x6e4 <ButtonPress+0x52>
     6e0:	1b 99       	sbic	0x03, 3	; 3
     6e2:	89 c0       	rjmp	.+274    	; 0x7f6 <ButtonPress+0x164>
			{
				if(lives - 1 > -1)
     6e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     6e8:	28 2f       	mov	r18, r24
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	21 50       	subi	r18, 0x01	; 1
     6ee:	31 09       	sbc	r19, r1
     6f0:	1a f0       	brmi	.+6      	; 0x6f8 <ButtonPress+0x66>
				{
					lives--;
     6f2:	81 50       	subi	r24, 0x01	; 1
     6f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				}
				if(lives == 0)
     6f8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     6fc:	81 11       	cpse	r24, r1
     6fe:	03 c0       	rjmp	.+6      	; 0x706 <ButtonPress+0x74>
				{
					global_g = 20;
     700:	84 e1       	ldi	r24, 0x14	; 20
     702:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
				}
				Press_States = Error;
     706:	85 e0       	ldi	r24, 0x05	; 5
     708:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
     70c:	84 c0       	rjmp	.+264    	; 0x816 <ButtonPress+0x184>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
     70e:	19 99       	sbic	0x03, 1	; 3
     710:	05 c0       	rjmp	.+10     	; 0x71c <ButtonPress+0x8a>
		{
			while(~PINB & 0x02){}
     712:	19 9b       	sbis	0x03, 1	; 3
     714:	fe cf       	rjmp	.-4      	; 0x712 <ButtonPress+0x80>
			Press_States = Press2;
     716:	82 e0       	ldi	r24, 0x02	; 2
     718:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     71c:	18 9b       	sbis	0x03, 0	; 3
     71e:	04 c0       	rjmp	.+8      	; 0x728 <ButtonPress+0x96>
     720:	1a 9b       	sbis	0x03, 2	; 3
     722:	02 c0       	rjmp	.+4      	; 0x728 <ButtonPress+0x96>
     724:	1b 99       	sbic	0x03, 3	; 3
     726:	67 c0       	rjmp	.+206    	; 0x7f6 <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     728:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     72c:	28 2f       	mov	r18, r24
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	21 50       	subi	r18, 0x01	; 1
     732:	31 09       	sbc	r19, r1
     734:	1a f0       	brmi	.+6      	; 0x73c <ButtonPress+0xaa>
			{
				lives--;
     736:	81 50       	subi	r24, 0x01	; 1
     738:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     73c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     740:	81 11       	cpse	r24, r1
     742:	03 c0       	rjmp	.+6      	; 0x74a <ButtonPress+0xb8>
			{
				global_g = 20;
     744:	84 e1       	ldi	r24, 0x14	; 20
     746:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_States = Error;
     74a:	85 e0       	ldi	r24, 0x05	; 5
     74c:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
     750:	62 c0       	rjmp	.+196    	; 0x816 <ButtonPress+0x184>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
     752:	1a 99       	sbic	0x03, 2	; 3
     754:	05 c0       	rjmp	.+10     	; 0x760 <ButtonPress+0xce>
		{
			while(~PINB & 0x04){}
     756:	1a 9b       	sbis	0x03, 2	; 3
     758:	fe cf       	rjmp	.-4      	; 0x756 <ButtonPress+0xc4>
			Press_States = Press3;
     75a:	83 e0       	ldi	r24, 0x03	; 3
     75c:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     760:	19 9b       	sbis	0x03, 1	; 3
     762:	04 c0       	rjmp	.+8      	; 0x76c <ButtonPress+0xda>
     764:	18 9b       	sbis	0x03, 0	; 3
     766:	02 c0       	rjmp	.+4      	; 0x76c <ButtonPress+0xda>
     768:	1b 99       	sbic	0x03, 3	; 3
     76a:	45 c0       	rjmp	.+138    	; 0x7f6 <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     76c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     770:	28 2f       	mov	r18, r24
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	21 50       	subi	r18, 0x01	; 1
     776:	31 09       	sbc	r19, r1
     778:	1a f0       	brmi	.+6      	; 0x780 <ButtonPress+0xee>
			{
				lives--;
     77a:	81 50       	subi	r24, 0x01	; 1
     77c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     780:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     784:	81 11       	cpse	r24, r1
     786:	03 c0       	rjmp	.+6      	; 0x78e <ButtonPress+0xfc>
			{
				global_g = 20;
     788:	84 e1       	ldi	r24, 0x14	; 20
     78a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_States = Error;
     78e:	85 e0       	ldi	r24, 0x05	; 5
     790:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
     794:	40 c0       	rjmp	.+128    	; 0x816 <ButtonPress+0x184>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
     796:	1b 99       	sbic	0x03, 3	; 3
     798:	05 c0       	rjmp	.+10     	; 0x7a4 <ButtonPress+0x112>
		{
			while(~PINB & 0x08){}
     79a:	1b 9b       	sbis	0x03, 3	; 3
     79c:	fe cf       	rjmp	.-4      	; 0x79a <ButtonPress+0x108>
			Press_States = Press4;
     79e:	84 e0       	ldi	r24, 0x04	; 4
     7a0:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     7a4:	19 9b       	sbis	0x03, 1	; 3
     7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <ButtonPress+0x11e>
     7a8:	1a 9b       	sbis	0x03, 2	; 3
     7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <ButtonPress+0x11e>
     7ac:	18 99       	sbic	0x03, 0	; 3
     7ae:	23 c0       	rjmp	.+70     	; 0x7f6 <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     7b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     7b4:	28 2f       	mov	r18, r24
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	21 50       	subi	r18, 0x01	; 1
     7ba:	31 09       	sbc	r19, r1
     7bc:	1a f0       	brmi	.+6      	; 0x7c4 <ButtonPress+0x132>
			{
				lives--;
     7be:	81 50       	subi	r24, 0x01	; 1
     7c0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     7c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     7c8:	81 11       	cpse	r24, r1
     7ca:	03 c0       	rjmp	.+6      	; 0x7d2 <ButtonPress+0x140>
			{
				global_g = 20;
     7cc:	84 e1       	ldi	r24, 0x14	; 20
     7ce:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_States = Error;
     7d2:	85 e0       	ldi	r24, 0x05	; 5
     7d4:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
     7d8:	1e c0       	rjmp	.+60     	; 0x816 <ButtonPress+0x184>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
     7da:	1c 99       	sbic	0x03, 4	; 3
     7dc:	38 c0       	rjmp	.+112    	; 0x84e <ButtonPress+0x1bc>
		{
			Press_States = Off;
     7de:	86 e0       	ldi	r24, 0x06	; 6
     7e0:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
     7e4:	3f c0       	rjmp	.+126    	; 0x864 <ButtonPress+0x1d2>
		}
		break;
		case Error:
		if(~PINB & 0x01)
     7e6:	18 99       	sbic	0x03, 0	; 3
     7e8:	16 c0       	rjmp	.+44     	; 0x816 <ButtonPress+0x184>
		{
			while(~PINB & 0x01){}
     7ea:	18 9b       	sbis	0x03, 0	; 3
     7ec:	fe cf       	rjmp	.-4      	; 0x7ea <ButtonPress+0x158>
			Press_States = Press1;
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <Press_States>
     7f4:	17 c0       	rjmp	.+46     	; 0x824 <ButtonPress+0x192>
		}
		break;
	}
	switch(Press_States)
     7f6:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <Press_States>
     7fa:	83 30       	cpi	r24, 0x03	; 3
     7fc:	09 f1       	breq	.+66     	; 0x840 <ButtonPress+0x1ae>
     7fe:	28 f4       	brcc	.+10     	; 0x80a <ButtonPress+0x178>
     800:	81 30       	cpi	r24, 0x01	; 1
     802:	81 f0       	breq	.+32     	; 0x824 <ButtonPress+0x192>
     804:	82 30       	cpi	r24, 0x02	; 2
     806:	a9 f0       	breq	.+42     	; 0x832 <ButtonPress+0x1a0>
     808:	08 95       	ret
     80a:	85 30       	cpi	r24, 0x05	; 5
     80c:	21 f0       	breq	.+8      	; 0x816 <ButtonPress+0x184>
     80e:	f8 f0       	brcs	.+62     	; 0x84e <ButtonPress+0x1bc>
     810:	86 30       	cpi	r24, 0x06	; 6
     812:	41 f1       	breq	.+80     	; 0x864 <ButtonPress+0x1d2>
     814:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
     816:	80 e1       	ldi	r24, 0x10	; 16
     818:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     81a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     81e:	9a de       	rcall	.-716    	; 0x554 <simon_SevenSeg>
     820:	7a ce       	rjmp	.-780    	; 0x516 <transmit_data>
		break;
     822:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
     824:	81 e0       	ldi	r24, 0x01	; 1
		transmit_data(simon_SevenSeg(lives));
     826:	82 b9       	out	0x02, r24	; 2
     828:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     82c:	93 de       	rcall	.-730    	; 0x554 <simon_SevenSeg>
     82e:	73 ce       	rjmp	.-794    	; 0x516 <transmit_data>
		break;
		
		case Press2:
		PORTA = 0x02;
     830:	08 95       	ret
		transmit_data(simon_SevenSeg(lives));
     832:	82 e0       	ldi	r24, 0x02	; 2
     834:	82 b9       	out	0x02, r24	; 2
     836:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     83a:	8c de       	rcall	.-744    	; 0x554 <simon_SevenSeg>
		break;
     83c:	6c ce       	rjmp	.-808    	; 0x516 <transmit_data>
		
		case Press3:
		PORTA = 0x04;
     83e:	08 95       	ret
     840:	84 e0       	ldi	r24, 0x04	; 4
		transmit_data(simon_SevenSeg(lives));
     842:	82 b9       	out	0x02, r24	; 2
     844:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     848:	85 de       	rcall	.-758    	; 0x554 <simon_SevenSeg>
     84a:	65 ce       	rjmp	.-822    	; 0x516 <transmit_data>
		break;
		
		case Press4:
		PORTA = 0x08;
     84c:	08 95       	ret
		LCD_DisplayString(1,"Level 1 Clear");
     84e:	88 e0       	ldi	r24, 0x08	; 8
     850:	82 b9       	out	0x02, r24	; 2
     852:	6c e2       	ldi	r22, 0x2C	; 44
     854:	71 e0       	ldi	r23, 0x01	; 1
		transmit_data(simon_SevenSeg(lives));
     856:	81 e0       	ldi	r24, 0x01	; 1
     858:	37 dd       	rcall	.-1426   	; 0x2c8 <LCD_DisplayString>
     85a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     85e:	7a de       	rcall	.-780    	; 0x554 <simon_SevenSeg>
     860:	5a ce       	rjmp	.-844    	; 0x516 <transmit_data>
		break;
     862:	08 95       	ret
		case Off:
		PORTA = 0x00;
     864:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     866:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     86a:	74 de       	rcall	.-792    	; 0x554 <simon_SevenSeg>
     86c:	54 de       	rcall	.-856    	; 0x516 <transmit_data>
     86e:	82 e0       	ldi	r24, 0x02	; 2
     870:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
		global_g = 2;
     874:	08 95       	ret

00000876 <TickFct_Machine2>:
     876:	e0 91 d1 01 	lds	r30, 0x01D1	; 0x8001d1 <SM2_States>
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
     87a:	8e 2f       	mov	r24, r30
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	87 30       	cpi	r24, 0x07	; 7
     880:	91 05       	cpc	r25, r1
     882:	d8 f5       	brcc	.+118    	; 0x8fa <TickFct_Machine2+0x84>
     884:	fc 01       	movw	r30, r24
     886:	ea 5b       	subi	r30, 0xBA	; 186
     888:	ff 4f       	sbci	r31, 0xFF	; 255
     88a:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__tablejump2__>
	{
		case SM2_off:
		if(global_g == 2)
     88e:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	09 f0       	breq	.+2      	; 0x898 <TickFct_Machine2+0x22>
     896:	3d c0       	rjmp	.+122    	; 0x912 <TickFct_Machine2+0x9c>
		{
			LCD_DisplayString(1, "Level 2");
     898:	6a e3       	ldi	r22, 0x3A	; 58
     89a:	71 e0       	ldi	r23, 0x01	; 1
     89c:	81 e0       	ldi	r24, 0x01	; 1
     89e:	14 dd       	rcall	.-1496   	; 0x2c8 <LCD_DisplayString>
			if(~PINB & 0x01)
     8a0:	18 99       	sbic	0x03, 0	; 3
     8a2:	06 c0       	rjmp	.+12     	; 0x8b0 <TickFct_Machine2+0x3a>
			{
				SM2_States = SM2_on1;
     8a4:	81 e0       	ldi	r24, 0x01	; 1
     8a6:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <SM2_States>
			}
			while(!(~PINB & 0x01))
     8aa:	18 99       	sbic	0x03, 0	; 3
     8ac:	03 c0       	rjmp	.+6      	; 0x8b4 <TickFct_Machine2+0x3e>
     8ae:	33 c0       	rjmp	.+102    	; 0x916 <TickFct_Machine2+0xa0>
     8b0:	18 9b       	sbis	0x03, 0	; 3
     8b2:	23 c0       	rjmp	.+70     	; 0x8fa <TickFct_Machine2+0x84>
			{
				SM2_States = SM2_off;
     8b4:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <SM2_States>
			LCD_DisplayString(1, "Level 2");
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
     8b8:	18 99       	sbic	0x03, 0	; 3
     8ba:	fc cf       	rjmp	.-8      	; 0x8b4 <TickFct_Machine2+0x3e>
     8bc:	2a c0       	rjmp	.+84     	; 0x912 <TickFct_Machine2+0x9c>
		{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
     8be:	82 e0       	ldi	r24, 0x02	; 2
     8c0:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <SM2_States>
     8c4:	2b c0       	rjmp	.+86     	; 0x91c <TickFct_Machine2+0xa6>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
     8c6:	83 e0       	ldi	r24, 0x03	; 3
     8c8:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <SM2_States>
     8cc:	2a c0       	rjmp	.+84     	; 0x922 <TickFct_Machine2+0xac>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
     8ce:	84 e0       	ldi	r24, 0x04	; 4
     8d0:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <SM2_States>
     8d4:	29 c0       	rjmp	.+82     	; 0x928 <TickFct_Machine2+0xb2>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
     8d6:	85 e0       	ldi	r24, 0x05	; 5
     8d8:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <SM2_States>
     8dc:	28 c0       	rjmp	.+80     	; 0x92e <TickFct_Machine2+0xb8>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
     8de:	86 e0       	ldi	r24, 0x06	; 6
     8e0:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <SM2_States>
     8e4:	27 c0       	rjmp	.+78     	; 0x934 <TickFct_Machine2+0xbe>
		break;
		case SM2_on6:
		LCD_DisplayString(1, "Begin Pressing  Now");
     8e6:	68 e1       	ldi	r22, 0x18	; 24
     8e8:	71 e0       	ldi	r23, 0x01	; 1
     8ea:	81 e0       	ldi	r24, 0x01	; 1
     8ec:	ed dc       	rcall	.-1574   	; 0x2c8 <LCD_DisplayString>
		global_g = 3;
     8ee:	83 e0       	ldi	r24, 0x03	; 3
     8f0:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
		SM2_States = SM2_off;
     8f4:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <SM2_States>
		break;
     8f8:	0c c0       	rjmp	.+24     	; 0x912 <TickFct_Machine2+0x9c>
	}

	switch(SM2_States)
     8fa:	e0 91 d1 01 	lds	r30, 0x01D1	; 0x8001d1 <SM2_States>
     8fe:	8e 2f       	mov	r24, r30
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	87 30       	cpi	r24, 0x07	; 7
     904:	91 05       	cpc	r25, r1
     906:	c0 f4       	brcc	.+48     	; 0x938 <TickFct_Machine2+0xc2>
     908:	fc 01       	movw	r30, r24
     90a:	e3 5b       	subi	r30, 0xB3	; 179
     90c:	ff 4f       	sbci	r31, 0xFF	; 255
     90e:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
     912:	12 b8       	out	0x02, r1	; 2
		break;
     914:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	82 b9       	out	0x02, r24	; 2
		break;
     91a:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
     91c:	84 e0       	ldi	r24, 0x04	; 4
     91e:	82 b9       	out	0x02, r24	; 2
		break;
     920:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
     922:	88 e0       	ldi	r24, 0x08	; 8
     924:	82 b9       	out	0x02, r24	; 2
		break;
     926:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	82 b9       	out	0x02, r24	; 2
		break;
     92c:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
     92e:	82 e0       	ldi	r24, 0x02	; 2
     930:	82 b9       	out	0x02, r24	; 2
		break;
     932:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	82 b9       	out	0x02, r24	; 2
     938:	08 95       	ret

0000093a <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
     93a:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <Press_sec_level>
     93e:	8e 2f       	mov	r24, r30
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	87 30       	cpi	r24, 0x07	; 7
     944:	91 05       	cpc	r25, r1
     946:	08 f0       	brcs	.+2      	; 0x94a <ButtonPress2+0x10>
     948:	d7 c0       	rjmp	.+430    	; 0xaf8 <ButtonPress2+0x1be>
     94a:	fc 01       	movw	r30, r24
     94c:	ec 5a       	subi	r30, 0xAC	; 172
     94e:	ff 4f       	sbci	r31, 0xFF	; 255
     950:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
     954:	18 99       	sbic	0x03, 0	; 3
     956:	05 c0       	rjmp	.+10     	; 0x962 <ButtonPress2+0x28>
		{
			while(~PINB & 0x01){}
     958:	18 9b       	sbis	0x03, 0	; 3
     95a:	fe cf       	rjmp	.-4      	; 0x958 <ButtonPress2+0x1e>
			Press_sec_level = Press_state1;
     95c:	81 e0       	ldi	r24, 0x01	; 1
     95e:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     962:	19 9b       	sbis	0x03, 1	; 3
     964:	04 c0       	rjmp	.+8      	; 0x96e <ButtonPress2+0x34>
     966:	1a 9b       	sbis	0x03, 2	; 3
     968:	02 c0       	rjmp	.+4      	; 0x96e <ButtonPress2+0x34>
     96a:	1b 99       	sbic	0x03, 3	; 3
     96c:	c8 c0       	rjmp	.+400    	; 0xafe <ButtonPress2+0x1c4>
		{
			if(lives - 1 > -1)
     96e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     972:	28 2f       	mov	r18, r24
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	21 50       	subi	r18, 0x01	; 1
     978:	31 09       	sbc	r19, r1
     97a:	1a f0       	brmi	.+6      	; 0x982 <ButtonPress2+0x48>
			{
				lives--;
     97c:	81 50       	subi	r24, 0x01	; 1
     97e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     982:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     986:	81 11       	cpse	r24, r1
     988:	03 c0       	rjmp	.+6      	; 0x990 <ButtonPress2+0x56>
			{
				global_g = 20;
     98a:	84 e1       	ldi	r24, 0x14	; 20
     98c:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_sec_level = Error2;
     990:	87 e0       	ldi	r24, 0x07	; 7
     992:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
     996:	c1 c0       	rjmp	.+386    	; 0xb1a <ButtonPress2+0x1e0>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
     998:	1a 99       	sbic	0x03, 2	; 3
     99a:	05 c0       	rjmp	.+10     	; 0x9a6 <ButtonPress2+0x6c>
		{
			while(~PINB & 0x04){}
     99c:	1a 9b       	sbis	0x03, 2	; 3
     99e:	fe cf       	rjmp	.-4      	; 0x99c <ButtonPress2+0x62>
			Press_sec_level = Press_state2;
     9a0:	82 e0       	ldi	r24, 0x02	; 2
     9a2:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     9a6:	19 9b       	sbis	0x03, 1	; 3
     9a8:	04 c0       	rjmp	.+8      	; 0x9b2 <ButtonPress2+0x78>
     9aa:	18 9b       	sbis	0x03, 0	; 3
     9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <ButtonPress2+0x78>
     9ae:	1b 99       	sbic	0x03, 3	; 3
     9b0:	a6 c0       	rjmp	.+332    	; 0xafe <ButtonPress2+0x1c4>
		{
			if(lives - 1 > -1)
     9b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     9b6:	28 2f       	mov	r18, r24
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	21 50       	subi	r18, 0x01	; 1
     9bc:	31 09       	sbc	r19, r1
     9be:	1a f0       	brmi	.+6      	; 0x9c6 <ButtonPress2+0x8c>
			{
				lives--;
     9c0:	81 50       	subi	r24, 0x01	; 1
     9c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     9c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     9ca:	81 11       	cpse	r24, r1
     9cc:	03 c0       	rjmp	.+6      	; 0x9d4 <ButtonPress2+0x9a>
			{
				global_g = 20;
     9ce:	84 e1       	ldi	r24, 0x14	; 20
     9d0:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_sec_level = Error2;
     9d4:	87 e0       	ldi	r24, 0x07	; 7
     9d6:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
     9da:	9f c0       	rjmp	.+318    	; 0xb1a <ButtonPress2+0x1e0>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
     9dc:	1b 99       	sbic	0x03, 3	; 3
     9de:	05 c0       	rjmp	.+10     	; 0x9ea <ButtonPress2+0xb0>
		{
			while(~PINB & 0x08){}
     9e0:	1b 9b       	sbis	0x03, 3	; 3
     9e2:	fe cf       	rjmp	.-4      	; 0x9e0 <ButtonPress2+0xa6>
			Press_sec_level = Press_state3;
     9e4:	83 e0       	ldi	r24, 0x03	; 3
     9e6:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     9ea:	19 9b       	sbis	0x03, 1	; 3
     9ec:	04 c0       	rjmp	.+8      	; 0x9f6 <ButtonPress2+0xbc>
     9ee:	1a 9b       	sbis	0x03, 2	; 3
     9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <ButtonPress2+0xbc>
     9f2:	18 99       	sbic	0x03, 0	; 3
     9f4:	84 c0       	rjmp	.+264    	; 0xafe <ButtonPress2+0x1c4>
		{
			if(lives - 1 > -1)
     9f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     9fa:	28 2f       	mov	r18, r24
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	21 50       	subi	r18, 0x01	; 1
     a00:	31 09       	sbc	r19, r1
     a02:	1a f0       	brmi	.+6      	; 0xa0a <ButtonPress2+0xd0>
			{
				lives--;
     a04:	81 50       	subi	r24, 0x01	; 1
     a06:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     a0a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a0e:	81 11       	cpse	r24, r1
     a10:	03 c0       	rjmp	.+6      	; 0xa18 <ButtonPress2+0xde>
			{
				global_g = 20;
     a12:	84 e1       	ldi	r24, 0x14	; 20
     a14:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_sec_level = Error2;
     a18:	87 e0       	ldi	r24, 0x07	; 7
     a1a:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
     a1e:	7d c0       	rjmp	.+250    	; 0xb1a <ButtonPress2+0x1e0>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
     a20:	18 99       	sbic	0x03, 0	; 3
     a22:	05 c0       	rjmp	.+10     	; 0xa2e <ButtonPress2+0xf4>
		{
			while(~PINB & 0x01){}
     a24:	18 9b       	sbis	0x03, 0	; 3
     a26:	fe cf       	rjmp	.-4      	; 0xa24 <ButtonPress2+0xea>
			Press_sec_level = Press_state4;
     a28:	84 e0       	ldi	r24, 0x04	; 4
     a2a:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     a2e:	19 9b       	sbis	0x03, 1	; 3
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <ButtonPress2+0x100>
     a32:	1a 9b       	sbis	0x03, 2	; 3
     a34:	02 c0       	rjmp	.+4      	; 0xa3a <ButtonPress2+0x100>
     a36:	1b 99       	sbic	0x03, 3	; 3
     a38:	62 c0       	rjmp	.+196    	; 0xafe <ButtonPress2+0x1c4>
		{
			if(lives - 1 > -1)
     a3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a3e:	28 2f       	mov	r18, r24
     a40:	30 e0       	ldi	r19, 0x00	; 0
     a42:	21 50       	subi	r18, 0x01	; 1
     a44:	31 09       	sbc	r19, r1
     a46:	1a f0       	brmi	.+6      	; 0xa4e <ButtonPress2+0x114>
			{
				lives--;
     a48:	81 50       	subi	r24, 0x01	; 1
     a4a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     a4e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a52:	81 11       	cpse	r24, r1
     a54:	03 c0       	rjmp	.+6      	; 0xa5c <ButtonPress2+0x122>
			{
				global_g = 20;
     a56:	84 e1       	ldi	r24, 0x14	; 20
     a58:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_sec_level = Error2;
     a5c:	87 e0       	ldi	r24, 0x07	; 7
     a5e:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
     a62:	5b c0       	rjmp	.+182    	; 0xb1a <ButtonPress2+0x1e0>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
     a64:	19 99       	sbic	0x03, 1	; 3
     a66:	05 c0       	rjmp	.+10     	; 0xa72 <ButtonPress2+0x138>
		{
			while(~PINB & 0x02){}
     a68:	19 9b       	sbis	0x03, 1	; 3
     a6a:	fe cf       	rjmp	.-4      	; 0xa68 <ButtonPress2+0x12e>
			Press_sec_level = Press_state5;
     a6c:	85 e0       	ldi	r24, 0x05	; 5
     a6e:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     a72:	18 9b       	sbis	0x03, 0	; 3
     a74:	04 c0       	rjmp	.+8      	; 0xa7e <ButtonPress2+0x144>
     a76:	1a 9b       	sbis	0x03, 2	; 3
     a78:	02 c0       	rjmp	.+4      	; 0xa7e <ButtonPress2+0x144>
     a7a:	1b 99       	sbic	0x03, 3	; 3
     a7c:	40 c0       	rjmp	.+128    	; 0xafe <ButtonPress2+0x1c4>
		{
			if(lives - 1 > -1)
     a7e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a82:	28 2f       	mov	r18, r24
     a84:	30 e0       	ldi	r19, 0x00	; 0
     a86:	21 50       	subi	r18, 0x01	; 1
     a88:	31 09       	sbc	r19, r1
     a8a:	1a f0       	brmi	.+6      	; 0xa92 <ButtonPress2+0x158>
			{
				lives--;
     a8c:	81 50       	subi	r24, 0x01	; 1
     a8e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     a92:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a96:	81 11       	cpse	r24, r1
     a98:	03 c0       	rjmp	.+6      	; 0xaa0 <ButtonPress2+0x166>
			{
				global_g = 20;
     a9a:	84 e1       	ldi	r24, 0x14	; 20
     a9c:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_sec_level = Error2;
     aa0:	87 e0       	ldi	r24, 0x07	; 7
     aa2:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
     aa6:	39 c0       	rjmp	.+114    	; 0xb1a <ButtonPress2+0x1e0>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
     aa8:	18 99       	sbic	0x03, 0	; 3
     aaa:	05 c0       	rjmp	.+10     	; 0xab6 <ButtonPress2+0x17c>
		{
			while(~PINB & 0x01){}
     aac:	18 9b       	sbis	0x03, 0	; 3
     aae:	fe cf       	rjmp	.-4      	; 0xaac <ButtonPress2+0x172>
			Press_sec_level = Press_state6;
     ab0:	86 e0       	ldi	r24, 0x06	; 6
     ab2:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     ab6:	19 9b       	sbis	0x03, 1	; 3
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <ButtonPress2+0x188>
     aba:	1a 9b       	sbis	0x03, 2	; 3
     abc:	02 c0       	rjmp	.+4      	; 0xac2 <ButtonPress2+0x188>
     abe:	1b 99       	sbic	0x03, 3	; 3
     ac0:	1e c0       	rjmp	.+60     	; 0xafe <ButtonPress2+0x1c4>
		{
			if(lives - 1 > -1)
     ac2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ac6:	28 2f       	mov	r18, r24
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	21 50       	subi	r18, 0x01	; 1
     acc:	31 09       	sbc	r19, r1
     ace:	1a f0       	brmi	.+6      	; 0xad6 <ButtonPress2+0x19c>
			{
				lives--;
     ad0:	81 50       	subi	r24, 0x01	; 1
     ad2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     ad6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ada:	81 11       	cpse	r24, r1
     adc:	03 c0       	rjmp	.+6      	; 0xae4 <ButtonPress2+0x1aa>
			{
				global_g = 20;
     ade:	84 e1       	ldi	r24, 0x14	; 20
     ae0:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_sec_level = Error2;
     ae4:	87 e0       	ldi	r24, 0x07	; 7
     ae6:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
     aea:	17 c0       	rjmp	.+46     	; 0xb1a <ButtonPress2+0x1e0>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
     aec:	1c 99       	sbic	0x03, 4	; 3
     aee:	3f c0       	rjmp	.+126    	; 0xb6e <ButtonPress2+0x234>
		{
			Press_sec_level = Off2;
     af0:	88 e0       	ldi	r24, 0x08	; 8
     af2:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <Press_sec_level>
     af6:	45 c0       	rjmp	.+138    	; 0xb82 <ButtonPress2+0x248>
		}
		break;
		default:
		Press_sec_level = Init2;
     af8:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <Press_sec_level>
     afc:	08 95       	ret
	}
	switch(Press_sec_level)
     afe:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <Press_sec_level>
     b02:	8e 2f       	mov	r24, r30
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	fc 01       	movw	r30, r24
     b08:	31 97       	sbiw	r30, 0x01	; 1
     b0a:	e8 30       	cpi	r30, 0x08	; 8
     b0c:	f1 05       	cpc	r31, r1
     b0e:	08 f0       	brcs	.+2      	; 0xb12 <ButtonPress2+0x1d8>
     b10:	40 c0       	rjmp	.+128    	; 0xb92 <ButtonPress2+0x258>
     b12:	e5 5a       	subi	r30, 0xA5	; 165
     b14:	ff 4f       	sbci	r31, 0xFF	; 255
     b16:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__tablejump2__>
	{
		case Error2:
		PORTA = 0x10;
     b1a:	80 e1       	ldi	r24, 0x10	; 16
     b1c:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b1e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b22:	18 dd       	rcall	.-1488   	; 0x554 <simon_SevenSeg>
     b24:	f8 cc       	rjmp	.-1552   	; 0x516 <transmit_data>
		break;
     b26:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b2c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b30:	11 dd       	rcall	.-1502   	; 0x554 <simon_SevenSeg>
     b32:	f1 cc       	rjmp	.-1566   	; 0x516 <transmit_data>
		break;
     b34:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
     b36:	84 e0       	ldi	r24, 0x04	; 4
		transmit_data(simon_SevenSeg(lives));
     b38:	82 b9       	out	0x02, r24	; 2
     b3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b3e:	0a dd       	rcall	.-1516   	; 0x554 <simon_SevenSeg>
     b40:	ea cc       	rjmp	.-1580   	; 0x516 <transmit_data>
		break;

		case Press_state3:
		PORTA = 0x08;
     b42:	08 95       	ret
     b44:	88 e0       	ldi	r24, 0x08	; 8
		transmit_data(simon_SevenSeg(lives));
     b46:	82 b9       	out	0x02, r24	; 2
     b48:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b4c:	03 dd       	rcall	.-1530   	; 0x554 <simon_SevenSeg>
		break;
     b4e:	e3 cc       	rjmp	.-1594   	; 0x516 <transmit_data>

		case Press_state4:
		PORTA = 0x01;
     b50:	08 95       	ret
     b52:	81 e0       	ldi	r24, 0x01	; 1
		transmit_data(simon_SevenSeg(lives));
     b54:	82 b9       	out	0x02, r24	; 2
     b56:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b5a:	fc dc       	rcall	.-1544   	; 0x554 <simon_SevenSeg>
		break;
     b5c:	dc cc       	rjmp	.-1608   	; 0x516 <transmit_data>

		case Press_state5:
		PORTA = 0x02;
     b5e:	08 95       	ret
		transmit_data(simon_SevenSeg(lives));
     b60:	82 e0       	ldi	r24, 0x02	; 2
     b62:	82 b9       	out	0x02, r24	; 2
     b64:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		break;
     b68:	f5 dc       	rcall	.-1558   	; 0x554 <simon_SevenSeg>

		case Press_state6:
		PORTA = 0x01;
     b6a:	d5 cc       	rjmp	.-1622   	; 0x516 <transmit_data>
		LCD_DisplayString(1, "Level 2 Clear");
     b6c:	08 95       	ret
     b6e:	81 e0       	ldi	r24, 0x01	; 1
     b70:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b72:	62 e4       	ldi	r22, 0x42	; 66
     b74:	71 e0       	ldi	r23, 0x01	; 1
     b76:	a8 db       	rcall	.-2224   	; 0x2c8 <LCD_DisplayString>
     b78:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b7c:	eb dc       	rcall	.-1578   	; 0x554 <simon_SevenSeg>
		break;
     b7e:	cb cc       	rjmp	.-1642   	; 0x516 <transmit_data>

		case Off2:
		PORTA = 0x00;
     b80:	08 95       	ret
		transmit_data(simon_SevenSeg(lives));
     b82:	12 b8       	out	0x02, r1	; 2
     b84:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b88:	e5 dc       	rcall	.-1590   	; 0x554 <simon_SevenSeg>
     b8a:	c5 dc       	rcall	.-1654   	; 0x516 <transmit_data>
     b8c:	84 e0       	ldi	r24, 0x04	; 4
		global_g = 4;
     b8e:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
     b92:	08 95       	ret

00000b94 <TickFct_Machine3>:
     b94:	e0 91 cd 01 	lds	r30, 0x01CD	; 0x8001cd <SM3_State>
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
     b98:	8e 2f       	mov	r24, r30
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	8a 30       	cpi	r24, 0x0A	; 10
     b9e:	91 05       	cpc	r25, r1
     ba0:	d8 f5       	brcc	.+118    	; 0xc18 <TickFct_Machine3+0x84>
     ba2:	fc 01       	movw	r30, r24
     ba4:	ed 59       	subi	r30, 0x9D	; 157
     ba6:	ff 4f       	sbci	r31, 0xFF	; 255
     ba8:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__tablejump2__>
	{
		case SM3_off:
		LCD_DisplayString(1, "Level 3");
     bac:	60 e5       	ldi	r22, 0x50	; 80
     bae:	71 e0       	ldi	r23, 0x01	; 1
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	8a db       	rcall	.-2284   	; 0x2c8 <LCD_DisplayString>
		if(global_g == 4)
     bb4:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
     bb8:	84 30       	cpi	r24, 0x04	; 4
     bba:	71 f5       	brne	.+92     	; 0xc18 <TickFct_Machine3+0x84>
		{
			if(~PINB & 0x01)
     bbc:	18 99       	sbic	0x03, 0	; 3
     bbe:	06 c0       	rjmp	.+12     	; 0xbcc <TickFct_Machine3+0x38>
			{
				while(~PINB & 0x01){}
     bc0:	18 9b       	sbis	0x03, 0	; 3
     bc2:	fe cf       	rjmp	.-4      	; 0xbc0 <TickFct_Machine3+0x2c>
				SM3_State = SM3_on1;
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     bca:	34 c0       	rjmp	.+104    	; 0xc34 <TickFct_Machine3+0xa0>
			}
			else
			{
				SM3_State = SM3_off;
     bcc:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <SM3_State>
     bd0:	2f c0       	rjmp	.+94     	; 0xc30 <TickFct_Machine3+0x9c>
			}
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
     bd2:	82 e0       	ldi	r24, 0x02	; 2
     bd4:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     bd8:	30 c0       	rjmp	.+96     	; 0xc3a <TickFct_Machine3+0xa6>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
     bda:	83 e0       	ldi	r24, 0x03	; 3
     bdc:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     be0:	2f c0       	rjmp	.+94     	; 0xc40 <TickFct_Machine3+0xac>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
     be2:	84 e0       	ldi	r24, 0x04	; 4
     be4:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     be8:	2e c0       	rjmp	.+92     	; 0xc46 <TickFct_Machine3+0xb2>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
     bea:	85 e0       	ldi	r24, 0x05	; 5
     bec:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     bf0:	2d c0       	rjmp	.+90     	; 0xc4c <TickFct_Machine3+0xb8>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
     bf2:	86 e0       	ldi	r24, 0x06	; 6
     bf4:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     bf8:	2c c0       	rjmp	.+88     	; 0xc52 <TickFct_Machine3+0xbe>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
     bfa:	87 e0       	ldi	r24, 0x07	; 7
     bfc:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     c00:	2b c0       	rjmp	.+86     	; 0xc58 <TickFct_Machine3+0xc4>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
     c02:	88 e0       	ldi	r24, 0x08	; 8
     c04:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     c08:	2a c0       	rjmp	.+84     	; 0xc5e <TickFct_Machine3+0xca>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
     c0a:	89 e0       	ldi	r24, 0x09	; 9
     c0c:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <SM3_State>
     c10:	29 c0       	rjmp	.+82     	; 0xc64 <TickFct_Machine3+0xd0>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
     c12:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <SM3_State>
     c16:	0c c0       	rjmp	.+24     	; 0xc30 <TickFct_Machine3+0x9c>
	}
	switch(SM3_State)
     c18:	e0 91 cd 01 	lds	r30, 0x01CD	; 0x8001cd <SM3_State>
     c1c:	8e 2f       	mov	r24, r30
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	8a 30       	cpi	r24, 0x0A	; 10
     c22:	91 05       	cpc	r25, r1
     c24:	40 f5       	brcc	.+80     	; 0xc76 <TickFct_Machine3+0xe2>
     c26:	fc 01       	movw	r30, r24
     c28:	e3 59       	subi	r30, 0x93	; 147
     c2a:	ff 4f       	sbci	r31, 0xFF	; 255
     c2c:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
     c30:	12 b8       	out	0x02, r1	; 2
		break;
     c32:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
     c34:	82 e0       	ldi	r24, 0x02	; 2
     c36:	82 b9       	out	0x02, r24	; 2
		break;
     c38:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
     c3a:	84 e0       	ldi	r24, 0x04	; 4
     c3c:	82 b9       	out	0x02, r24	; 2
		break;
     c3e:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	82 b9       	out	0x02, r24	; 2
		break;
     c44:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
     c46:	88 e0       	ldi	r24, 0x08	; 8
     c48:	82 b9       	out	0x02, r24	; 2
		break;
     c4a:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
     c4c:	82 e0       	ldi	r24, 0x02	; 2
     c4e:	82 b9       	out	0x02, r24	; 2
		break;
     c50:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
     c52:	84 e0       	ldi	r24, 0x04	; 4
     c54:	82 b9       	out	0x02, r24	; 2
		break;
     c56:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	82 b9       	out	0x02, r24	; 2
		break;
     c5c:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
     c5e:	82 e0       	ldi	r24, 0x02	; 2
     c60:	82 b9       	out	0x02, r24	; 2
		break;
     c62:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
     c64:	88 e0       	ldi	r24, 0x08	; 8
     c66:	82 b9       	out	0x02, r24	; 2
		LCD_DisplayString(1, "Begin Pressing  Now");
     c68:	68 e1       	ldi	r22, 0x18	; 24
     c6a:	71 e0       	ldi	r23, 0x01	; 1
     c6c:	81 e0       	ldi	r24, 0x01	; 1
     c6e:	2c db       	rcall	.-2472   	; 0x2c8 <LCD_DisplayString>
		global_g = 5;
     c70:	85 e0       	ldi	r24, 0x05	; 5
     c72:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
     c76:	08 95       	ret

00000c78 <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
     c78:	e0 91 d3 01 	lds	r30, 0x01D3	; 0x8001d3 <Press_third_level>
     c7c:	8e 2f       	mov	r24, r30
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	8b 30       	cpi	r24, 0x0B	; 11
     c82:	91 05       	cpc	r25, r1
     c84:	08 f0       	brcs	.+2      	; 0xc88 <ButtonPress3+0x10>
     c86:	4b c1       	rjmp	.+662    	; 0xf1e <ButtonPress3+0x2a6>
     c88:	fc 01       	movw	r30, r24
     c8a:	e9 58       	subi	r30, 0x89	; 137
     c8c:	ff 4f       	sbci	r31, 0xFF	; 255
     c8e:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
     c92:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
     c96:	85 30       	cpi	r24, 0x05	; 5
     c98:	09 f0       	breq	.+2      	; 0xc9c <ButtonPress3+0x24>
     c9a:	a0 c1       	rjmp	.+832    	; 0xfdc <ButtonPress3+0x364>
		{
			PORTA = 0x00;
     c9c:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
     c9e:	19 99       	sbic	0x03, 1	; 3
     ca0:	05 c0       	rjmp	.+10     	; 0xcac <ButtonPress3+0x34>
			{
				while(~PINB & 0x02){}
     ca2:	19 9b       	sbis	0x03, 1	; 3
     ca4:	fe cf       	rjmp	.-4      	; 0xca2 <ButtonPress3+0x2a>
				Press_third_level = Press3_state1;
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     cac:	18 9b       	sbis	0x03, 0	; 3
     cae:	04 c0       	rjmp	.+8      	; 0xcb8 <ButtonPress3+0x40>
     cb0:	1a 9b       	sbis	0x03, 2	; 3
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <ButtonPress3+0x40>
     cb4:	1b 99       	sbic	0x03, 3	; 3
     cb6:	33 c1       	rjmp	.+614    	; 0xf1e <ButtonPress3+0x2a6>
			{
				if(lives - 1 > -1)
     cb8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     cbc:	28 2f       	mov	r18, r24
     cbe:	30 e0       	ldi	r19, 0x00	; 0
     cc0:	21 50       	subi	r18, 0x01	; 1
     cc2:	31 09       	sbc	r19, r1
     cc4:	1a f0       	brmi	.+6      	; 0xccc <ButtonPress3+0x54>
				{
					lives--;
     cc6:	81 50       	subi	r24, 0x01	; 1
     cc8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				}
				if(lives == 0)
     ccc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     cd0:	81 11       	cpse	r24, r1
     cd2:	03 c0       	rjmp	.+6      	; 0xcda <ButtonPress3+0x62>
				{
					global_g = 20;
     cd4:	84 e1       	ldi	r24, 0x14	; 20
     cd6:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
				}
				Press_third_level = Error3;
     cda:	8a e0       	ldi	r24, 0x0A	; 10
     cdc:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     ce0:	2b c1       	rjmp	.+598    	; 0xf38 <ButtonPress3+0x2c0>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
     ce2:	19 99       	sbic	0x03, 1	; 3
     ce4:	29 c1       	rjmp	.+594    	; 0xf38 <ButtonPress3+0x2c0>
		{
			while(~PINB & 0x02){}
     ce6:	19 9b       	sbis	0x03, 1	; 3
     ce8:	fe cf       	rjmp	.-4      	; 0xce6 <ButtonPress3+0x6e>
			Press_third_level = Press3_state1;
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     cf0:	2a c1       	rjmp	.+596    	; 0xf46 <ButtonPress3+0x2ce>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
     cf2:	1a 99       	sbic	0x03, 2	; 3
     cf4:	05 c0       	rjmp	.+10     	; 0xd00 <ButtonPress3+0x88>
		{
			
			while(~PINB & 0x04){}
     cf6:	1a 9b       	sbis	0x03, 2	; 3
     cf8:	fe cf       	rjmp	.-4      	; 0xcf6 <ButtonPress3+0x7e>
			Press_third_level = Press3_state2;
     cfa:	82 e0       	ldi	r24, 0x02	; 2
     cfc:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     d00:	19 9b       	sbis	0x03, 1	; 3
     d02:	04 c0       	rjmp	.+8      	; 0xd0c <ButtonPress3+0x94>
     d04:	18 9b       	sbis	0x03, 0	; 3
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <ButtonPress3+0x94>
     d08:	1b 99       	sbic	0x03, 3	; 3
     d0a:	09 c1       	rjmp	.+530    	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     d0c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     d10:	28 2f       	mov	r18, r24
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	21 50       	subi	r18, 0x01	; 1
     d16:	31 09       	sbc	r19, r1
     d18:	1a f0       	brmi	.+6      	; 0xd20 <ButtonPress3+0xa8>
			{
				lives--;
     d1a:	81 50       	subi	r24, 0x01	; 1
     d1c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     d20:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     d24:	81 11       	cpse	r24, r1
     d26:	03 c0       	rjmp	.+6      	; 0xd2e <ButtonPress3+0xb6>
			{
				global_g = 20;
     d28:	84 e1       	ldi	r24, 0x14	; 20
     d2a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     d2e:	8a e0       	ldi	r24, 0x0A	; 10
     d30:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     d34:	01 c1       	rjmp	.+514    	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
     d36:	18 99       	sbic	0x03, 0	; 3
     d38:	05 c0       	rjmp	.+10     	; 0xd44 <ButtonPress3+0xcc>
		{
			while(~PINB & 0x01){}
     d3a:	18 9b       	sbis	0x03, 0	; 3
     d3c:	fe cf       	rjmp	.-4      	; 0xd3a <ButtonPress3+0xc2>
			Press_third_level = Press3_state3;
     d3e:	83 e0       	ldi	r24, 0x03	; 3
     d40:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     d44:	19 9b       	sbis	0x03, 1	; 3
     d46:	04 c0       	rjmp	.+8      	; 0xd50 <ButtonPress3+0xd8>
     d48:	1a 9b       	sbis	0x03, 2	; 3
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <ButtonPress3+0xd8>
     d4c:	1b 99       	sbic	0x03, 3	; 3
     d4e:	e7 c0       	rjmp	.+462    	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     d50:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     d54:	28 2f       	mov	r18, r24
     d56:	30 e0       	ldi	r19, 0x00	; 0
     d58:	21 50       	subi	r18, 0x01	; 1
     d5a:	31 09       	sbc	r19, r1
     d5c:	1a f0       	brmi	.+6      	; 0xd64 <ButtonPress3+0xec>
			{
				lives--;
     d5e:	81 50       	subi	r24, 0x01	; 1
     d60:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     d64:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     d68:	81 11       	cpse	r24, r1
     d6a:	03 c0       	rjmp	.+6      	; 0xd72 <ButtonPress3+0xfa>
			{
				global_g = 20;
     d6c:	84 e1       	ldi	r24, 0x14	; 20
     d6e:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     d72:	8a e0       	ldi	r24, 0x0A	; 10
     d74:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     d78:	df c0       	rjmp	.+446    	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
     d7a:	1b 99       	sbic	0x03, 3	; 3
     d7c:	05 c0       	rjmp	.+10     	; 0xd88 <ButtonPress3+0x110>
		{
			while(~PINB & 0x08){}
     d7e:	1b 9b       	sbis	0x03, 3	; 3
     d80:	fe cf       	rjmp	.-4      	; 0xd7e <ButtonPress3+0x106>
			Press_third_level = Press3_state4;
     d82:	84 e0       	ldi	r24, 0x04	; 4
     d84:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     d88:	19 9b       	sbis	0x03, 1	; 3
     d8a:	04 c0       	rjmp	.+8      	; 0xd94 <ButtonPress3+0x11c>
     d8c:	1a 9b       	sbis	0x03, 2	; 3
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <ButtonPress3+0x11c>
     d90:	18 99       	sbic	0x03, 0	; 3
     d92:	c5 c0       	rjmp	.+394    	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     d94:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     d98:	28 2f       	mov	r18, r24
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	21 50       	subi	r18, 0x01	; 1
     d9e:	31 09       	sbc	r19, r1
     da0:	1a f0       	brmi	.+6      	; 0xda8 <ButtonPress3+0x130>
			{
				lives--;
     da2:	81 50       	subi	r24, 0x01	; 1
     da4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     da8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     dac:	81 11       	cpse	r24, r1
     dae:	03 c0       	rjmp	.+6      	; 0xdb6 <ButtonPress3+0x13e>
			{
				global_g = 20;
     db0:	84 e1       	ldi	r24, 0x14	; 20
     db2:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     db6:	8a e0       	ldi	r24, 0x0A	; 10
     db8:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     dbc:	bd c0       	rjmp	.+378    	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
     dbe:	19 99       	sbic	0x03, 1	; 3
     dc0:	05 c0       	rjmp	.+10     	; 0xdcc <ButtonPress3+0x154>
		{
			while(~PINB & 0x02){}
     dc2:	19 9b       	sbis	0x03, 1	; 3
     dc4:	fe cf       	rjmp	.-4      	; 0xdc2 <ButtonPress3+0x14a>
			Press_third_level = Press3_state5;
     dc6:	85 e0       	ldi	r24, 0x05	; 5
     dc8:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     dcc:	18 9b       	sbis	0x03, 0	; 3
     dce:	04 c0       	rjmp	.+8      	; 0xdd8 <ButtonPress3+0x160>
     dd0:	1a 9b       	sbis	0x03, 2	; 3
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <ButtonPress3+0x160>
     dd4:	1b 99       	sbic	0x03, 3	; 3
     dd6:	a3 c0       	rjmp	.+326    	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     dd8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ddc:	28 2f       	mov	r18, r24
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	21 50       	subi	r18, 0x01	; 1
     de2:	31 09       	sbc	r19, r1
     de4:	1a f0       	brmi	.+6      	; 0xdec <ButtonPress3+0x174>
			{
				lives--;
     de6:	81 50       	subi	r24, 0x01	; 1
     de8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     dec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     df0:	81 11       	cpse	r24, r1
     df2:	03 c0       	rjmp	.+6      	; 0xdfa <ButtonPress3+0x182>
			{
				global_g = 20;
     df4:	84 e1       	ldi	r24, 0x14	; 20
     df6:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     dfa:	8a e0       	ldi	r24, 0x0A	; 10
     dfc:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     e00:	9b c0       	rjmp	.+310    	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
     e02:	1a 99       	sbic	0x03, 2	; 3
     e04:	05 c0       	rjmp	.+10     	; 0xe10 <ButtonPress3+0x198>
		{
			
			while(~PINB & 0x04){}
     e06:	1a 9b       	sbis	0x03, 2	; 3
     e08:	fe cf       	rjmp	.-4      	; 0xe06 <ButtonPress3+0x18e>
			Press_third_level = Press3_state6;
     e0a:	86 e0       	ldi	r24, 0x06	; 6
     e0c:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     e10:	19 9b       	sbis	0x03, 1	; 3
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <ButtonPress3+0x1a4>
     e14:	18 9b       	sbis	0x03, 0	; 3
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <ButtonPress3+0x1a4>
     e18:	1b 99       	sbic	0x03, 3	; 3
     e1a:	81 c0       	rjmp	.+258    	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     e1c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e20:	28 2f       	mov	r18, r24
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	21 50       	subi	r18, 0x01	; 1
     e26:	31 09       	sbc	r19, r1
     e28:	1a f0       	brmi	.+6      	; 0xe30 <ButtonPress3+0x1b8>
			{
				lives--;
     e2a:	81 50       	subi	r24, 0x01	; 1
     e2c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     e30:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e34:	81 11       	cpse	r24, r1
     e36:	03 c0       	rjmp	.+6      	; 0xe3e <ButtonPress3+0x1c6>
			{
				global_g = 20;
     e38:	84 e1       	ldi	r24, 0x14	; 20
     e3a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     e3e:	8a e0       	ldi	r24, 0x0A	; 10
     e40:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     e44:	79 c0       	rjmp	.+242    	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
     e46:	18 99       	sbic	0x03, 0	; 3
     e48:	05 c0       	rjmp	.+10     	; 0xe54 <ButtonPress3+0x1dc>
		{
			while(~PINB & 0x01){}
     e4a:	18 9b       	sbis	0x03, 0	; 3
     e4c:	fe cf       	rjmp	.-4      	; 0xe4a <ButtonPress3+0x1d2>
			Press_third_level = Press3_state7;
     e4e:	87 e0       	ldi	r24, 0x07	; 7
     e50:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     e54:	19 9b       	sbis	0x03, 1	; 3
     e56:	04 c0       	rjmp	.+8      	; 0xe60 <ButtonPress3+0x1e8>
     e58:	1a 9b       	sbis	0x03, 2	; 3
     e5a:	02 c0       	rjmp	.+4      	; 0xe60 <ButtonPress3+0x1e8>
     e5c:	1b 99       	sbic	0x03, 3	; 3
     e5e:	5f c0       	rjmp	.+190    	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     e60:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e64:	28 2f       	mov	r18, r24
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	21 50       	subi	r18, 0x01	; 1
     e6a:	31 09       	sbc	r19, r1
     e6c:	1a f0       	brmi	.+6      	; 0xe74 <ButtonPress3+0x1fc>
			{
				lives--;
     e6e:	81 50       	subi	r24, 0x01	; 1
     e70:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     e74:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e78:	81 11       	cpse	r24, r1
     e7a:	03 c0       	rjmp	.+6      	; 0xe82 <ButtonPress3+0x20a>
			{
				global_g = 20;
     e7c:	84 e1       	ldi	r24, 0x14	; 20
     e7e:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     e82:	8a e0       	ldi	r24, 0x0A	; 10
     e84:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     e88:	57 c0       	rjmp	.+174    	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
     e8a:	19 99       	sbic	0x03, 1	; 3
     e8c:	05 c0       	rjmp	.+10     	; 0xe98 <ButtonPress3+0x220>
		{
			while(~PINB & 0x02){}
     e8e:	19 9b       	sbis	0x03, 1	; 3
     e90:	fe cf       	rjmp	.-4      	; 0xe8e <ButtonPress3+0x216>
			Press_third_level = Press3_state8;
     e92:	88 e0       	ldi	r24, 0x08	; 8
     e94:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     e98:	18 9b       	sbis	0x03, 0	; 3
     e9a:	04 c0       	rjmp	.+8      	; 0xea4 <ButtonPress3+0x22c>
     e9c:	1a 9b       	sbis	0x03, 2	; 3
     e9e:	02 c0       	rjmp	.+4      	; 0xea4 <ButtonPress3+0x22c>
     ea0:	1b 99       	sbic	0x03, 3	; 3
     ea2:	3d c0       	rjmp	.+122    	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     ea4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ea8:	28 2f       	mov	r18, r24
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	21 50       	subi	r18, 0x01	; 1
     eae:	31 09       	sbc	r19, r1
     eb0:	1a f0       	brmi	.+6      	; 0xeb8 <ButtonPress3+0x240>
			{
				lives--;
     eb2:	81 50       	subi	r24, 0x01	; 1
     eb4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     eb8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ebc:	81 11       	cpse	r24, r1
     ebe:	03 c0       	rjmp	.+6      	; 0xec6 <ButtonPress3+0x24e>
			{
				global_g = 20;
     ec0:	84 e1       	ldi	r24, 0x14	; 20
     ec2:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     ec6:	8a e0       	ldi	r24, 0x0A	; 10
     ec8:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     ecc:	35 c0       	rjmp	.+106    	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
     ece:	1b 99       	sbic	0x03, 3	; 3
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <ButtonPress3+0x264>
		{
			while(~PINB & 0x08){}
     ed2:	1b 9b       	sbis	0x03, 3	; 3
     ed4:	fe cf       	rjmp	.-4      	; 0xed2 <ButtonPress3+0x25a>
			Press_third_level = Press3_state9;
     ed6:	89 e0       	ldi	r24, 0x09	; 9
     ed8:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     edc:	19 9b       	sbis	0x03, 1	; 3
     ede:	04 c0       	rjmp	.+8      	; 0xee8 <ButtonPress3+0x270>
     ee0:	1a 9b       	sbis	0x03, 2	; 3
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <ButtonPress3+0x270>
     ee4:	18 99       	sbic	0x03, 0	; 3
     ee6:	1b c0       	rjmp	.+54     	; 0xf1e <ButtonPress3+0x2a6>
		{
			if(lives - 1 > -1)
     ee8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     eec:	28 2f       	mov	r18, r24
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	21 50       	subi	r18, 0x01	; 1
     ef2:	31 09       	sbc	r19, r1
     ef4:	1a f0       	brmi	.+6      	; 0xefc <ButtonPress3+0x284>
			{
				lives--;
     ef6:	81 50       	subi	r24, 0x01	; 1
     ef8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
     efc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f00:	81 11       	cpse	r24, r1
     f02:	03 c0       	rjmp	.+6      	; 0xf0a <ButtonPress3+0x292>
			{
				global_g = 20;
     f04:	84 e1       	ldi	r24, 0x14	; 20
     f06:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_third_level = Error3;
     f0a:	8a e0       	ldi	r24, 0x0A	; 10
     f0c:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     f10:	13 c0       	rjmp	.+38     	; 0xf38 <ButtonPress3+0x2c0>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
     f12:	1c 99       	sbic	0x03, 4	; 3
     f14:	50 c0       	rjmp	.+160    	; 0xfb6 <ButtonPress3+0x33e>
		{
			Press_third_level = Off3;
     f16:	8b e0       	ldi	r24, 0x0B	; 11
     f18:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <Press_third_level>
     f1c:	57 c0       	rjmp	.+174    	; 0xfcc <ButtonPress3+0x354>
		}
		break;
	}
	switch(Press_third_level)
     f1e:	e0 91 d3 01 	lds	r30, 0x01D3	; 0x8001d3 <Press_third_level>
     f22:	8e 2f       	mov	r24, r30
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	fc 01       	movw	r30, r24
     f28:	31 97       	sbiw	r30, 0x01	; 1
     f2a:	eb 30       	cpi	r30, 0x0B	; 11
     f2c:	f1 05       	cpc	r31, r1
     f2e:	08 f0       	brcs	.+2      	; 0xf32 <ButtonPress3+0x2ba>
     f30:	55 c0       	rjmp	.+170    	; 0xfdc <ButtonPress3+0x364>
     f32:	ee 57       	subi	r30, 0x7E	; 126
     f34:	ff 4f       	sbci	r31, 0xFF	; 255
     f36:	6c c7       	rjmp	.+3800   	; 0x1e10 <__tablejump2__>
	{
		case Error3:
		transmit_data(simon_SevenSeg(lives));
     f38:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f3c:	0b db       	rcall	.-2538   	; 0x554 <simon_SevenSeg>
     f3e:	eb da       	rcall	.-2602   	; 0x516 <transmit_data>
		PORTA = 0x10;
     f40:	80 e1       	ldi	r24, 0x10	; 16
     f42:	82 b9       	out	0x02, r24	; 2
		break;
		case Press3_state1:
		transmit_data(simon_SevenSeg(lives));
     f44:	08 95       	ret
     f46:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f4a:	04 db       	rcall	.-2552   	; 0x554 <simon_SevenSeg>
     f4c:	e4 da       	rcall	.-2616   	; 0x516 <transmit_data>
		PORTA = 0x02;
     f4e:	82 e0       	ldi	r24, 0x02	; 2
		break;
     f50:	82 b9       	out	0x02, r24	; 2
		case Press3_state2:
		transmit_data(simon_SevenSeg(lives));
     f52:	08 95       	ret
     f54:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f58:	fd da       	rcall	.-2566   	; 0x554 <simon_SevenSeg>
     f5a:	dd da       	rcall	.-2630   	; 0x516 <transmit_data>
		PORTA = 0x04;
     f5c:	84 e0       	ldi	r24, 0x04	; 4
     f5e:	82 b9       	out	0x02, r24	; 2
		break;
     f60:	08 95       	ret
		case Press3_state3:
		transmit_data(simon_SevenSeg(lives));
     f62:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f66:	f6 da       	rcall	.-2580   	; 0x554 <simon_SevenSeg>
     f68:	d6 da       	rcall	.-2644   	; 0x516 <transmit_data>
		PORTA = 0x01;
     f6a:	81 e0       	ldi	r24, 0x01	; 1
     f6c:	82 b9       	out	0x02, r24	; 2
		break;
     f6e:	08 95       	ret
		case Press3_state4:
		transmit_data(simon_SevenSeg(lives));
     f70:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f74:	ef da       	rcall	.-2594   	; 0x554 <simon_SevenSeg>
     f76:	cf da       	rcall	.-2658   	; 0x516 <transmit_data>
		PORTA = 0x08;
     f78:	88 e0       	ldi	r24, 0x08	; 8
		break;
		case Press3_state5:
		transmit_data(simon_SevenSeg(lives));
     f7a:	82 b9       	out	0x02, r24	; 2
     f7c:	08 95       	ret
     f7e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f82:	e8 da       	rcall	.-2608   	; 0x554 <simon_SevenSeg>
		PORTA = 0x02;
     f84:	c8 da       	rcall	.-2672   	; 0x516 <transmit_data>
		break;
     f86:	82 e0       	ldi	r24, 0x02	; 2
		case Press3_state6:
		transmit_data(simon_SevenSeg(lives));
     f88:	82 b9       	out	0x02, r24	; 2
     f8a:	08 95       	ret
     f8c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x04;
     f90:	e1 da       	rcall	.-2622   	; 0x554 <simon_SevenSeg>
     f92:	c1 da       	rcall	.-2686   	; 0x516 <transmit_data>
		break;
     f94:	84 e0       	ldi	r24, 0x04	; 4
		case Press3_state7:
		transmit_data(simon_SevenSeg(lives));
     f96:	82 b9       	out	0x02, r24	; 2
     f98:	08 95       	ret
     f9a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f9e:	da da       	rcall	.-2636   	; 0x554 <simon_SevenSeg>
		PORTA = 0x01;
     fa0:	ba da       	rcall	.-2700   	; 0x516 <transmit_data>
		break;
     fa2:	81 e0       	ldi	r24, 0x01	; 1
		case Press3_state8:
		transmit_data(simon_SevenSeg(lives));
     fa4:	82 b9       	out	0x02, r24	; 2
     fa6:	08 95       	ret
     fa8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     fac:	d3 da       	rcall	.-2650   	; 0x554 <simon_SevenSeg>
		PORTA = 0x02;
     fae:	b3 da       	rcall	.-2714   	; 0x516 <transmit_data>
     fb0:	82 e0       	ldi	r24, 0x02	; 2
		break;
     fb2:	82 b9       	out	0x02, r24	; 2
		case Press3_state9:
		LCD_DisplayString(1, "Level 3 Clear");
     fb4:	08 95       	ret
     fb6:	68 e5       	ldi	r22, 0x58	; 88
     fb8:	71 e0       	ldi	r23, 0x01	; 1
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	85 d9       	rcall	.-3318   	; 0x2c8 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
     fbe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     fc2:	c8 da       	rcall	.-2672   	; 0x554 <simon_SevenSeg>
     fc4:	a8 da       	rcall	.-2736   	; 0x516 <transmit_data>
     fc6:	88 e0       	ldi	r24, 0x08	; 8
     fc8:	82 b9       	out	0x02, r24	; 2
		PORTA = 0x08;
     fca:	08 95       	ret
     fcc:	12 b8       	out	0x02, r1	; 2
		break;
     fce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		case Off3:
		PORTA = 0x00;
		transmit_data(simon_SevenSeg(lives));
     fd2:	c0 da       	rcall	.-2688   	; 0x554 <simon_SevenSeg>
     fd4:	a0 da       	rcall	.-2752   	; 0x516 <transmit_data>
     fd6:	86 e0       	ldi	r24, 0x06	; 6
     fd8:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
     fdc:	08 95       	ret

00000fde <TickFct_Machine4>:
		global_g = 6;
     fde:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <SM4_States>
     fe2:	8e 2f       	mov	r24, r30
     fe4:	90 e0       	ldi	r25, 0x00	; 0
}

enum SM4_States {SM4_off, SM4_on1, SM4_on2, SM4_on3, SM4_on4, SM4_on5, SM4_on6, SM4_on7, SM4_on8, SM4_on9, SM4_on10, SM4_on11, SM4_on12} SM4_States;
void TickFct_Machine4()
{
	switch(SM4_States)
     fe6:	8d 30       	cpi	r24, 0x0D	; 13
     fe8:	91 05       	cpc	r25, r1
     fea:	08 f0       	brcs	.+2      	; 0xfee <TickFct_Machine4+0x10>
     fec:	46 c0       	rjmp	.+140    	; 0x107a <TickFct_Machine4+0x9c>
     fee:	fc 01       	movw	r30, r24
     ff0:	e3 57       	subi	r30, 0x73	; 115
     ff2:	ff 4f       	sbci	r31, 0xFF	; 255
     ff4:	0d c7       	rjmp	.+3610   	; 0x1e10 <__tablejump2__>
	{
		case SM4_off:
		LCD_DisplayString(1, "Level 4");
     ff6:	66 e6       	ldi	r22, 0x66	; 102
     ff8:	71 e0       	ldi	r23, 0x01	; 1
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	65 d9       	rcall	.-3382   	; 0x2c8 <LCD_DisplayString>
		if(global_g == 6)
     ffe:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1002:	86 30       	cpi	r24, 0x06	; 6
    1004:	d1 f5       	brne	.+116    	; 0x107a <TickFct_Machine4+0x9c>
		{
			if(~PINB & 0x01)
    1006:	18 99       	sbic	0x03, 0	; 3
    1008:	06 c0       	rjmp	.+12     	; 0x1016 <TickFct_Machine4+0x38>
			{
				while(~PINB & 0x01){}
    100a:	18 9b       	sbis	0x03, 0	; 3
    100c:	fe cf       	rjmp	.-4      	; 0x100a <TickFct_Machine4+0x2c>
				SM4_States = SM4_on1;
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    1014:	3f c0       	rjmp	.+126    	; 0x1094 <TickFct_Machine4+0xb6>
			}
			else
			{
				SM4_States = SM4_off;
    1016:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <SM4_States>
    101a:	3a c0       	rjmp	.+116    	; 0x1090 <TickFct_Machine4+0xb2>
			}
		}
		break;
		case SM4_on1:
		SM4_States = SM4_on2;
    101c:	82 e0       	ldi	r24, 0x02	; 2
    101e:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    1022:	3b c0       	rjmp	.+118    	; 0x109a <TickFct_Machine4+0xbc>
		break;
		case SM4_on2:
		SM4_States = SM4_on3;
    1024:	83 e0       	ldi	r24, 0x03	; 3
    1026:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    102a:	3a c0       	rjmp	.+116    	; 0x10a0 <TickFct_Machine4+0xc2>
		break;
		case SM4_on3:
		SM4_States = SM4_on4;
    102c:	84 e0       	ldi	r24, 0x04	; 4
    102e:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    1032:	39 c0       	rjmp	.+114    	; 0x10a6 <TickFct_Machine4+0xc8>
		break;
		case SM4_on4:
		SM4_States = SM4_on5;
    1034:	85 e0       	ldi	r24, 0x05	; 5
    1036:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    103a:	38 c0       	rjmp	.+112    	; 0x10ac <TickFct_Machine4+0xce>
		break;
		case SM4_on5:
		SM4_States = SM4_on6;
    103c:	86 e0       	ldi	r24, 0x06	; 6
    103e:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    1042:	37 c0       	rjmp	.+110    	; 0x10b2 <TickFct_Machine4+0xd4>
		break;
		case SM4_on6:
		SM4_States = SM4_on7;
    1044:	87 e0       	ldi	r24, 0x07	; 7
    1046:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    104a:	36 c0       	rjmp	.+108    	; 0x10b8 <TickFct_Machine4+0xda>
		break;
		case SM4_on7:
		SM4_States = SM4_on8;
    104c:	88 e0       	ldi	r24, 0x08	; 8
    104e:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    1052:	35 c0       	rjmp	.+106    	; 0x10be <TickFct_Machine4+0xe0>
		break;
		case SM4_on8:
		SM4_States = SM4_on9;
    1054:	89 e0       	ldi	r24, 0x09	; 9
    1056:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    105a:	34 c0       	rjmp	.+104    	; 0x10c4 <TickFct_Machine4+0xe6>
		break;
		case SM4_on9:
		SM4_States = SM4_on10;
    105c:	8a e0       	ldi	r24, 0x0A	; 10
    105e:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    1062:	33 c0       	rjmp	.+102    	; 0x10ca <TickFct_Machine4+0xec>
		break;
		case SM4_on10:
		SM4_States = SM4_on11;
    1064:	8b e0       	ldi	r24, 0x0B	; 11
    1066:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    106a:	32 c0       	rjmp	.+100    	; 0x10d0 <TickFct_Machine4+0xf2>
		break;
		case SM4_on11:
		SM4_States = SM4_on12;
    106c:	8c e0       	ldi	r24, 0x0C	; 12
    106e:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SM4_States>
    1072:	31 c0       	rjmp	.+98     	; 0x10d6 <TickFct_Machine4+0xf8>
		break;
		case SM4_on12:
		SM4_States = SM4_off;
    1074:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <SM4_States>
		break;
    1078:	0b c0       	rjmp	.+22     	; 0x1090 <TickFct_Machine4+0xb2>
	}
	switch(SM4_States)
    107a:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <SM4_States>
    107e:	8e 2f       	mov	r24, r30
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	8d 30       	cpi	r24, 0x0D	; 13
    1084:	91 05       	cpc	r25, r1
    1086:	80 f5       	brcc	.+96     	; 0x10e8 <TickFct_Machine4+0x10a>
    1088:	fc 01       	movw	r30, r24
    108a:	e6 56       	subi	r30, 0x66	; 102
    108c:	ff 4f       	sbci	r31, 0xFF	; 255
    108e:	c0 c6       	rjmp	.+3456   	; 0x1e10 <__tablejump2__>
	{
		case SM4_off:
		PORTA = 0x00;
    1090:	12 b8       	out	0x02, r1	; 2
		break;
    1092:	08 95       	ret
		case SM4_on1:
		PORTA = 0x01;
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	82 b9       	out	0x02, r24	; 2
		break;
    1098:	08 95       	ret
		case SM4_on2:
		PORTA = 0x08;
    109a:	88 e0       	ldi	r24, 0x08	; 8
    109c:	82 b9       	out	0x02, r24	; 2
		break;
    109e:	08 95       	ret
		case SM4_on3:
		PORTA = 0x02;
    10a0:	82 e0       	ldi	r24, 0x02	; 2
    10a2:	82 b9       	out	0x02, r24	; 2
		break;
    10a4:	08 95       	ret
		case SM4_on4:
		PORTA = 0x01;
    10a6:	81 e0       	ldi	r24, 0x01	; 1
    10a8:	82 b9       	out	0x02, r24	; 2
		break;
    10aa:	08 95       	ret
		case SM4_on5:
		PORTA = 0x02;
    10ac:	82 e0       	ldi	r24, 0x02	; 2
    10ae:	82 b9       	out	0x02, r24	; 2
		break;
    10b0:	08 95       	ret
		case SM4_on6:
		PORTA = 0x08;
    10b2:	88 e0       	ldi	r24, 0x08	; 8
    10b4:	82 b9       	out	0x02, r24	; 2
		break;
    10b6:	08 95       	ret
		case SM4_on7:
		PORTA = 0x02;
    10b8:	82 e0       	ldi	r24, 0x02	; 2
    10ba:	82 b9       	out	0x02, r24	; 2
		break;
    10bc:	08 95       	ret
		case SM4_on8:
		PORTA = 0x01;
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	82 b9       	out	0x02, r24	; 2
		break;
    10c2:	08 95       	ret
		case SM4_on9:
		PORTA = 0x08;
    10c4:	88 e0       	ldi	r24, 0x08	; 8
    10c6:	82 b9       	out	0x02, r24	; 2
		break;
    10c8:	08 95       	ret
		case SM4_on10:
		PORTA = 0x01;
    10ca:	81 e0       	ldi	r24, 0x01	; 1
    10cc:	82 b9       	out	0x02, r24	; 2
		break;
    10ce:	08 95       	ret
		case SM4_on11:
		PORTA = 0x02;
    10d0:	82 e0       	ldi	r24, 0x02	; 2
    10d2:	82 b9       	out	0x02, r24	; 2
		break;
    10d4:	08 95       	ret
		case SM4_on12:
		LCD_DisplayString(1,"Begin Pressing  Now");
    10d6:	68 e1       	ldi	r22, 0x18	; 24
    10d8:	71 e0       	ldi	r23, 0x01	; 1
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	f5 d8       	rcall	.-3606   	; 0x2c8 <LCD_DisplayString>
		PORTA = 0x01;
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	82 b9       	out	0x02, r24	; 2
		global_g = 7;
    10e2:	87 e0       	ldi	r24, 0x07	; 7
    10e4:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
    10e8:	08 95       	ret

000010ea <ButtonPress4>:
}

enum Press_fourth_level{Init4, Press4_state1, Press4_state2, Press4_state3, Press4_state4, Press4_state5, Press4_state6, Press4_state7, Press4_state8, Press4_state9, Press4_state10, Press4_state11, Press4_state12, Error4, Off4} Press_fourth_level;
void ButtonPress4()
{
	switch(Press_fourth_level)
    10ea:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <Press_fourth_level>
    10ee:	8e 2f       	mov	r24, r30
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	8e 30       	cpi	r24, 0x0E	; 14
    10f4:	91 05       	cpc	r25, r1
    10f6:	08 f0       	brcs	.+2      	; 0x10fa <ButtonPress4+0x10>
    10f8:	b0 c1       	rjmp	.+864    	; 0x145a <ButtonPress4+0x370>
    10fa:	fc 01       	movw	r30, r24
    10fc:	e9 55       	subi	r30, 0x59	; 89
    10fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1100:	87 c6       	rjmp	.+3342   	; 0x1e10 <__tablejump2__>
	{
		case Init4:
		if(global_g == 7)
    1102:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1106:	87 30       	cpi	r24, 0x07	; 7
    1108:	09 f0       	breq	.+2      	; 0x110c <ButtonPress4+0x22>
    110a:	1e c2       	rjmp	.+1084   	; 0x1548 <ButtonPress4+0x45e>
		{
			PORTA = 0x00;
    110c:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x01)
    110e:	18 99       	sbic	0x03, 0	; 3
    1110:	05 c0       	rjmp	.+10     	; 0x111c <ButtonPress4+0x32>
			{
				while(~PINB & 0x01){}
    1112:	18 9b       	sbis	0x03, 0	; 3
    1114:	fe cf       	rjmp	.-4      	; 0x1112 <ButtonPress4+0x28>
				Press_fourth_level = Press4_state1;
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    111c:	19 9b       	sbis	0x03, 1	; 3
    111e:	04 c0       	rjmp	.+8      	; 0x1128 <ButtonPress4+0x3e>
    1120:	1a 9b       	sbis	0x03, 2	; 3
    1122:	02 c0       	rjmp	.+4      	; 0x1128 <ButtonPress4+0x3e>
    1124:	1b 99       	sbic	0x03, 3	; 3
    1126:	99 c1       	rjmp	.+818    	; 0x145a <ButtonPress4+0x370>
			{
				if(lives - 1 > -1)
    1128:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    112c:	28 2f       	mov	r18, r24
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	21 50       	subi	r18, 0x01	; 1
    1132:	31 09       	sbc	r19, r1
    1134:	1a f0       	brmi	.+6      	; 0x113c <ButtonPress4+0x52>
				{
					lives--;
    1136:	81 50       	subi	r24, 0x01	; 1
    1138:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				}
				if(lives == 0)
    113c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1140:	81 11       	cpse	r24, r1
    1142:	03 c0       	rjmp	.+6      	; 0x114a <ButtonPress4+0x60>
				{
					global_g = 20;
    1144:	84 e1       	ldi	r24, 0x14	; 20
    1146:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
				}
				Press_fourth_level = Error4;
    114a:	8d e0       	ldi	r24, 0x0D	; 13
    114c:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    1150:	91 c1       	rjmp	.+802    	; 0x1474 <ButtonPress4+0x38a>
			}
		}
		break;
		case Press4_state1:
		if(~PINB & 0x08)
    1152:	1b 99       	sbic	0x03, 3	; 3
    1154:	05 c0       	rjmp	.+10     	; 0x1160 <ButtonPress4+0x76>
		{
			while(~PINB & 0x08){}
    1156:	1b 9b       	sbis	0x03, 3	; 3
    1158:	fe cf       	rjmp	.-4      	; 0x1156 <ButtonPress4+0x6c>
			Press_fourth_level = Press4_state2;
    115a:	82 e0       	ldi	r24, 0x02	; 2
    115c:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1160:	19 9b       	sbis	0x03, 1	; 3
    1162:	04 c0       	rjmp	.+8      	; 0x116c <ButtonPress4+0x82>
    1164:	1a 9b       	sbis	0x03, 2	; 3
    1166:	02 c0       	rjmp	.+4      	; 0x116c <ButtonPress4+0x82>
    1168:	18 99       	sbic	0x03, 0	; 3
    116a:	77 c1       	rjmp	.+750    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    116c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1170:	28 2f       	mov	r18, r24
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	21 50       	subi	r18, 0x01	; 1
    1176:	31 09       	sbc	r19, r1
    1178:	1a f0       	brmi	.+6      	; 0x1180 <ButtonPress4+0x96>
			{
				lives--;
    117a:	81 50       	subi	r24, 0x01	; 1
    117c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1180:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1184:	81 11       	cpse	r24, r1
    1186:	03 c0       	rjmp	.+6      	; 0x118e <ButtonPress4+0xa4>
			{
				global_g = 20;
    1188:	84 e1       	ldi	r24, 0x14	; 20
    118a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    118e:	8d e0       	ldi	r24, 0x0D	; 13
    1190:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    1194:	6f c1       	rjmp	.+734    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state2:
		if(~PINB & 0x02)
    1196:	19 99       	sbic	0x03, 1	; 3
    1198:	05 c0       	rjmp	.+10     	; 0x11a4 <ButtonPress4+0xba>
		{
			while(~PINB & 0x02){}
    119a:	19 9b       	sbis	0x03, 1	; 3
    119c:	fe cf       	rjmp	.-4      	; 0x119a <ButtonPress4+0xb0>
			Press_fourth_level = Press4_state3;
    119e:	83 e0       	ldi	r24, 0x03	; 3
    11a0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    11a4:	18 9b       	sbis	0x03, 0	; 3
    11a6:	04 c0       	rjmp	.+8      	; 0x11b0 <ButtonPress4+0xc6>
    11a8:	1a 9b       	sbis	0x03, 2	; 3
    11aa:	02 c0       	rjmp	.+4      	; 0x11b0 <ButtonPress4+0xc6>
    11ac:	1b 99       	sbic	0x03, 3	; 3
    11ae:	55 c1       	rjmp	.+682    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    11b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    11b4:	28 2f       	mov	r18, r24
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	21 50       	subi	r18, 0x01	; 1
    11ba:	31 09       	sbc	r19, r1
    11bc:	1a f0       	brmi	.+6      	; 0x11c4 <ButtonPress4+0xda>
			{
				lives--;
    11be:	81 50       	subi	r24, 0x01	; 1
    11c0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    11c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    11c8:	81 11       	cpse	r24, r1
    11ca:	03 c0       	rjmp	.+6      	; 0x11d2 <ButtonPress4+0xe8>
			{
				global_g = 20;
    11cc:	84 e1       	ldi	r24, 0x14	; 20
    11ce:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    11d2:	8d e0       	ldi	r24, 0x0D	; 13
    11d4:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    11d8:	4d c1       	rjmp	.+666    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state3:
		if(~PINB & 0x01)
    11da:	18 99       	sbic	0x03, 0	; 3
    11dc:	05 c0       	rjmp	.+10     	; 0x11e8 <ButtonPress4+0xfe>
		{
			while(~PINB & 0x01){}
    11de:	18 9b       	sbis	0x03, 0	; 3
    11e0:	fe cf       	rjmp	.-4      	; 0x11de <ButtonPress4+0xf4>
			Press_fourth_level = Press4_state4;
    11e2:	84 e0       	ldi	r24, 0x04	; 4
    11e4:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    11e8:	19 9b       	sbis	0x03, 1	; 3
    11ea:	04 c0       	rjmp	.+8      	; 0x11f4 <ButtonPress4+0x10a>
    11ec:	1a 9b       	sbis	0x03, 2	; 3
    11ee:	02 c0       	rjmp	.+4      	; 0x11f4 <ButtonPress4+0x10a>
    11f0:	1b 99       	sbic	0x03, 3	; 3
    11f2:	33 c1       	rjmp	.+614    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    11f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    11f8:	28 2f       	mov	r18, r24
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	21 50       	subi	r18, 0x01	; 1
    11fe:	31 09       	sbc	r19, r1
    1200:	1a f0       	brmi	.+6      	; 0x1208 <ButtonPress4+0x11e>
			{
				lives--;
    1202:	81 50       	subi	r24, 0x01	; 1
    1204:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1208:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    120c:	81 11       	cpse	r24, r1
    120e:	03 c0       	rjmp	.+6      	; 0x1216 <ButtonPress4+0x12c>
			{
				global_g = 20;
    1210:	84 e1       	ldi	r24, 0x14	; 20
    1212:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    1216:	8d e0       	ldi	r24, 0x0D	; 13
    1218:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    121c:	2b c1       	rjmp	.+598    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state4:
		if(~PINB & 0x02)
    121e:	19 99       	sbic	0x03, 1	; 3
    1220:	05 c0       	rjmp	.+10     	; 0x122c <ButtonPress4+0x142>
		{
			while(~PINB & 0x02){}
    1222:	19 9b       	sbis	0x03, 1	; 3
    1224:	fe cf       	rjmp	.-4      	; 0x1222 <ButtonPress4+0x138>
			Press_fourth_level = Press4_state5;
    1226:	85 e0       	ldi	r24, 0x05	; 5
    1228:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    122c:	18 9b       	sbis	0x03, 0	; 3
    122e:	04 c0       	rjmp	.+8      	; 0x1238 <ButtonPress4+0x14e>
    1230:	1a 9b       	sbis	0x03, 2	; 3
    1232:	02 c0       	rjmp	.+4      	; 0x1238 <ButtonPress4+0x14e>
    1234:	1b 99       	sbic	0x03, 3	; 3
    1236:	11 c1       	rjmp	.+546    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    1238:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    123c:	28 2f       	mov	r18, r24
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	21 50       	subi	r18, 0x01	; 1
    1242:	31 09       	sbc	r19, r1
    1244:	1a f0       	brmi	.+6      	; 0x124c <ButtonPress4+0x162>
			{
				lives--;
    1246:	81 50       	subi	r24, 0x01	; 1
    1248:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    124c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1250:	81 11       	cpse	r24, r1
    1252:	03 c0       	rjmp	.+6      	; 0x125a <ButtonPress4+0x170>
			{
				global_g = 20;
    1254:	84 e1       	ldi	r24, 0x14	; 20
    1256:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    125a:	8d e0       	ldi	r24, 0x0D	; 13
    125c:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    1260:	09 c1       	rjmp	.+530    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state5:
		if(~PINB & 0x08)
    1262:	1b 99       	sbic	0x03, 3	; 3
    1264:	05 c0       	rjmp	.+10     	; 0x1270 <ButtonPress4+0x186>
		{
			while(~PINB & 0x08){}
    1266:	1b 9b       	sbis	0x03, 3	; 3
    1268:	fe cf       	rjmp	.-4      	; 0x1266 <ButtonPress4+0x17c>
			Press_fourth_level = Press4_state6;
    126a:	86 e0       	ldi	r24, 0x06	; 6
    126c:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1270:	19 9b       	sbis	0x03, 1	; 3
    1272:	04 c0       	rjmp	.+8      	; 0x127c <ButtonPress4+0x192>
    1274:	1a 9b       	sbis	0x03, 2	; 3
    1276:	02 c0       	rjmp	.+4      	; 0x127c <ButtonPress4+0x192>
    1278:	18 99       	sbic	0x03, 0	; 3
    127a:	ef c0       	rjmp	.+478    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    127c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1280:	28 2f       	mov	r18, r24
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	21 50       	subi	r18, 0x01	; 1
    1286:	31 09       	sbc	r19, r1
    1288:	1a f0       	brmi	.+6      	; 0x1290 <ButtonPress4+0x1a6>
			{
				lives--;
    128a:	81 50       	subi	r24, 0x01	; 1
    128c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1290:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1294:	81 11       	cpse	r24, r1
    1296:	03 c0       	rjmp	.+6      	; 0x129e <ButtonPress4+0x1b4>
			{
				global_g = 20;
    1298:	84 e1       	ldi	r24, 0x14	; 20
    129a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    129e:	8d e0       	ldi	r24, 0x0D	; 13
    12a0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    12a4:	e7 c0       	rjmp	.+462    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state6:
		if(~PINB & 0x02)
    12a6:	19 99       	sbic	0x03, 1	; 3
    12a8:	05 c0       	rjmp	.+10     	; 0x12b4 <ButtonPress4+0x1ca>
		{
			while(~PINB & 0x02){}
    12aa:	19 9b       	sbis	0x03, 1	; 3
    12ac:	fe cf       	rjmp	.-4      	; 0x12aa <ButtonPress4+0x1c0>
			Press_fourth_level = Press4_state7;
    12ae:	87 e0       	ldi	r24, 0x07	; 7
    12b0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    12b4:	18 9b       	sbis	0x03, 0	; 3
    12b6:	04 c0       	rjmp	.+8      	; 0x12c0 <ButtonPress4+0x1d6>
    12b8:	1a 9b       	sbis	0x03, 2	; 3
    12ba:	02 c0       	rjmp	.+4      	; 0x12c0 <ButtonPress4+0x1d6>
    12bc:	1b 99       	sbic	0x03, 3	; 3
    12be:	cd c0       	rjmp	.+410    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    12c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    12c4:	28 2f       	mov	r18, r24
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	21 50       	subi	r18, 0x01	; 1
    12ca:	31 09       	sbc	r19, r1
    12cc:	1a f0       	brmi	.+6      	; 0x12d4 <ButtonPress4+0x1ea>
			{
				lives--;
    12ce:	81 50       	subi	r24, 0x01	; 1
    12d0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    12d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    12d8:	81 11       	cpse	r24, r1
    12da:	03 c0       	rjmp	.+6      	; 0x12e2 <ButtonPress4+0x1f8>
			{
				global_g = 20;
    12dc:	84 e1       	ldi	r24, 0x14	; 20
    12de:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    12e2:	8d e0       	ldi	r24, 0x0D	; 13
    12e4:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    12e8:	c5 c0       	rjmp	.+394    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state7:
		if(~PINB & 0x01)
    12ea:	18 99       	sbic	0x03, 0	; 3
    12ec:	05 c0       	rjmp	.+10     	; 0x12f8 <ButtonPress4+0x20e>
		{
			while(~PINB & 0x01){}
    12ee:	18 9b       	sbis	0x03, 0	; 3
    12f0:	fe cf       	rjmp	.-4      	; 0x12ee <ButtonPress4+0x204>
			Press_fourth_level = Press4_state8;
    12f2:	88 e0       	ldi	r24, 0x08	; 8
    12f4:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    12f8:	19 9b       	sbis	0x03, 1	; 3
    12fa:	04 c0       	rjmp	.+8      	; 0x1304 <ButtonPress4+0x21a>
    12fc:	1a 9b       	sbis	0x03, 2	; 3
    12fe:	02 c0       	rjmp	.+4      	; 0x1304 <ButtonPress4+0x21a>
    1300:	1b 99       	sbic	0x03, 3	; 3
    1302:	ab c0       	rjmp	.+342    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    1304:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1308:	28 2f       	mov	r18, r24
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	21 50       	subi	r18, 0x01	; 1
    130e:	31 09       	sbc	r19, r1
    1310:	1a f0       	brmi	.+6      	; 0x1318 <ButtonPress4+0x22e>
			{
				lives--;
    1312:	81 50       	subi	r24, 0x01	; 1
    1314:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1318:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    131c:	81 11       	cpse	r24, r1
    131e:	03 c0       	rjmp	.+6      	; 0x1326 <ButtonPress4+0x23c>
			{
				global_g = 20;
    1320:	84 e1       	ldi	r24, 0x14	; 20
    1322:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    1326:	8d e0       	ldi	r24, 0x0D	; 13
    1328:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    132c:	a3 c0       	rjmp	.+326    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state8:
		if(~PINB & 0x08)
    132e:	1b 99       	sbic	0x03, 3	; 3
    1330:	05 c0       	rjmp	.+10     	; 0x133c <ButtonPress4+0x252>
		{
			while(~PINB & 0x08){}
    1332:	1b 9b       	sbis	0x03, 3	; 3
    1334:	fe cf       	rjmp	.-4      	; 0x1332 <ButtonPress4+0x248>
			Press_fourth_level = Press4_state9;
    1336:	89 e0       	ldi	r24, 0x09	; 9
    1338:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    133c:	19 9b       	sbis	0x03, 1	; 3
    133e:	04 c0       	rjmp	.+8      	; 0x1348 <ButtonPress4+0x25e>
    1340:	1a 9b       	sbis	0x03, 2	; 3
    1342:	02 c0       	rjmp	.+4      	; 0x1348 <ButtonPress4+0x25e>
    1344:	18 99       	sbic	0x03, 0	; 3
    1346:	89 c0       	rjmp	.+274    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    1348:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    134c:	28 2f       	mov	r18, r24
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	21 50       	subi	r18, 0x01	; 1
    1352:	31 09       	sbc	r19, r1
    1354:	1a f0       	brmi	.+6      	; 0x135c <ButtonPress4+0x272>
			{
				lives--;
    1356:	81 50       	subi	r24, 0x01	; 1
    1358:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    135c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1360:	81 11       	cpse	r24, r1
    1362:	03 c0       	rjmp	.+6      	; 0x136a <ButtonPress4+0x280>
			{
				global_g = 20;
    1364:	84 e1       	ldi	r24, 0x14	; 20
    1366:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    136a:	8d e0       	ldi	r24, 0x0D	; 13
    136c:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    1370:	81 c0       	rjmp	.+258    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state9:
		if(~PINB & 0x01)
    1372:	18 99       	sbic	0x03, 0	; 3
    1374:	05 c0       	rjmp	.+10     	; 0x1380 <ButtonPress4+0x296>
		{
			while(~PINB & 0x01){}
    1376:	18 9b       	sbis	0x03, 0	; 3
    1378:	fe cf       	rjmp	.-4      	; 0x1376 <ButtonPress4+0x28c>
			Press_fourth_level = Press4_state10;
    137a:	8a e0       	ldi	r24, 0x0A	; 10
    137c:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1380:	19 9b       	sbis	0x03, 1	; 3
    1382:	04 c0       	rjmp	.+8      	; 0x138c <ButtonPress4+0x2a2>
    1384:	1a 9b       	sbis	0x03, 2	; 3
    1386:	02 c0       	rjmp	.+4      	; 0x138c <ButtonPress4+0x2a2>
    1388:	1b 99       	sbic	0x03, 3	; 3
    138a:	67 c0       	rjmp	.+206    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    138c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1390:	28 2f       	mov	r18, r24
    1392:	30 e0       	ldi	r19, 0x00	; 0
    1394:	21 50       	subi	r18, 0x01	; 1
    1396:	31 09       	sbc	r19, r1
    1398:	1a f0       	brmi	.+6      	; 0x13a0 <ButtonPress4+0x2b6>
			{
				lives--;
    139a:	81 50       	subi	r24, 0x01	; 1
    139c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    13a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13a4:	81 11       	cpse	r24, r1
    13a6:	03 c0       	rjmp	.+6      	; 0x13ae <ButtonPress4+0x2c4>
			{
				global_g = 20;
    13a8:	84 e1       	ldi	r24, 0x14	; 20
    13aa:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    13ae:	8d e0       	ldi	r24, 0x0D	; 13
    13b0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    13b4:	5f c0       	rjmp	.+190    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state10:
		if(~PINB & 0x02)
    13b6:	19 99       	sbic	0x03, 1	; 3
    13b8:	05 c0       	rjmp	.+10     	; 0x13c4 <ButtonPress4+0x2da>
		{
			while(~PINB & 0x02){}
    13ba:	19 9b       	sbis	0x03, 1	; 3
    13bc:	fe cf       	rjmp	.-4      	; 0x13ba <ButtonPress4+0x2d0>
			Press_fourth_level = Press4_state11;
    13be:	8b e0       	ldi	r24, 0x0B	; 11
    13c0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    13c4:	18 9b       	sbis	0x03, 0	; 3
    13c6:	04 c0       	rjmp	.+8      	; 0x13d0 <ButtonPress4+0x2e6>
    13c8:	1a 9b       	sbis	0x03, 2	; 3
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <ButtonPress4+0x2e6>
    13cc:	1b 99       	sbic	0x03, 3	; 3
    13ce:	45 c0       	rjmp	.+138    	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    13d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13d4:	28 2f       	mov	r18, r24
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	21 50       	subi	r18, 0x01	; 1
    13da:	31 09       	sbc	r19, r1
    13dc:	1a f0       	brmi	.+6      	; 0x13e4 <ButtonPress4+0x2fa>
			{
				lives--;
    13de:	81 50       	subi	r24, 0x01	; 1
    13e0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    13e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13e8:	81 11       	cpse	r24, r1
    13ea:	03 c0       	rjmp	.+6      	; 0x13f2 <ButtonPress4+0x308>
			{
				global_g = 20;
    13ec:	84 e1       	ldi	r24, 0x14	; 20
    13ee:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    13f2:	8d e0       	ldi	r24, 0x0D	; 13
    13f4:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    13f8:	3d c0       	rjmp	.+122    	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		
		case Press4_state11:
		if(~PINB & 0x01)
    13fa:	18 99       	sbic	0x03, 0	; 3
    13fc:	05 c0       	rjmp	.+10     	; 0x1408 <ButtonPress4+0x31e>
		{
			while(~PINB & 0x01){}
    13fe:	18 9b       	sbis	0x03, 0	; 3
    1400:	fe cf       	rjmp	.-4      	; 0x13fe <ButtonPress4+0x314>
			Press_fourth_level = Press4_state12;
    1402:	8c e0       	ldi	r24, 0x0C	; 12
    1404:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1408:	19 9b       	sbis	0x03, 1	; 3
    140a:	04 c0       	rjmp	.+8      	; 0x1414 <ButtonPress4+0x32a>
    140c:	1a 9b       	sbis	0x03, 2	; 3
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <ButtonPress4+0x32a>
    1410:	1b 99       	sbic	0x03, 3	; 3
    1412:	23 c0       	rjmp	.+70     	; 0x145a <ButtonPress4+0x370>
		{
			if(lives - 1 > -1)
    1414:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1418:	28 2f       	mov	r18, r24
    141a:	30 e0       	ldi	r19, 0x00	; 0
    141c:	21 50       	subi	r18, 0x01	; 1
    141e:	31 09       	sbc	r19, r1
    1420:	1a f0       	brmi	.+6      	; 0x1428 <ButtonPress4+0x33e>
			{
				lives--;
    1422:	81 50       	subi	r24, 0x01	; 1
    1424:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1428:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    142c:	81 11       	cpse	r24, r1
    142e:	03 c0       	rjmp	.+6      	; 0x1436 <ButtonPress4+0x34c>
			{
				global_g = 20;
    1430:	84 e1       	ldi	r24, 0x14	; 20
    1432:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fourth_level = Error4;
    1436:	8d e0       	ldi	r24, 0x0D	; 13
    1438:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    143c:	1b c0       	rjmp	.+54     	; 0x1474 <ButtonPress4+0x38a>
		}
		break;
		case Press4_state12:
		if(~PINB & 0x10)
    143e:	1c 99       	sbic	0x03, 4	; 3
    1440:	6d c0       	rjmp	.+218    	; 0x151c <ButtonPress4+0x432>
		{
			Press_fourth_level = Off4;
    1442:	8e e0       	ldi	r24, 0x0E	; 14
    1444:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    1448:	76 c0       	rjmp	.+236    	; 0x1536 <ButtonPress4+0x44c>
		}
		break;
		case Error4:
		if(~PINB & 0x01)
    144a:	18 99       	sbic	0x03, 0	; 3
    144c:	13 c0       	rjmp	.+38     	; 0x1474 <ButtonPress4+0x38a>
		{
			while(~PINB & 0x01){}
    144e:	18 9b       	sbis	0x03, 0	; 3
    1450:	fe cf       	rjmp	.-4      	; 0x144e <ButtonPress4+0x364>
			Press_fourth_level = Press4_state1;
    1452:	81 e0       	ldi	r24, 0x01	; 1
    1454:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <Press_fourth_level>
    1458:	14 c0       	rjmp	.+40     	; 0x1482 <ButtonPress4+0x398>
		}
	}
	switch(Press_fourth_level)
    145a:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <Press_fourth_level>
    145e:	8e 2f       	mov	r24, r30
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	fc 01       	movw	r30, r24
    1464:	31 97       	sbiw	r30, 0x01	; 1
    1466:	ee 30       	cpi	r30, 0x0E	; 14
    1468:	f1 05       	cpc	r31, r1
    146a:	08 f0       	brcs	.+2      	; 0x146e <ButtonPress4+0x384>
    146c:	6d c0       	rjmp	.+218    	; 0x1548 <ButtonPress4+0x45e>
    146e:	eb 54       	subi	r30, 0x4B	; 75
    1470:	ff 4f       	sbci	r31, 0xFF	; 255
    1472:	ce c4       	rjmp	.+2460   	; 0x1e10 <__tablejump2__>
	{
		case Error4:
		transmit_data(simon_SevenSeg(lives));
    1474:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1478:	6d d8       	rcall	.-3878   	; 0x554 <simon_SevenSeg>
    147a:	4d d8       	rcall	.-3942   	; 0x516 <transmit_data>
		PORTA = 0x10;
    147c:	80 e1       	ldi	r24, 0x10	; 16
		break;
		case Press4_state1:
		transmit_data(simon_SevenSeg(lives));
    147e:	82 b9       	out	0x02, r24	; 2
    1480:	08 95       	ret
    1482:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1486:	66 d8       	rcall	.-3892   	; 0x554 <simon_SevenSeg>
		PORTA = 0x01;
    1488:	46 d8       	rcall	.-3956   	; 0x516 <transmit_data>
		break;
    148a:	81 e0       	ldi	r24, 0x01	; 1
		case Press4_state2:
		transmit_data(simon_SevenSeg(lives));
    148c:	82 b9       	out	0x02, r24	; 2
    148e:	08 95       	ret
    1490:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x08;
    1494:	5f d8       	rcall	.-3906   	; 0x554 <simon_SevenSeg>
    1496:	3f d8       	rcall	.-3970   	; 0x516 <transmit_data>
		break;
    1498:	88 e0       	ldi	r24, 0x08	; 8
		case Press4_state3:
		transmit_data(simon_SevenSeg(lives));
    149a:	82 b9       	out	0x02, r24	; 2
    149c:	08 95       	ret
    149e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x02;
    14a2:	58 d8       	rcall	.-3920   	; 0x554 <simon_SevenSeg>
    14a4:	38 d8       	rcall	.-3984   	; 0x516 <transmit_data>
		break;
		case Press4_state4:
		transmit_data(simon_SevenSeg(lives));
    14a6:	82 e0       	ldi	r24, 0x02	; 2
    14a8:	82 b9       	out	0x02, r24	; 2
    14aa:	08 95       	ret
    14ac:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x01;
    14b0:	51 d8       	rcall	.-3934   	; 0x554 <simon_SevenSeg>
		break;
    14b2:	31 d8       	rcall	.-3998   	; 0x516 <transmit_data>
		case Press4_state5:
		transmit_data(simon_SevenSeg(lives));
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	82 b9       	out	0x02, r24	; 2
    14b8:	08 95       	ret
    14ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x02;
    14be:	4a d8       	rcall	.-3948   	; 0x554 <simon_SevenSeg>
    14c0:	2a d8       	rcall	.-4012   	; 0x516 <transmit_data>
		break;
    14c2:	82 e0       	ldi	r24, 0x02	; 2
		case Press4_state6:
		transmit_data(simon_SevenSeg(lives));
    14c4:	82 b9       	out	0x02, r24	; 2
    14c6:	08 95       	ret
    14c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x08;
    14cc:	43 d8       	rcall	.-3962   	; 0x554 <simon_SevenSeg>
    14ce:	23 d8       	rcall	.-4026   	; 0x516 <transmit_data>
		break;
    14d0:	88 e0       	ldi	r24, 0x08	; 8
		case Press4_state7:
		transmit_data(simon_SevenSeg(lives));
    14d2:	82 b9       	out	0x02, r24	; 2
    14d4:	08 95       	ret
    14d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x02;
    14da:	3c d8       	rcall	.-3976   	; 0x554 <simon_SevenSeg>
		break;
		case Press4_state8:
		transmit_data(simon_SevenSeg(lives));
    14dc:	1c d8       	rcall	.-4040   	; 0x516 <transmit_data>
    14de:	82 e0       	ldi	r24, 0x02	; 2
    14e0:	82 b9       	out	0x02, r24	; 2
    14e2:	08 95       	ret
    14e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x01;
		break;
    14e8:	35 d8       	rcall	.-3990   	; 0x554 <simon_SevenSeg>
		case Press4_state9:
		transmit_data(simon_SevenSeg(lives));
    14ea:	15 d8       	rcall	.-4054   	; 0x516 <transmit_data>
    14ec:	81 e0       	ldi	r24, 0x01	; 1
    14ee:	82 b9       	out	0x02, r24	; 2
    14f0:	08 95       	ret
    14f2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		PORTA = 0x08;
    14f6:	2e d8       	rcall	.-4004   	; 0x554 <simon_SevenSeg>
    14f8:	0e d8       	rcall	.-4068   	; 0x516 <transmit_data>
		break;
		case Press4_state10:
		transmit_data(simon_SevenSeg(lives));
    14fa:	88 e0       	ldi	r24, 0x08	; 8
    14fc:	82 b9       	out	0x02, r24	; 2
    14fe:	08 95       	ret
    1500:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1504:	27 d8       	rcall	.-4018   	; 0x554 <simon_SevenSeg>
		PORTA = 0x01;
    1506:	07 d8       	rcall	.-4082   	; 0x516 <transmit_data>
		break;
    1508:	81 e0       	ldi	r24, 0x01	; 1
		case Press4_state11:
		transmit_data(simon_SevenSeg(lives));
    150a:	82 b9       	out	0x02, r24	; 2
    150c:	08 95       	ret
    150e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1512:	20 d8       	rcall	.-4032   	; 0x554 <simon_SevenSeg>
    1514:	00 d8       	rcall	.-4096   	; 0x516 <transmit_data>
		PORTA = 0x02;
    1516:	82 e0       	ldi	r24, 0x02	; 2
    1518:	82 b9       	out	0x02, r24	; 2
		break;
    151a:	08 95       	ret
		case Press4_state12:
		LCD_DisplayString(1, "Level 4 Clear");
    151c:	6e e6       	ldi	r22, 0x6E	; 110
    151e:	71 e0       	ldi	r23, 0x01	; 1
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
    1526:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    152a:	14 d8       	rcall	.-4056   	; 0x554 <simon_SevenSeg>
    152c:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
    1530:	81 e0       	ldi	r24, 0x01	; 1
		PORTA = 0x01;
    1532:	82 b9       	out	0x02, r24	; 2
    1534:	08 95       	ret
		break;
    1536:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		case Off4:
		transmit_data(simon_SevenSeg(lives));
    153a:	0c d8       	rcall	.-4072   	; 0x554 <simon_SevenSeg>
    153c:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
    1540:	12 b8       	out	0x02, r1	; 2
    1542:	88 e0       	ldi	r24, 0x08	; 8
		PORTA = 0x00;
    1544:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
		global_g = 8;
    1548:	08 95       	ret

0000154a <TickFct_Machine5>:
    154a:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <SM5_States>
}

enum SM5_States{SM5_off, SM5_on1, SM5_on2, SM5_on3, SM5_on4, SM5_on5, SM5_on6, SM5_on7, SM5_on8, SM5_on9, SM5_on10, SM5_on11, SM5_on12, SM5_on13, SM5_on14, SM5_on15} SM5_States;
void TickFct_Machine5()
{
	switch(SM5_States)
    154e:	8e 2f       	mov	r24, r30
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	80 31       	cpi	r24, 0x10	; 16
    1554:	91 05       	cpc	r25, r1
    1556:	08 f0       	brcs	.+2      	; 0x155a <TickFct_Machine5+0x10>
    1558:	54 c0       	rjmp	.+168    	; 0x1602 <TickFct_Machine5+0xb8>
    155a:	fc 01       	movw	r30, r24
    155c:	ed 53       	subi	r30, 0x3D	; 61
    155e:	ff 4f       	sbci	r31, 0xFF	; 255
    1560:	57 c4       	rjmp	.+2222   	; 0x1e10 <__tablejump2__>
	{
		case SM5_off:
		LCD_DisplayString(1, "Level 5");
    1562:	6c e7       	ldi	r22, 0x7C	; 124
    1564:	71 e0       	ldi	r23, 0x01	; 1
    1566:	81 e0       	ldi	r24, 0x01	; 1
    1568:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LCD_DisplayString>
		if(global_g == 8)
    156c:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1570:	88 30       	cpi	r24, 0x08	; 8
    1572:	09 f0       	breq	.+2      	; 0x1576 <TickFct_Machine5+0x2c>
    1574:	46 c0       	rjmp	.+140    	; 0x1602 <TickFct_Machine5+0xb8>
		{
			if(~PINB & 0x01)
    1576:	18 99       	sbic	0x03, 0	; 3
    1578:	06 c0       	rjmp	.+12     	; 0x1586 <TickFct_Machine5+0x3c>
			{
				while(~PINB & 0x01){}
    157a:	18 9b       	sbis	0x03, 0	; 3
    157c:	fe cf       	rjmp	.-4      	; 0x157a <TickFct_Machine5+0x30>
				SM5_States = SM5_on1;
    157e:	81 e0       	ldi	r24, 0x01	; 1
    1580:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    1584:	4b c0       	rjmp	.+150    	; 0x161c <TickFct_Machine5+0xd2>
			}
			else
			{
				SM5_States = SM5_off;
    1586:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <SM5_States>
    158a:	46 c0       	rjmp	.+140    	; 0x1618 <TickFct_Machine5+0xce>
			}
		}
		break;
		case SM5_on1:
		SM5_States = SM5_on2;
    158c:	82 e0       	ldi	r24, 0x02	; 2
    158e:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    1592:	47 c0       	rjmp	.+142    	; 0x1622 <TickFct_Machine5+0xd8>
		break;
		case SM5_on2:
		SM5_States = SM5_on3;
    1594:	83 e0       	ldi	r24, 0x03	; 3
    1596:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    159a:	46 c0       	rjmp	.+140    	; 0x1628 <TickFct_Machine5+0xde>
		break;
		case SM5_on3:
		SM5_States = SM5_on4;
    159c:	84 e0       	ldi	r24, 0x04	; 4
    159e:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15a2:	45 c0       	rjmp	.+138    	; 0x162e <TickFct_Machine5+0xe4>
		break;
		case SM5_on4:
		SM5_States = SM5_on5;
    15a4:	85 e0       	ldi	r24, 0x05	; 5
    15a6:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15aa:	44 c0       	rjmp	.+136    	; 0x1634 <TickFct_Machine5+0xea>
		break;
		case SM5_on5:
		SM5_States = SM5_on6;
    15ac:	86 e0       	ldi	r24, 0x06	; 6
    15ae:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15b2:	43 c0       	rjmp	.+134    	; 0x163a <TickFct_Machine5+0xf0>
		break;
		case SM5_on6:
		SM5_States = SM5_on7;
    15b4:	87 e0       	ldi	r24, 0x07	; 7
    15b6:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15ba:	42 c0       	rjmp	.+132    	; 0x1640 <TickFct_Machine5+0xf6>
		break;
		case SM5_on7:
		SM5_States = SM5_on8;
    15bc:	88 e0       	ldi	r24, 0x08	; 8
    15be:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15c2:	41 c0       	rjmp	.+130    	; 0x1646 <TickFct_Machine5+0xfc>
		break;
		case SM5_on8:
		SM5_States = SM5_on9;
    15c4:	89 e0       	ldi	r24, 0x09	; 9
    15c6:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15ca:	40 c0       	rjmp	.+128    	; 0x164c <TickFct_Machine5+0x102>
		break;
		case SM5_on9:
		SM5_States = SM5_on10;
    15cc:	8a e0       	ldi	r24, 0x0A	; 10
    15ce:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15d2:	3f c0       	rjmp	.+126    	; 0x1652 <TickFct_Machine5+0x108>
		break;
		case SM5_on10:
		SM5_States = SM5_on11;
    15d4:	8b e0       	ldi	r24, 0x0B	; 11
    15d6:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15da:	3e c0       	rjmp	.+124    	; 0x1658 <TickFct_Machine5+0x10e>
		break;
		case SM5_on11:
		SM5_States = SM5_on12;
    15dc:	8c e0       	ldi	r24, 0x0C	; 12
    15de:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15e2:	3d c0       	rjmp	.+122    	; 0x165e <TickFct_Machine5+0x114>
		break;
		case SM5_on12:
		SM5_States = SM5_on13;
    15e4:	8d e0       	ldi	r24, 0x0D	; 13
    15e6:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15ea:	3c c0       	rjmp	.+120    	; 0x1664 <TickFct_Machine5+0x11a>
		break;
		case SM5_on13:
		SM5_States = SM5_on14;
    15ec:	8e e0       	ldi	r24, 0x0E	; 14
    15ee:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15f2:	3b c0       	rjmp	.+118    	; 0x166a <TickFct_Machine5+0x120>
		break;
		case SM5_on14:
		SM5_States = SM5_on15;
    15f4:	8f e0       	ldi	r24, 0x0F	; 15
    15f6:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SM5_States>
    15fa:	3a c0       	rjmp	.+116    	; 0x1670 <TickFct_Machine5+0x126>
		break;
		case SM5_on15:
		SM5_States = SM5_off;
    15fc:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <SM5_States>
		break;
    1600:	0b c0       	rjmp	.+22     	; 0x1618 <TickFct_Machine5+0xce>
	}
	switch(SM5_States)
    1602:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <SM5_States>
    1606:	8e 2f       	mov	r24, r30
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	80 31       	cpi	r24, 0x10	; 16
    160c:	91 05       	cpc	r25, r1
    160e:	d0 f5       	brcc	.+116    	; 0x1684 <TickFct_Machine5+0x13a>
    1610:	fc 01       	movw	r30, r24
    1612:	ed 52       	subi	r30, 0x2D	; 45
    1614:	ff 4f       	sbci	r31, 0xFF	; 255
    1616:	fc c3       	rjmp	.+2040   	; 0x1e10 <__tablejump2__>
	{
		case SM5_off:
		PORTA = 0x00;
    1618:	12 b8       	out	0x02, r1	; 2
		break;
    161a:	08 95       	ret
		case SM5_on1:
		PORTA = 0x08;
    161c:	88 e0       	ldi	r24, 0x08	; 8
    161e:	82 b9       	out	0x02, r24	; 2
		break;
    1620:	08 95       	ret
		case SM5_on2:
		PORTA = 0x04;
    1622:	84 e0       	ldi	r24, 0x04	; 4
    1624:	82 b9       	out	0x02, r24	; 2
		break;
    1626:	08 95       	ret
		case SM5_on3:
		PORTA = 0x02;
    1628:	82 e0       	ldi	r24, 0x02	; 2
    162a:	82 b9       	out	0x02, r24	; 2
		break;
    162c:	08 95       	ret
		case SM5_on4:
		PORTA = 0x01;
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	82 b9       	out	0x02, r24	; 2
		break;
    1632:	08 95       	ret
		case SM5_on5:
		PORTA = 0x02;
    1634:	82 e0       	ldi	r24, 0x02	; 2
    1636:	82 b9       	out	0x02, r24	; 2
		break;
    1638:	08 95       	ret
		case SM5_on6:
		PORTA = 0x01;
    163a:	81 e0       	ldi	r24, 0x01	; 1
    163c:	82 b9       	out	0x02, r24	; 2
		break;
    163e:	08 95       	ret
		case SM5_on7:
		PORTA = 0x04;
    1640:	84 e0       	ldi	r24, 0x04	; 4
    1642:	82 b9       	out	0x02, r24	; 2
		break;
    1644:	08 95       	ret
		case SM5_on8:
		PORTA = 0x08;
    1646:	88 e0       	ldi	r24, 0x08	; 8
    1648:	82 b9       	out	0x02, r24	; 2
		break;
    164a:	08 95       	ret
		case SM5_on9:
		PORTA = 0x02;
    164c:	82 e0       	ldi	r24, 0x02	; 2
    164e:	82 b9       	out	0x02, r24	; 2
		break;
    1650:	08 95       	ret
		case SM5_on10:
		PORTA = 0x01;
    1652:	81 e0       	ldi	r24, 0x01	; 1
    1654:	82 b9       	out	0x02, r24	; 2
		break;
    1656:	08 95       	ret
		case SM5_on11:
		PORTA = 0x02;
    1658:	82 e0       	ldi	r24, 0x02	; 2
    165a:	82 b9       	out	0x02, r24	; 2
		break;
    165c:	08 95       	ret
		case SM5_on12:
		PORTA = 0x01;
    165e:	81 e0       	ldi	r24, 0x01	; 1
    1660:	82 b9       	out	0x02, r24	; 2
		break;
    1662:	08 95       	ret
		case SM5_on13:
		PORTA = 0x04;
    1664:	84 e0       	ldi	r24, 0x04	; 4
    1666:	82 b9       	out	0x02, r24	; 2
		break;
    1668:	08 95       	ret
		case SM5_on14:
		PORTA = 0x08;
    166a:	88 e0       	ldi	r24, 0x08	; 8
    166c:	82 b9       	out	0x02, r24	; 2
		break;
    166e:	08 95       	ret
		case SM5_on15:
		LCD_DisplayString(1, "Begin Pressing  Now");
    1670:	68 e1       	ldi	r22, 0x18	; 24
    1672:	71 e0       	ldi	r23, 0x01	; 1
    1674:	81 e0       	ldi	r24, 0x01	; 1
    1676:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LCD_DisplayString>
		PORTA = 0x01;
    167a:	81 e0       	ldi	r24, 0x01	; 1
    167c:	82 b9       	out	0x02, r24	; 2
		global_g = 9;
    167e:	89 e0       	ldi	r24, 0x09	; 9
    1680:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
    1684:	08 95       	ret

00001686 <ButtonPress5>:
}

enum Press_fifth_level{Init5, Press5_state1, Press5_state2, Press5_state3, Press5_state4, Press5_state5, Press5_state6, Press5_state7, Press5_state8, Press5_state9, Press5_state10, Press5_state11, Press5_state12, Press5_state13, Press5_state14, Press5_state15, Error5, Off5} Press_fifth_level;
void ButtonPress5()
{
	switch(Press_fifth_level)
    1686:	e0 91 d5 01 	lds	r30, 0x01D5	; 0x8001d5 <Press_fifth_level>
    168a:	8e 2f       	mov	r24, r30
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	81 31       	cpi	r24, 0x11	; 17
    1690:	91 05       	cpc	r25, r1
    1692:	08 f0       	brcs	.+2      	; 0x1696 <ButtonPress5+0x10>
    1694:	16 c2       	rjmp	.+1068   	; 0x1ac2 <ButtonPress5+0x43c>
    1696:	fc 01       	movw	r30, r24
    1698:	ed 51       	subi	r30, 0x1D	; 29
    169a:	ff 4f       	sbci	r31, 0xFF	; 255
    169c:	b9 c3       	rjmp	.+1906   	; 0x1e10 <__tablejump2__>
	{
		case Init5:
		if(global_g == 9)
    169e:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    16a2:	89 30       	cpi	r24, 0x09	; 9
    16a4:	09 f0       	breq	.+2      	; 0x16a8 <ButtonPress5+0x22>
    16a6:	b0 c2       	rjmp	.+1376   	; 0x1c08 <ButtonPress5+0x582>
		{
			PORTA = 0x00;
    16a8:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x08)
    16aa:	1b 99       	sbic	0x03, 3	; 3
    16ac:	05 c0       	rjmp	.+10     	; 0x16b8 <ButtonPress5+0x32>
			{
				while(~PINB & 0x08){}
    16ae:	1b 9b       	sbis	0x03, 3	; 3
    16b0:	fe cf       	rjmp	.-4      	; 0x16ae <ButtonPress5+0x28>
				Press_fifth_level = Press5_state1;
    16b2:	81 e0       	ldi	r24, 0x01	; 1
    16b4:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    16b8:	19 9b       	sbis	0x03, 1	; 3
    16ba:	04 c0       	rjmp	.+8      	; 0x16c4 <ButtonPress5+0x3e>
    16bc:	1a 9b       	sbis	0x03, 2	; 3
    16be:	02 c0       	rjmp	.+4      	; 0x16c4 <ButtonPress5+0x3e>
    16c0:	18 99       	sbic	0x03, 0	; 3
    16c2:	ff c1       	rjmp	.+1022   	; 0x1ac2 <ButtonPress5+0x43c>
			{
				if(lives - 1 > -1)
    16c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    16c8:	28 2f       	mov	r18, r24
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	21 50       	subi	r18, 0x01	; 1
    16ce:	31 09       	sbc	r19, r1
    16d0:	1a f0       	brmi	.+6      	; 0x16d8 <ButtonPress5+0x52>
				{
					lives--;
    16d2:	81 50       	subi	r24, 0x01	; 1
    16d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				}
				if(lives == 0)
    16d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    16dc:	81 11       	cpse	r24, r1
    16de:	03 c0       	rjmp	.+6      	; 0x16e6 <ButtonPress5+0x60>
				{
					global_g = 20;
    16e0:	84 e1       	ldi	r24, 0x14	; 20
    16e2:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
				}
				Press_fifth_level = Error5;
    16e6:	80 e1       	ldi	r24, 0x10	; 16
    16e8:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    16ec:	f7 c1       	rjmp	.+1006   	; 0x1adc <ButtonPress5+0x456>
			}
		}
		break;
		case Press5_state1:
		if(~PINB & 0x04)
    16ee:	1a 99       	sbic	0x03, 2	; 3
    16f0:	05 c0       	rjmp	.+10     	; 0x16fc <ButtonPress5+0x76>
		{
			while(~PINB & 0x04){}
    16f2:	1a 9b       	sbis	0x03, 2	; 3
    16f4:	fe cf       	rjmp	.-4      	; 0x16f2 <ButtonPress5+0x6c>
			Press_fifth_level = Press5_state2;
    16f6:	82 e0       	ldi	r24, 0x02	; 2
    16f8:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    16fc:	19 9b       	sbis	0x03, 1	; 3
    16fe:	04 c0       	rjmp	.+8      	; 0x1708 <ButtonPress5+0x82>
    1700:	18 9b       	sbis	0x03, 0	; 3
    1702:	02 c0       	rjmp	.+4      	; 0x1708 <ButtonPress5+0x82>
    1704:	1b 99       	sbic	0x03, 3	; 3
    1706:	dd c1       	rjmp	.+954    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    1708:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    170c:	28 2f       	mov	r18, r24
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	21 50       	subi	r18, 0x01	; 1
    1712:	31 09       	sbc	r19, r1
    1714:	1a f0       	brmi	.+6      	; 0x171c <ButtonPress5+0x96>
			{
				lives--;
    1716:	81 50       	subi	r24, 0x01	; 1
    1718:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    171c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1720:	81 11       	cpse	r24, r1
    1722:	03 c0       	rjmp	.+6      	; 0x172a <ButtonPress5+0xa4>
			{
				global_g = 20;
    1724:	84 e1       	ldi	r24, 0x14	; 20
    1726:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    172a:	80 e1       	ldi	r24, 0x10	; 16
    172c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1730:	d5 c1       	rjmp	.+938    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state2:
		if(~PINB & 0x02)
    1732:	19 99       	sbic	0x03, 1	; 3
    1734:	05 c0       	rjmp	.+10     	; 0x1740 <ButtonPress5+0xba>
		{
			while(~PINB & 0x02){}
    1736:	19 9b       	sbis	0x03, 1	; 3
    1738:	fe cf       	rjmp	.-4      	; 0x1736 <ButtonPress5+0xb0>
			Press_fifth_level = Press5_state3;
    173a:	83 e0       	ldi	r24, 0x03	; 3
    173c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1740:	18 9b       	sbis	0x03, 0	; 3
    1742:	04 c0       	rjmp	.+8      	; 0x174c <ButtonPress5+0xc6>
    1744:	1a 9b       	sbis	0x03, 2	; 3
    1746:	02 c0       	rjmp	.+4      	; 0x174c <ButtonPress5+0xc6>
    1748:	1b 99       	sbic	0x03, 3	; 3
    174a:	bb c1       	rjmp	.+886    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    174c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1750:	28 2f       	mov	r18, r24
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	21 50       	subi	r18, 0x01	; 1
    1756:	31 09       	sbc	r19, r1
    1758:	1a f0       	brmi	.+6      	; 0x1760 <ButtonPress5+0xda>
			{
				lives--;
    175a:	81 50       	subi	r24, 0x01	; 1
    175c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1760:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1764:	81 11       	cpse	r24, r1
    1766:	03 c0       	rjmp	.+6      	; 0x176e <ButtonPress5+0xe8>
			{
				global_g = 20;
    1768:	84 e1       	ldi	r24, 0x14	; 20
    176a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    176e:	80 e1       	ldi	r24, 0x10	; 16
    1770:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1774:	b3 c1       	rjmp	.+870    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state3:
		if(~PINB & 0x01)
    1776:	18 99       	sbic	0x03, 0	; 3
    1778:	05 c0       	rjmp	.+10     	; 0x1784 <ButtonPress5+0xfe>
		{
			while(~PINB & 0x01){}
    177a:	18 9b       	sbis	0x03, 0	; 3
    177c:	fe cf       	rjmp	.-4      	; 0x177a <ButtonPress5+0xf4>
			Press_fifth_level = Press5_state4;
    177e:	84 e0       	ldi	r24, 0x04	; 4
    1780:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1784:	19 9b       	sbis	0x03, 1	; 3
    1786:	04 c0       	rjmp	.+8      	; 0x1790 <ButtonPress5+0x10a>
    1788:	1a 9b       	sbis	0x03, 2	; 3
    178a:	02 c0       	rjmp	.+4      	; 0x1790 <ButtonPress5+0x10a>
    178c:	1b 99       	sbic	0x03, 3	; 3
    178e:	99 c1       	rjmp	.+818    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    1790:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1794:	28 2f       	mov	r18, r24
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	21 50       	subi	r18, 0x01	; 1
    179a:	31 09       	sbc	r19, r1
    179c:	1a f0       	brmi	.+6      	; 0x17a4 <ButtonPress5+0x11e>
			{
				lives--;
    179e:	81 50       	subi	r24, 0x01	; 1
    17a0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    17a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    17a8:	81 11       	cpse	r24, r1
    17aa:	03 c0       	rjmp	.+6      	; 0x17b2 <ButtonPress5+0x12c>
			{
				global_g = 20;
    17ac:	84 e1       	ldi	r24, 0x14	; 20
    17ae:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    17b2:	80 e1       	ldi	r24, 0x10	; 16
    17b4:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    17b8:	91 c1       	rjmp	.+802    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state4:
		if(~PINB & 0x02)
    17ba:	19 99       	sbic	0x03, 1	; 3
    17bc:	05 c0       	rjmp	.+10     	; 0x17c8 <ButtonPress5+0x142>
		{
			while(~PINB & 0x02){}
    17be:	19 9b       	sbis	0x03, 1	; 3
    17c0:	fe cf       	rjmp	.-4      	; 0x17be <ButtonPress5+0x138>
			Press_fifth_level = Press5_state5;
    17c2:	85 e0       	ldi	r24, 0x05	; 5
    17c4:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    17c8:	18 9b       	sbis	0x03, 0	; 3
    17ca:	04 c0       	rjmp	.+8      	; 0x17d4 <ButtonPress5+0x14e>
    17cc:	1a 9b       	sbis	0x03, 2	; 3
    17ce:	02 c0       	rjmp	.+4      	; 0x17d4 <ButtonPress5+0x14e>
    17d0:	1b 99       	sbic	0x03, 3	; 3
    17d2:	77 c1       	rjmp	.+750    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    17d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    17d8:	28 2f       	mov	r18, r24
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	21 50       	subi	r18, 0x01	; 1
    17de:	31 09       	sbc	r19, r1
    17e0:	1a f0       	brmi	.+6      	; 0x17e8 <ButtonPress5+0x162>
			{
				lives--;
    17e2:	81 50       	subi	r24, 0x01	; 1
    17e4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    17e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    17ec:	81 11       	cpse	r24, r1
    17ee:	03 c0       	rjmp	.+6      	; 0x17f6 <ButtonPress5+0x170>
			{
				global_g = 20;
    17f0:	84 e1       	ldi	r24, 0x14	; 20
    17f2:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    17f6:	80 e1       	ldi	r24, 0x10	; 16
    17f8:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    17fc:	6f c1       	rjmp	.+734    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state5:
		if(~PINB & 0x01)
    17fe:	18 99       	sbic	0x03, 0	; 3
    1800:	05 c0       	rjmp	.+10     	; 0x180c <ButtonPress5+0x186>
		{
			while(~PINB & 0x01){}
    1802:	18 9b       	sbis	0x03, 0	; 3
    1804:	fe cf       	rjmp	.-4      	; 0x1802 <ButtonPress5+0x17c>
			Press_fifth_level = Press5_state6;
    1806:	86 e0       	ldi	r24, 0x06	; 6
    1808:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    180c:	19 9b       	sbis	0x03, 1	; 3
    180e:	04 c0       	rjmp	.+8      	; 0x1818 <ButtonPress5+0x192>
    1810:	1a 9b       	sbis	0x03, 2	; 3
    1812:	02 c0       	rjmp	.+4      	; 0x1818 <ButtonPress5+0x192>
    1814:	1b 99       	sbic	0x03, 3	; 3
    1816:	55 c1       	rjmp	.+682    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    1818:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    181c:	28 2f       	mov	r18, r24
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	21 50       	subi	r18, 0x01	; 1
    1822:	31 09       	sbc	r19, r1
    1824:	1a f0       	brmi	.+6      	; 0x182c <ButtonPress5+0x1a6>
			{
				lives--;
    1826:	81 50       	subi	r24, 0x01	; 1
    1828:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    182c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1830:	81 11       	cpse	r24, r1
    1832:	03 c0       	rjmp	.+6      	; 0x183a <ButtonPress5+0x1b4>
			{
				global_g = 20;
    1834:	84 e1       	ldi	r24, 0x14	; 20
    1836:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    183a:	80 e1       	ldi	r24, 0x10	; 16
    183c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1840:	4d c1       	rjmp	.+666    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state6:
		if(~PINB & 0x04)
    1842:	1a 99       	sbic	0x03, 2	; 3
    1844:	05 c0       	rjmp	.+10     	; 0x1850 <ButtonPress5+0x1ca>
		{
			
			while(~PINB & 0x04){}
    1846:	1a 9b       	sbis	0x03, 2	; 3
    1848:	fe cf       	rjmp	.-4      	; 0x1846 <ButtonPress5+0x1c0>
			Press_fifth_level = Press5_state7;
    184a:	87 e0       	ldi	r24, 0x07	; 7
    184c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    1850:	19 9b       	sbis	0x03, 1	; 3
    1852:	04 c0       	rjmp	.+8      	; 0x185c <ButtonPress5+0x1d6>
    1854:	18 9b       	sbis	0x03, 0	; 3
    1856:	02 c0       	rjmp	.+4      	; 0x185c <ButtonPress5+0x1d6>
    1858:	1b 99       	sbic	0x03, 3	; 3
    185a:	33 c1       	rjmp	.+614    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    185c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1860:	28 2f       	mov	r18, r24
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	21 50       	subi	r18, 0x01	; 1
    1866:	31 09       	sbc	r19, r1
    1868:	1a f0       	brmi	.+6      	; 0x1870 <ButtonPress5+0x1ea>
			{
				lives--;
    186a:	81 50       	subi	r24, 0x01	; 1
    186c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1870:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1874:	81 11       	cpse	r24, r1
    1876:	03 c0       	rjmp	.+6      	; 0x187e <ButtonPress5+0x1f8>
			{
				global_g = 20;
    1878:	84 e1       	ldi	r24, 0x14	; 20
    187a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    187e:	80 e1       	ldi	r24, 0x10	; 16
    1880:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1884:	2b c1       	rjmp	.+598    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state7:
		if(~PINB & 0x08)
    1886:	1b 99       	sbic	0x03, 3	; 3
    1888:	05 c0       	rjmp	.+10     	; 0x1894 <ButtonPress5+0x20e>
		{
			while(~PINB & 0x08){}
    188a:	1b 9b       	sbis	0x03, 3	; 3
    188c:	fe cf       	rjmp	.-4      	; 0x188a <ButtonPress5+0x204>
			Press_fifth_level = Press5_state8;
    188e:	88 e0       	ldi	r24, 0x08	; 8
    1890:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1894:	19 9b       	sbis	0x03, 1	; 3
    1896:	04 c0       	rjmp	.+8      	; 0x18a0 <ButtonPress5+0x21a>
    1898:	1a 9b       	sbis	0x03, 2	; 3
    189a:	02 c0       	rjmp	.+4      	; 0x18a0 <ButtonPress5+0x21a>
    189c:	18 99       	sbic	0x03, 0	; 3
    189e:	11 c1       	rjmp	.+546    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    18a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    18a4:	28 2f       	mov	r18, r24
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	21 50       	subi	r18, 0x01	; 1
    18aa:	31 09       	sbc	r19, r1
    18ac:	1a f0       	brmi	.+6      	; 0x18b4 <ButtonPress5+0x22e>
			{
				lives--;
    18ae:	81 50       	subi	r24, 0x01	; 1
    18b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    18b4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    18b8:	81 11       	cpse	r24, r1
    18ba:	03 c0       	rjmp	.+6      	; 0x18c2 <ButtonPress5+0x23c>
			{
				global_g = 20;
    18bc:	84 e1       	ldi	r24, 0x14	; 20
    18be:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    18c2:	80 e1       	ldi	r24, 0x10	; 16
    18c4:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    18c8:	09 c1       	rjmp	.+530    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state8:
		if(~PINB & 0x02)
    18ca:	19 99       	sbic	0x03, 1	; 3
    18cc:	05 c0       	rjmp	.+10     	; 0x18d8 <ButtonPress5+0x252>
		{
			while(~PINB & 0x02){}
    18ce:	19 9b       	sbis	0x03, 1	; 3
    18d0:	fe cf       	rjmp	.-4      	; 0x18ce <ButtonPress5+0x248>
			Press_fifth_level = Press5_state9;
    18d2:	89 e0       	ldi	r24, 0x09	; 9
    18d4:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    18d8:	18 9b       	sbis	0x03, 0	; 3
    18da:	04 c0       	rjmp	.+8      	; 0x18e4 <ButtonPress5+0x25e>
    18dc:	1a 9b       	sbis	0x03, 2	; 3
    18de:	02 c0       	rjmp	.+4      	; 0x18e4 <ButtonPress5+0x25e>
    18e0:	1b 99       	sbic	0x03, 3	; 3
    18e2:	ef c0       	rjmp	.+478    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    18e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    18e8:	28 2f       	mov	r18, r24
    18ea:	30 e0       	ldi	r19, 0x00	; 0
    18ec:	21 50       	subi	r18, 0x01	; 1
    18ee:	31 09       	sbc	r19, r1
    18f0:	1a f0       	brmi	.+6      	; 0x18f8 <ButtonPress5+0x272>
			{
				lives--;
    18f2:	81 50       	subi	r24, 0x01	; 1
    18f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    18f8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    18fc:	81 11       	cpse	r24, r1
    18fe:	03 c0       	rjmp	.+6      	; 0x1906 <ButtonPress5+0x280>
			{
				global_g = 20;
    1900:	84 e1       	ldi	r24, 0x14	; 20
    1902:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    1906:	80 e1       	ldi	r24, 0x10	; 16
    1908:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    190c:	e7 c0       	rjmp	.+462    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state9:
		if(~PINB & 0x01)
    190e:	18 99       	sbic	0x03, 0	; 3
    1910:	05 c0       	rjmp	.+10     	; 0x191c <ButtonPress5+0x296>
		{
			while(~PINB & 0x01){}
    1912:	18 9b       	sbis	0x03, 0	; 3
    1914:	fe cf       	rjmp	.-4      	; 0x1912 <ButtonPress5+0x28c>
			Press_fifth_level = Press5_state10;
    1916:	8a e0       	ldi	r24, 0x0A	; 10
    1918:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    191c:	19 9b       	sbis	0x03, 1	; 3
    191e:	04 c0       	rjmp	.+8      	; 0x1928 <ButtonPress5+0x2a2>
    1920:	1a 9b       	sbis	0x03, 2	; 3
    1922:	02 c0       	rjmp	.+4      	; 0x1928 <ButtonPress5+0x2a2>
    1924:	1b 99       	sbic	0x03, 3	; 3
    1926:	cd c0       	rjmp	.+410    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    1928:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    192c:	28 2f       	mov	r18, r24
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	21 50       	subi	r18, 0x01	; 1
    1932:	31 09       	sbc	r19, r1
    1934:	1a f0       	brmi	.+6      	; 0x193c <ButtonPress5+0x2b6>
			{
				lives--;
    1936:	81 50       	subi	r24, 0x01	; 1
    1938:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    193c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1940:	81 11       	cpse	r24, r1
    1942:	03 c0       	rjmp	.+6      	; 0x194a <ButtonPress5+0x2c4>
			{
				global_g = 20;
    1944:	84 e1       	ldi	r24, 0x14	; 20
    1946:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    194a:	80 e1       	ldi	r24, 0x10	; 16
    194c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1950:	c5 c0       	rjmp	.+394    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state10:
		if(~PINB & 0x02)
    1952:	19 99       	sbic	0x03, 1	; 3
    1954:	05 c0       	rjmp	.+10     	; 0x1960 <ButtonPress5+0x2da>
		{
			while(~PINB & 0x02){}
    1956:	19 9b       	sbis	0x03, 1	; 3
    1958:	fe cf       	rjmp	.-4      	; 0x1956 <ButtonPress5+0x2d0>
			Press_fifth_level = Press5_state11;
    195a:	8b e0       	ldi	r24, 0x0B	; 11
    195c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1960:	18 9b       	sbis	0x03, 0	; 3
    1962:	04 c0       	rjmp	.+8      	; 0x196c <ButtonPress5+0x2e6>
    1964:	1a 9b       	sbis	0x03, 2	; 3
    1966:	02 c0       	rjmp	.+4      	; 0x196c <ButtonPress5+0x2e6>
    1968:	1b 99       	sbic	0x03, 3	; 3
    196a:	ab c0       	rjmp	.+342    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    196c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1970:	28 2f       	mov	r18, r24
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	21 50       	subi	r18, 0x01	; 1
    1976:	31 09       	sbc	r19, r1
    1978:	1a f0       	brmi	.+6      	; 0x1980 <ButtonPress5+0x2fa>
			{
				lives--;
    197a:	81 50       	subi	r24, 0x01	; 1
    197c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1980:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1984:	81 11       	cpse	r24, r1
    1986:	03 c0       	rjmp	.+6      	; 0x198e <ButtonPress5+0x308>
			{
				global_g = 20;
    1988:	84 e1       	ldi	r24, 0x14	; 20
    198a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    198e:	80 e1       	ldi	r24, 0x10	; 16
    1990:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1994:	a3 c0       	rjmp	.+326    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state11:
		if(~PINB & 0x01)
    1996:	18 99       	sbic	0x03, 0	; 3
    1998:	05 c0       	rjmp	.+10     	; 0x19a4 <ButtonPress5+0x31e>
		{
			while(~PINB & 0x01){}
    199a:	18 9b       	sbis	0x03, 0	; 3
    199c:	fe cf       	rjmp	.-4      	; 0x199a <ButtonPress5+0x314>
			Press_fifth_level = Press5_state12;
    199e:	8c e0       	ldi	r24, 0x0C	; 12
    19a0:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    19a4:	19 9b       	sbis	0x03, 1	; 3
    19a6:	04 c0       	rjmp	.+8      	; 0x19b0 <ButtonPress5+0x32a>
    19a8:	1a 9b       	sbis	0x03, 2	; 3
    19aa:	02 c0       	rjmp	.+4      	; 0x19b0 <ButtonPress5+0x32a>
    19ac:	1b 99       	sbic	0x03, 3	; 3
    19ae:	89 c0       	rjmp	.+274    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    19b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    19b4:	28 2f       	mov	r18, r24
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	21 50       	subi	r18, 0x01	; 1
    19ba:	31 09       	sbc	r19, r1
    19bc:	1a f0       	brmi	.+6      	; 0x19c4 <ButtonPress5+0x33e>
			{
				lives--;
    19be:	81 50       	subi	r24, 0x01	; 1
    19c0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    19c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    19c8:	81 11       	cpse	r24, r1
    19ca:	03 c0       	rjmp	.+6      	; 0x19d2 <ButtonPress5+0x34c>
			{
				global_g = 20;
    19cc:	84 e1       	ldi	r24, 0x14	; 20
    19ce:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    19d2:	80 e1       	ldi	r24, 0x10	; 16
    19d4:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    19d8:	81 c0       	rjmp	.+258    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state12:
		if(~PINB & 0x04)
    19da:	1a 99       	sbic	0x03, 2	; 3
    19dc:	05 c0       	rjmp	.+10     	; 0x19e8 <ButtonPress5+0x362>
		{
			while(~PINB & 0x04){}
    19de:	1a 9b       	sbis	0x03, 2	; 3
    19e0:	fe cf       	rjmp	.-4      	; 0x19de <ButtonPress5+0x358>
			Press_fifth_level = Press5_state13;
    19e2:	8d e0       	ldi	r24, 0x0D	; 13
    19e4:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    19e8:	19 9b       	sbis	0x03, 1	; 3
    19ea:	04 c0       	rjmp	.+8      	; 0x19f4 <ButtonPress5+0x36e>
    19ec:	18 9b       	sbis	0x03, 0	; 3
    19ee:	02 c0       	rjmp	.+4      	; 0x19f4 <ButtonPress5+0x36e>
    19f0:	1b 99       	sbic	0x03, 3	; 3
    19f2:	67 c0       	rjmp	.+206    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    19f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    19f8:	28 2f       	mov	r18, r24
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	21 50       	subi	r18, 0x01	; 1
    19fe:	31 09       	sbc	r19, r1
    1a00:	1a f0       	brmi	.+6      	; 0x1a08 <ButtonPress5+0x382>
			{
				lives--;
    1a02:	81 50       	subi	r24, 0x01	; 1
    1a04:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1a08:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1a0c:	81 11       	cpse	r24, r1
    1a0e:	03 c0       	rjmp	.+6      	; 0x1a16 <ButtonPress5+0x390>
			{
				global_g = 20;
    1a10:	84 e1       	ldi	r24, 0x14	; 20
    1a12:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    1a16:	80 e1       	ldi	r24, 0x10	; 16
    1a18:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1a1c:	5f c0       	rjmp	.+190    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state13:
		if(~PINB & 0x08)
    1a1e:	1b 99       	sbic	0x03, 3	; 3
    1a20:	05 c0       	rjmp	.+10     	; 0x1a2c <ButtonPress5+0x3a6>
		{
			while(~PINB & 0x08){}
    1a22:	1b 9b       	sbis	0x03, 3	; 3
    1a24:	fe cf       	rjmp	.-4      	; 0x1a22 <ButtonPress5+0x39c>
			Press_fifth_level = Press5_state14;
    1a26:	8e e0       	ldi	r24, 0x0E	; 14
    1a28:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1a2c:	19 9b       	sbis	0x03, 1	; 3
    1a2e:	04 c0       	rjmp	.+8      	; 0x1a38 <ButtonPress5+0x3b2>
    1a30:	1a 9b       	sbis	0x03, 2	; 3
    1a32:	02 c0       	rjmp	.+4      	; 0x1a38 <ButtonPress5+0x3b2>
    1a34:	18 99       	sbic	0x03, 0	; 3
    1a36:	45 c0       	rjmp	.+138    	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    1a38:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1a3c:	28 2f       	mov	r18, r24
    1a3e:	30 e0       	ldi	r19, 0x00	; 0
    1a40:	21 50       	subi	r18, 0x01	; 1
    1a42:	31 09       	sbc	r19, r1
    1a44:	1a f0       	brmi	.+6      	; 0x1a4c <ButtonPress5+0x3c6>
			{
				lives--;
    1a46:	81 50       	subi	r24, 0x01	; 1
    1a48:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1a4c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1a50:	81 11       	cpse	r24, r1
    1a52:	03 c0       	rjmp	.+6      	; 0x1a5a <ButtonPress5+0x3d4>
			{
				global_g = 20;
    1a54:	84 e1       	ldi	r24, 0x14	; 20
    1a56:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    1a5a:	80 e1       	ldi	r24, 0x10	; 16
    1a5c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1a60:	3d c0       	rjmp	.+122    	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state14:
		if(~PINB & 0x01)
    1a62:	18 99       	sbic	0x03, 0	; 3
    1a64:	05 c0       	rjmp	.+10     	; 0x1a70 <ButtonPress5+0x3ea>
		{
			while(~PINB & 0x01){}
    1a66:	18 9b       	sbis	0x03, 0	; 3
    1a68:	fe cf       	rjmp	.-4      	; 0x1a66 <ButtonPress5+0x3e0>
			Press_fifth_level = Press5_state15;
    1a6a:	8f e0       	ldi	r24, 0x0F	; 15
    1a6c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1a70:	19 9b       	sbis	0x03, 1	; 3
    1a72:	04 c0       	rjmp	.+8      	; 0x1a7c <ButtonPress5+0x3f6>
    1a74:	1a 9b       	sbis	0x03, 2	; 3
    1a76:	02 c0       	rjmp	.+4      	; 0x1a7c <ButtonPress5+0x3f6>
    1a78:	1b 99       	sbic	0x03, 3	; 3
    1a7a:	23 c0       	rjmp	.+70     	; 0x1ac2 <ButtonPress5+0x43c>
		{
			if(lives - 1 > -1)
    1a7c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1a80:	28 2f       	mov	r18, r24
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	21 50       	subi	r18, 0x01	; 1
    1a86:	31 09       	sbc	r19, r1
    1a88:	1a f0       	brmi	.+6      	; 0x1a90 <ButtonPress5+0x40a>
			{
				lives--;
    1a8a:	81 50       	subi	r24, 0x01	; 1
    1a8c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
			if(lives == 0)
    1a90:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1a94:	81 11       	cpse	r24, r1
    1a96:	03 c0       	rjmp	.+6      	; 0x1a9e <ButtonPress5+0x418>
			{
				global_g = 20;
    1a98:	84 e1       	ldi	r24, 0x14	; 20
    1a9a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
			}
			Press_fifth_level = Error5;
    1a9e:	80 e1       	ldi	r24, 0x10	; 16
    1aa0:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1aa4:	1b c0       	rjmp	.+54     	; 0x1adc <ButtonPress5+0x456>
		}
		break;
		case Press5_state15:
		if(~PINB & 0x10)
    1aa6:	1c 99       	sbic	0x03, 4	; 3
    1aa8:	a0 c0       	rjmp	.+320    	; 0x1bea <ButtonPress5+0x564>
		{
			Press_fifth_level = Off5;
    1aaa:	81 e1       	ldi	r24, 0x11	; 17
    1aac:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1ab0:	aa c0       	rjmp	.+340    	; 0x1c06 <ButtonPress5+0x580>
		}
		break;
		case Error5:
		if(~PINB & 0x08)
    1ab2:	1b 99       	sbic	0x03, 3	; 3
    1ab4:	13 c0       	rjmp	.+38     	; 0x1adc <ButtonPress5+0x456>
		{
			while(~PINB & 0x08){}
    1ab6:	1b 9b       	sbis	0x03, 3	; 3
    1ab8:	fe cf       	rjmp	.-4      	; 0x1ab6 <ButtonPress5+0x430>
			Press_fifth_level = Press5_state1;
    1aba:	81 e0       	ldi	r24, 0x01	; 1
    1abc:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <Press_fifth_level>
    1ac0:	16 c0       	rjmp	.+44     	; 0x1aee <ButtonPress5+0x468>
		}
		break;
	}
	switch(Press_fifth_level)
    1ac2:	e0 91 d5 01 	lds	r30, 0x01D5	; 0x8001d5 <Press_fifth_level>
    1ac6:	8e 2f       	mov	r24, r30
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	fc 01       	movw	r30, r24
    1acc:	31 97       	sbiw	r30, 0x01	; 1
    1ace:	e1 31       	cpi	r30, 0x11	; 17
    1ad0:	f1 05       	cpc	r31, r1
    1ad2:	08 f0       	brcs	.+2      	; 0x1ad6 <ButtonPress5+0x450>
    1ad4:	99 c0       	rjmp	.+306    	; 0x1c08 <ButtonPress5+0x582>
    1ad6:	ec 50       	subi	r30, 0x0C	; 12
    1ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    1ada:	9a c1       	rjmp	.+820    	; 0x1e10 <__tablejump2__>
	{
		case Error5:
		transmit_data(simon_SevenSeg(lives));
    1adc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1ae0:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1ae4:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x10;
    1ae8:	80 e1       	ldi	r24, 0x10	; 16
    1aea:	82 b9       	out	0x02, r24	; 2
		break;
    1aec:	08 95       	ret
		case Press5_state1:
		transmit_data(simon_SevenSeg(lives));
    1aee:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1af2:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1af6:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x08;
    1afa:	88 e0       	ldi	r24, 0x08	; 8
    1afc:	82 b9       	out	0x02, r24	; 2
		break;
    1afe:	08 95       	ret
		case Press5_state2:
		transmit_data(simon_SevenSeg(lives));
    1b00:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b04:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b08:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x04;
    1b0c:	84 e0       	ldi	r24, 0x04	; 4
    1b0e:	82 b9       	out	0x02, r24	; 2
		break;
    1b10:	08 95       	ret
		case Press5_state3:
		transmit_data(simon_SevenSeg(lives));
    1b12:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b16:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b1a:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x02;
    1b1e:	82 e0       	ldi	r24, 0x02	; 2
    1b20:	82 b9       	out	0x02, r24	; 2
		break;
    1b22:	08 95       	ret
		case Press5_state4:
		transmit_data(simon_SevenSeg(lives));
    1b24:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b28:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b2c:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x01;
    1b30:	81 e0       	ldi	r24, 0x01	; 1
    1b32:	82 b9       	out	0x02, r24	; 2
		break;
    1b34:	08 95       	ret
		case Press5_state5:
		transmit_data(simon_SevenSeg(lives));
    1b36:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b3a:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b3e:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x02;
    1b42:	82 e0       	ldi	r24, 0x02	; 2
    1b44:	82 b9       	out	0x02, r24	; 2
		break;
    1b46:	08 95       	ret
		case Press5_state6:
		transmit_data(simon_SevenSeg(lives));
    1b48:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b4c:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b50:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x01;
    1b54:	81 e0       	ldi	r24, 0x01	; 1
    1b56:	82 b9       	out	0x02, r24	; 2
		break;
    1b58:	08 95       	ret
		case Press5_state7:
		transmit_data(simon_SevenSeg(lives));
    1b5a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b5e:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b62:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x04;
    1b66:	84 e0       	ldi	r24, 0x04	; 4
    1b68:	82 b9       	out	0x02, r24	; 2
		break;
    1b6a:	08 95       	ret
		case Press5_state8:
		transmit_data(simon_SevenSeg(lives));
    1b6c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b70:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b74:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x08;
    1b78:	88 e0       	ldi	r24, 0x08	; 8
    1b7a:	82 b9       	out	0x02, r24	; 2
		break;
    1b7c:	08 95       	ret
		case Press5_state9:
		transmit_data(simon_SevenSeg(lives));
    1b7e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b82:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b86:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x02;
    1b8a:	82 e0       	ldi	r24, 0x02	; 2
    1b8c:	82 b9       	out	0x02, r24	; 2
		break;
    1b8e:	08 95       	ret
		case Press5_state10:
		transmit_data(simon_SevenSeg(lives));
    1b90:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b94:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1b98:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x01;
    1b9c:	81 e0       	ldi	r24, 0x01	; 1
    1b9e:	82 b9       	out	0x02, r24	; 2
		break;
    1ba0:	08 95       	ret
		case Press5_state11:
		transmit_data(simon_SevenSeg(lives));
    1ba2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1ba6:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1baa:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x02;
    1bae:	82 e0       	ldi	r24, 0x02	; 2
    1bb0:	82 b9       	out	0x02, r24	; 2
		break;
    1bb2:	08 95       	ret
		case Press5_state12:
		transmit_data(simon_SevenSeg(lives));
    1bb4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1bb8:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1bbc:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x01;
    1bc0:	81 e0       	ldi	r24, 0x01	; 1
    1bc2:	82 b9       	out	0x02, r24	; 2
		break;
    1bc4:	08 95       	ret
		case Press5_state13:
		transmit_data(simon_SevenSeg(lives));
    1bc6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1bca:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1bce:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x04;
    1bd2:	84 e0       	ldi	r24, 0x04	; 4
    1bd4:	82 b9       	out	0x02, r24	; 2
		break;
    1bd6:	08 95       	ret
		case Press5_state14:
		transmit_data(simon_SevenSeg(lives));
    1bd8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1bdc:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1be0:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x08;
    1be4:	88 e0       	ldi	r24, 0x08	; 8
    1be6:	82 b9       	out	0x02, r24	; 2
		break;
    1be8:	08 95       	ret
		case Press5_state15:
		LCD_DisplayString(1, "You've won!     Highest Score: 5");
    1bea:	64 e8       	ldi	r22, 0x84	; 132
    1bec:	71 e0       	ldi	r23, 0x01	; 1
    1bee:	81 e0       	ldi	r24, 0x01	; 1
    1bf0:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
    1bf4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1bf8:	0e 94 aa 02 	call	0x554	; 0x554 <simon_SevenSeg>
    1bfc:	0e 94 8b 02 	call	0x516	; 0x516 <transmit_data>
		PORTA = 0x01;
    1c00:	81 e0       	ldi	r24, 0x01	; 1
    1c02:	82 b9       	out	0x02, r24	; 2
		break;
    1c04:	08 95       	ret
		case Off5:
		PORTA = 0x00;
    1c06:	12 b8       	out	0x02, r1	; 2
    1c08:	08 95       	ret

00001c0a <main>:
		break;
	}
}
int main(void)
{
	DDRA = 0xFF;	PORTA = 0x00;
    1c0a:	8f ef       	ldi	r24, 0xFF	; 255
    1c0c:	81 b9       	out	0x01, r24	; 1
    1c0e:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;
    1c10:	14 b8       	out	0x04, r1	; 4
    1c12:	85 b9       	out	0x05, r24	; 5
	DDRD = 0xFF;	PORTD = 0x00;
    1c14:	8a b9       	out	0x0a, r24	; 10
    1c16:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0xFF;	PORTC = 0x00;
    1c18:	87 b9       	out	0x07, r24	; 7
    1c1a:	18 b8       	out	0x08, r1	; 8
	
	LCD_init();
    1c1c:	0e 94 4c 01 	call	0x298	; 0x298 <LCD_init>
	if(global_g > -1)
	{
		LCD_ClearScreen();
    1c20:	0e 94 41 01 	call	0x282	; 0x282 <LCD_ClearScreen>
		while(global_g == 0)
    1c24:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1c28:	81 11       	cpse	r24, r1
    1c2a:	14 c0       	rjmp	.+40     	; 0x1c54 <main+0x4a>
		{
			TimerSet(500);
    1c2c:	64 ef       	ldi	r22, 0xF4	; 244
    1c2e:	71 e0       	ldi	r23, 0x01	; 1
    1c30:	80 e0       	ldi	r24, 0x00	; 0
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1c38:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			TickFct_State_machine_1();
    1c3c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <TickFct_State_machine_1>
			while(!TimerFlag);
    1c40:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1c44:	88 23       	and	r24, r24
    1c46:	e1 f3       	breq	.-8      	; 0x1c40 <main+0x36>
			TimerFlag = 0;
    1c48:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
	
	LCD_init();
	if(global_g > -1)
	{
		LCD_ClearScreen();
		while(global_g == 0)
    1c4c:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1c50:	88 23       	and	r24, r24
    1c52:	61 f3       	breq	.-40     	; 0x1c2c <main+0x22>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 1)
    1c54:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1c58:	81 30       	cpi	r24, 0x01	; 1
    1c5a:	a1 f4       	brne	.+40     	; 0x1c84 <main+0x7a>
		{
			TimerSet(200);
    1c5c:	68 ec       	ldi	r22, 0xC8	; 200
    1c5e:	70 e0       	ldi	r23, 0x00	; 0
    1c60:	80 e0       	ldi	r24, 0x00	; 0
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1c68:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			ButtonPress();
    1c6c:	0e 94 49 03 	call	0x692	; 0x692 <ButtonPress>
			while(!TimerFlag);
    1c70:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1c74:	88 23       	and	r24, r24
    1c76:	e1 f3       	breq	.-8      	; 0x1c70 <main+0x66>
			TimerFlag = 0;
    1c78:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 1)
    1c7c:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1c80:	81 30       	cpi	r24, 0x01	; 1
    1c82:	61 f3       	breq	.-40     	; 0x1c5c <main+0x52>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1c84:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1c88:	82 30       	cpi	r24, 0x02	; 2
    1c8a:	a1 f4       	brne	.+40     	; 0x1cb4 <main+0xaa>
		{
			TimerSet(500);
    1c8c:	64 ef       	ldi	r22, 0xF4	; 244
    1c8e:	71 e0       	ldi	r23, 0x01	; 1
    1c90:	80 e0       	ldi	r24, 0x00	; 0
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1c98:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			TickFct_Machine2();
    1c9c:	0e 94 3b 04 	call	0x876	; 0x876 <TickFct_Machine2>
			while(!TimerFlag);
    1ca0:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1ca4:	88 23       	and	r24, r24
    1ca6:	e1 f3       	breq	.-8      	; 0x1ca0 <main+0x96>
			TimerFlag = 0;
    1ca8:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1cac:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1cb0:	82 30       	cpi	r24, 0x02	; 2
    1cb2:	61 f3       	breq	.-40     	; 0x1c8c <main+0x82>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1cb4:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1cb8:	83 30       	cpi	r24, 0x03	; 3
    1cba:	a1 f4       	brne	.+40     	; 0x1ce4 <main+0xda>
		{
			TimerSet(200);
    1cbc:	68 ec       	ldi	r22, 0xC8	; 200
    1cbe:	70 e0       	ldi	r23, 0x00	; 0
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1cc8:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			ButtonPress2();
    1ccc:	0e 94 9d 04 	call	0x93a	; 0x93a <ButtonPress2>
			while(!TimerFlag);
    1cd0:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1cd4:	88 23       	and	r24, r24
    1cd6:	e1 f3       	breq	.-8      	; 0x1cd0 <main+0xc6>
			TimerFlag = 0;
    1cd8:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1cdc:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1ce0:	83 30       	cpi	r24, 0x03	; 3
    1ce2:	61 f3       	breq	.-40     	; 0x1cbc <main+0xb2>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1ce4:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1ce8:	84 30       	cpi	r24, 0x04	; 4
    1cea:	a1 f4       	brne	.+40     	; 0x1d14 <main+0x10a>
		{
			TimerSet(500);
    1cec:	64 ef       	ldi	r22, 0xF4	; 244
    1cee:	71 e0       	ldi	r23, 0x01	; 1
    1cf0:	80 e0       	ldi	r24, 0x00	; 0
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1cf8:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			TickFct_Machine3();
    1cfc:	0e 94 ca 05 	call	0xb94	; 0xb94 <TickFct_Machine3>
			while(!TimerFlag);
    1d00:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1d04:	88 23       	and	r24, r24
    1d06:	e1 f3       	breq	.-8      	; 0x1d00 <main+0xf6>
			TimerFlag = 0;
    1d08:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1d0c:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1d10:	84 30       	cpi	r24, 0x04	; 4
    1d12:	61 f3       	breq	.-40     	; 0x1cec <main+0xe2>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1d14:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1d18:	85 30       	cpi	r24, 0x05	; 5
    1d1a:	a1 f4       	brne	.+40     	; 0x1d44 <main+0x13a>
		{

			TimerSet(200);
    1d1c:	68 ec       	ldi	r22, 0xC8	; 200
    1d1e:	70 e0       	ldi	r23, 0x00	; 0
    1d20:	80 e0       	ldi	r24, 0x00	; 0
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1d28:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			ButtonPress3();
    1d2c:	0e 94 3c 06 	call	0xc78	; 0xc78 <ButtonPress3>
			while(!TimerFlag);
    1d30:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1d34:	88 23       	and	r24, r24
    1d36:	e1 f3       	breq	.-8      	; 0x1d30 <main+0x126>
			TimerFlag = 0;
    1d38:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1d3c:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1d40:	85 30       	cpi	r24, 0x05	; 5
    1d42:	61 f3       	breq	.-40     	; 0x1d1c <main+0x112>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1d44:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1d48:	86 30       	cpi	r24, 0x06	; 6
    1d4a:	99 f4       	brne	.+38     	; 0x1d72 <main+0x168>
		{
			TimerSet(500);
    1d4c:	64 ef       	ldi	r22, 0xF4	; 244
    1d4e:	71 e0       	ldi	r23, 0x01	; 1
    1d50:	80 e0       	ldi	r24, 0x00	; 0
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1d58:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			TickFct_Machine4();
    1d5c:	40 d9       	rcall	.-3456   	; 0xfde <TickFct_Machine4>
			while(!TimerFlag);
    1d5e:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1d62:	88 23       	and	r24, r24
    1d64:	e1 f3       	breq	.-8      	; 0x1d5e <main+0x154>
			TimerFlag = 0;
    1d66:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1d6a:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1d6e:	86 30       	cpi	r24, 0x06	; 6
    1d70:	69 f3       	breq	.-38     	; 0x1d4c <main+0x142>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1d72:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1d76:	87 30       	cpi	r24, 0x07	; 7
    1d78:	99 f4       	brne	.+38     	; 0x1da0 <main+0x196>
		{
			TimerSet(200);
    1d7a:	68 ec       	ldi	r22, 0xC8	; 200
    1d7c:	70 e0       	ldi	r23, 0x00	; 0
    1d7e:	80 e0       	ldi	r24, 0x00	; 0
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1d86:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			ButtonPress4();
    1d8a:	af d9       	rcall	.-3234   	; 0x10ea <ButtonPress4>
			while(!TimerFlag);
    1d8c:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1d90:	88 23       	and	r24, r24
    1d92:	e1 f3       	breq	.-8      	; 0x1d8c <main+0x182>
			TimerFlag = 0;
    1d94:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1d98:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1d9c:	87 30       	cpi	r24, 0x07	; 7
    1d9e:	69 f3       	breq	.-38     	; 0x1d7a <main+0x170>
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1da0:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1da4:	88 30       	cpi	r24, 0x08	; 8
    1da6:	99 f4       	brne	.+38     	; 0x1dce <main+0x1c4>
		{
			TimerSet(500);
    1da8:	64 ef       	ldi	r22, 0xF4	; 244
    1daa:	71 e0       	ldi	r23, 0x01	; 1
    1dac:	80 e0       	ldi	r24, 0x00	; 0
    1dae:	90 e0       	ldi	r25, 0x00	; 0
    1db0:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1db4:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			TickFct_Machine5();
    1db8:	c8 db       	rcall	.-2160   	; 0x154a <TickFct_Machine5>
			while(!TimerFlag);
    1dba:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1dbe:	88 23       	and	r24, r24
    1dc0:	e1 f3       	breq	.-8      	; 0x1dba <main+0x1b0>
			TimerFlag = 0;
    1dc2:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1dc6:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1dca:	88 30       	cpi	r24, 0x08	; 8
    1dcc:	69 f3       	breq	.-38     	; 0x1da8 <main+0x19e>
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1dce:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1dd2:	89 30       	cpi	r24, 0x09	; 9
    1dd4:	99 f4       	brne	.+38     	; 0x1dfc <main+0x1f2>
		{
			TimerSet(300);
    1dd6:	6c e2       	ldi	r22, 0x2C	; 44
    1dd8:	71 e0       	ldi	r23, 0x01	; 1
    1dda:	80 e0       	ldi	r24, 0x00	; 0
    1ddc:	90 e0       	ldi	r25, 0x00	; 0
    1dde:	0e 94 dd 01 	call	0x3ba	; 0x3ba <TimerSet>
			TimerOn();
    1de2:	0e 94 7d 01 	call	0x2fa	; 0x2fa <TimerOn>
			ButtonPress5();
    1de6:	4f dc       	rcall	.-1890   	; 0x1686 <ButtonPress5>
			while(!TimerFlag);
    1de8:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <TimerFlag>
    1dec:	88 23       	and	r24, r24
    1dee:	e1 f3       	breq	.-8      	; 0x1de8 <main+0x1de>
			TimerFlag = 0;
    1df0:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <TimerFlag>
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1df4:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
    1df8:	89 30       	cpi	r24, 0x09	; 9
    1dfa:	69 f3       	breq	.-38     	; 0x1dd6 <main+0x1cc>
			TimerOn();
			ButtonPress5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		if(global_g == 20)
    1dfc:	84 31       	cpi	r24, 0x14	; 20
    1dfe:	29 f4       	brne	.+10     	; 0x1e0a <main+0x200>
		{
			LCD_DisplayString(1, "Fail! You lost..Highest Score: 4");
    1e00:	65 ea       	ldi	r22, 0xA5	; 165
    1e02:	71 e0       	ldi	r23, 0x01	; 1
    1e04:	81 e0       	ldi	r24, 0x01	; 1
    1e06:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LCD_DisplayString>
		}
	}
	return 0;
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	08 95       	ret

00001e10 <__tablejump2__>:
    1e10:	ee 0f       	add	r30, r30
    1e12:	ff 1f       	adc	r31, r31
    1e14:	00 24       	eor	r0, r0
    1e16:	00 1c       	adc	r0, r0
    1e18:	0b be       	out	0x3b, r0	; 59
    1e1a:	07 90       	elpm	r0, Z+
    1e1c:	f6 91       	elpm	r31, Z
    1e1e:	e0 2d       	mov	r30, r0
    1e20:	09 94       	ijmp

00001e22 <_exit>:
    1e22:	f8 94       	cli

00001e24 <__stop_program>:
    1e24:	ff cf       	rjmp	.-2      	; 0x1e24 <__stop_program>
